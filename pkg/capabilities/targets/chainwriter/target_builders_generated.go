// Code generated by github.com/smartcontractkit/chainlink-common/pkg/capabilities/cli, DO NOT EDIT.

package chainwriter

import (
	"github.com/smartcontractkit/chainlink-common/pkg/capabilities"
	"github.com/smartcontractkit/chainlink-common/pkg/capabilities/consensus/ocr3/ocr3cap"
	"github.com/smartcontractkit/chainlink-common/pkg/workflows/sdk"
)

func (cfg TargetConfig) New(w *sdk.WorkflowSpecFactory, id string, input TargetInput) {

	def := sdk.StepDefinition{
		ID:     id,
		Inputs: input.ToSteps(),
		Config: map[string]any{
			"address":    cfg.Address,
			"deltaStage": cfg.DeltaStage,
			"schedule":   cfg.Schedule,
		},
		CapabilityType: capabilities.CapabilityTypeTarget,
	}

	step := sdk.Step[struct{}]{Definition: def}
	step.AddTo(w)
}

type TargetInput struct {
	SignedReport sdk.CapDefinition[ocr3cap.SignedReport]
}

func (input TargetInput) ToSteps() sdk.StepInputs {
	return sdk.StepInputs{
		Mapping: map[string]any{
			"signed_report": input.SignedReport.Ref(),
		},
	}
}
