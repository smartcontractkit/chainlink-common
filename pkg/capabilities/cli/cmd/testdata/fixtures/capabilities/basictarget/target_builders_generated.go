// Code generated by github.com/smartcontractkit/chainlink-common/pkg/capabilities/cli, DO NOT EDIT.

package basictarget

import (
	"github.com/smartcontractkit/chainlink-common/pkg/capabilities"
	sdk "github.com/smartcontractkit/chainlink-common/pkg/workflows/sdk/legacy"
)

func (cfg TargetConfig) New(w *sdk.WorkflowSpecFactory, input TargetInput) {

	def := sdk.StepDefinition{
		ID:     "basic-test-target@1.0.0",
		Inputs: input.ToSteps(),
		Config: map[string]any{
			"name":   cfg.Name,
			"number": cfg.Number,
		},
		CapabilityType: capabilities.CapabilityTypeTarget,
	}

	step := sdk.Step[struct{}]{Definition: def}
	step.AddTo(w)
}

type TargetInput struct {
	CoolInput sdk.CapDefinition[string]
}

func (input TargetInput) ToSteps() sdk.StepInputs {
	return sdk.StepInputs{
		Mapping: map[string]any{
			"cool_input": input.CoolInput.Ref(),
		},
	}
}
