// Code generated by github.com/smartcontractkit/chainlink-common/pkg/capabilities/v2/protoc, DO NOT EDIT.

package nodetrigger

import (
	"google.golang.org/protobuf/types/known/anypb"

	"github.com/smartcontractkit/chainlink-common/pkg/workflows/sdk/v2"
)

type NodeEvent struct {
	// TODO: https://smartcontract-it.atlassian.net/browse/CAPPL-799 allow defaults for capaiblities
	// TODO: https://smartcontract-it.atlassian.net/browse/CAPPL-797 ID should be allowed to require a parameter.
}

func (c NodeEvent) Trigger(config *Config) sdk.NodeTrigger[*Outputs] {
	configAny, _ := anypb.New(config)
	return &nodeEventTrigger{
		config: configAny,
	}
}

type nodeEventTrigger struct {
	config *anypb.Any
}

func (*nodeEventTrigger) IsNodeTrigger() {}

func (*nodeEventTrigger) NewT() *Outputs {
	return &Outputs{}
}

func (*nodeEventTrigger) Id() string {
	return "basic-test-node-trigger@1.0.0"
}

func (*nodeEventTrigger) Method() string {
	return "Trigger"
}

func (t *nodeEventTrigger) ConfigAsAny() *anypb.Any {
	return t.config
}
