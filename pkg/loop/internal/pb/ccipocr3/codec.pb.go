// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: codec.proto

package ccipocr3pb

import (
	pb "github.com/smartcontractkit/chainlink-protos/cre/go/values/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ChainSpecificAddressCodec messages
type AddressBytesToStringRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       []byte                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressBytesToStringRequest) Reset() {
	*x = AddressBytesToStringRequest{}
	mi := &file_codec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressBytesToStringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressBytesToStringRequest) ProtoMessage() {}

func (x *AddressBytesToStringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressBytesToStringRequest.ProtoReflect.Descriptor instead.
func (*AddressBytesToStringRequest) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{0}
}

func (x *AddressBytesToStringRequest) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type AddressBytesToStringResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AddressString string                 `protobuf:"bytes,1,opt,name=address_string,json=addressString,proto3" json:"address_string,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressBytesToStringResponse) Reset() {
	*x = AddressBytesToStringResponse{}
	mi := &file_codec_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressBytesToStringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressBytesToStringResponse) ProtoMessage() {}

func (x *AddressBytesToStringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressBytesToStringResponse.ProtoReflect.Descriptor instead.
func (*AddressBytesToStringResponse) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{1}
}

func (x *AddressBytesToStringResponse) GetAddressString() string {
	if x != nil {
		return x.AddressString
	}
	return ""
}

type AddressStringToBytesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AddressString string                 `protobuf:"bytes,1,opt,name=address_string,json=addressString,proto3" json:"address_string,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressStringToBytesRequest) Reset() {
	*x = AddressStringToBytesRequest{}
	mi := &file_codec_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressStringToBytesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressStringToBytesRequest) ProtoMessage() {}

func (x *AddressStringToBytesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressStringToBytesRequest.ProtoReflect.Descriptor instead.
func (*AddressStringToBytesRequest) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{2}
}

func (x *AddressStringToBytesRequest) GetAddressString() string {
	if x != nil {
		return x.AddressString
	}
	return ""
}

type AddressStringToBytesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       []byte                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressStringToBytesResponse) Reset() {
	*x = AddressStringToBytesResponse{}
	mi := &file_codec_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressStringToBytesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressStringToBytesResponse) ProtoMessage() {}

func (x *AddressStringToBytesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressStringToBytesResponse.ProtoReflect.Descriptor instead.
func (*AddressStringToBytesResponse) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{3}
}

func (x *AddressStringToBytesResponse) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type OracleIDAsAddressBytesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OracleId      uint32                 `protobuf:"varint,1,opt,name=oracle_id,json=oracleId,proto3" json:"oracle_id,omitempty"` // uint8 but proto doesn't support it
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OracleIDAsAddressBytesRequest) Reset() {
	*x = OracleIDAsAddressBytesRequest{}
	mi := &file_codec_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OracleIDAsAddressBytesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OracleIDAsAddressBytesRequest) ProtoMessage() {}

func (x *OracleIDAsAddressBytesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OracleIDAsAddressBytesRequest.ProtoReflect.Descriptor instead.
func (*OracleIDAsAddressBytesRequest) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{4}
}

func (x *OracleIDAsAddressBytesRequest) GetOracleId() uint32 {
	if x != nil {
		return x.OracleId
	}
	return 0
}

type OracleIDAsAddressBytesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       []byte                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OracleIDAsAddressBytesResponse) Reset() {
	*x = OracleIDAsAddressBytesResponse{}
	mi := &file_codec_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OracleIDAsAddressBytesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OracleIDAsAddressBytesResponse) ProtoMessage() {}

func (x *OracleIDAsAddressBytesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OracleIDAsAddressBytesResponse.ProtoReflect.Descriptor instead.
func (*OracleIDAsAddressBytesResponse) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{5}
}

func (x *OracleIDAsAddressBytesResponse) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type TransmitterBytesToStringRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transmitter   []byte                 `protobuf:"bytes,1,opt,name=transmitter,proto3" json:"transmitter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransmitterBytesToStringRequest) Reset() {
	*x = TransmitterBytesToStringRequest{}
	mi := &file_codec_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransmitterBytesToStringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransmitterBytesToStringRequest) ProtoMessage() {}

func (x *TransmitterBytesToStringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransmitterBytesToStringRequest.ProtoReflect.Descriptor instead.
func (*TransmitterBytesToStringRequest) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{6}
}

func (x *TransmitterBytesToStringRequest) GetTransmitter() []byte {
	if x != nil {
		return x.Transmitter
	}
	return nil
}

type TransmitterBytesToStringResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TransmitterString string                 `protobuf:"bytes,1,opt,name=transmitter_string,json=transmitterString,proto3" json:"transmitter_string,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TransmitterBytesToStringResponse) Reset() {
	*x = TransmitterBytesToStringResponse{}
	mi := &file_codec_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransmitterBytesToStringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransmitterBytesToStringResponse) ProtoMessage() {}

func (x *TransmitterBytesToStringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransmitterBytesToStringResponse.ProtoReflect.Descriptor instead.
func (*TransmitterBytesToStringResponse) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{7}
}

func (x *TransmitterBytesToStringResponse) GetTransmitterString() string {
	if x != nil {
		return x.TransmitterString
	}
	return ""
}

// ExecutePluginCodec messages
type EncodeExecutePluginReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Report        *ExecutePluginReport   `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncodeExecutePluginReportRequest) Reset() {
	*x = EncodeExecutePluginReportRequest{}
	mi := &file_codec_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncodeExecutePluginReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeExecutePluginReportRequest) ProtoMessage() {}

func (x *EncodeExecutePluginReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeExecutePluginReportRequest.ProtoReflect.Descriptor instead.
func (*EncodeExecutePluginReportRequest) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{8}
}

func (x *EncodeExecutePluginReportRequest) GetReport() *ExecutePluginReport {
	if x != nil {
		return x.Report
	}
	return nil
}

type EncodeExecutePluginReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EncodedReport []byte                 `protobuf:"bytes,1,opt,name=encoded_report,json=encodedReport,proto3" json:"encoded_report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncodeExecutePluginReportResponse) Reset() {
	*x = EncodeExecutePluginReportResponse{}
	mi := &file_codec_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncodeExecutePluginReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeExecutePluginReportResponse) ProtoMessage() {}

func (x *EncodeExecutePluginReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeExecutePluginReportResponse.ProtoReflect.Descriptor instead.
func (*EncodeExecutePluginReportResponse) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{9}
}

func (x *EncodeExecutePluginReportResponse) GetEncodedReport() []byte {
	if x != nil {
		return x.EncodedReport
	}
	return nil
}

type DecodeExecutePluginReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EncodedReport []byte                 `protobuf:"bytes,1,opt,name=encoded_report,json=encodedReport,proto3" json:"encoded_report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodeExecutePluginReportRequest) Reset() {
	*x = DecodeExecutePluginReportRequest{}
	mi := &file_codec_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodeExecutePluginReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeExecutePluginReportRequest) ProtoMessage() {}

func (x *DecodeExecutePluginReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeExecutePluginReportRequest.ProtoReflect.Descriptor instead.
func (*DecodeExecutePluginReportRequest) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{10}
}

func (x *DecodeExecutePluginReportRequest) GetEncodedReport() []byte {
	if x != nil {
		return x.EncodedReport
	}
	return nil
}

type DecodeExecutePluginReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Report        *ExecutePluginReport   `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodeExecutePluginReportResponse) Reset() {
	*x = DecodeExecutePluginReportResponse{}
	mi := &file_codec_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodeExecutePluginReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeExecutePluginReportResponse) ProtoMessage() {}

func (x *DecodeExecutePluginReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeExecutePluginReportResponse.ProtoReflect.Descriptor instead.
func (*DecodeExecutePluginReportResponse) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{11}
}

func (x *DecodeExecutePluginReportResponse) GetReport() *ExecutePluginReport {
	if x != nil {
		return x.Report
	}
	return nil
}

// TokenDataEncoder messages
type EncodeUSDCRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       []byte                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Attestation   []byte                 `protobuf:"bytes,2,opt,name=attestation,proto3" json:"attestation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncodeUSDCRequest) Reset() {
	*x = EncodeUSDCRequest{}
	mi := &file_codec_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncodeUSDCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeUSDCRequest) ProtoMessage() {}

func (x *EncodeUSDCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeUSDCRequest.ProtoReflect.Descriptor instead.
func (*EncodeUSDCRequest) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{12}
}

func (x *EncodeUSDCRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *EncodeUSDCRequest) GetAttestation() []byte {
	if x != nil {
		return x.Attestation
	}
	return nil
}

type EncodeUSDCResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EncodedData   []byte                 `protobuf:"bytes,1,opt,name=encoded_data,json=encodedData,proto3" json:"encoded_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncodeUSDCResponse) Reset() {
	*x = EncodeUSDCResponse{}
	mi := &file_codec_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncodeUSDCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeUSDCResponse) ProtoMessage() {}

func (x *EncodeUSDCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeUSDCResponse.ProtoReflect.Descriptor instead.
func (*EncodeUSDCResponse) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{13}
}

func (x *EncodeUSDCResponse) GetEncodedData() []byte {
	if x != nil {
		return x.EncodedData
	}
	return nil
}

// SourceChainExtraDataCodec messages
type DecodeExtraArgsToMapRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExtraArgs     []byte                 `protobuf:"bytes,1,opt,name=extra_args,json=extraArgs,proto3" json:"extra_args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodeExtraArgsToMapRequest) Reset() {
	*x = DecodeExtraArgsToMapRequest{}
	mi := &file_codec_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodeExtraArgsToMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeExtraArgsToMapRequest) ProtoMessage() {}

func (x *DecodeExtraArgsToMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeExtraArgsToMapRequest.ProtoReflect.Descriptor instead.
func (*DecodeExtraArgsToMapRequest) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{14}
}

func (x *DecodeExtraArgsToMapRequest) GetExtraArgs() []byte {
	if x != nil {
		return x.ExtraArgs
	}
	return nil
}

type DecodeExtraArgsToMapResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DecodedMap    *pb.Map                `protobuf:"bytes,1,opt,name=decoded_map,json=decodedMap,proto3" json:"decoded_map,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodeExtraArgsToMapResponse) Reset() {
	*x = DecodeExtraArgsToMapResponse{}
	mi := &file_codec_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodeExtraArgsToMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeExtraArgsToMapResponse) ProtoMessage() {}

func (x *DecodeExtraArgsToMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeExtraArgsToMapResponse.ProtoReflect.Descriptor instead.
func (*DecodeExtraArgsToMapResponse) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{15}
}

func (x *DecodeExtraArgsToMapResponse) GetDecodedMap() *pb.Map {
	if x != nil {
		return x.DecodedMap
	}
	return nil
}

type DecodeDestExecDataToMapRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DestExecData  []byte                 `protobuf:"bytes,1,opt,name=dest_exec_data,json=destExecData,proto3" json:"dest_exec_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodeDestExecDataToMapRequest) Reset() {
	*x = DecodeDestExecDataToMapRequest{}
	mi := &file_codec_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodeDestExecDataToMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeDestExecDataToMapRequest) ProtoMessage() {}

func (x *DecodeDestExecDataToMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeDestExecDataToMapRequest.ProtoReflect.Descriptor instead.
func (*DecodeDestExecDataToMapRequest) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{16}
}

func (x *DecodeDestExecDataToMapRequest) GetDestExecData() []byte {
	if x != nil {
		return x.DestExecData
	}
	return nil
}

type DecodeDestExecDataToMapResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DecodedMap    *pb.Map                `protobuf:"bytes,1,opt,name=decoded_map,json=decodedMap,proto3" json:"decoded_map,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodeDestExecDataToMapResponse) Reset() {
	*x = DecodeDestExecDataToMapResponse{}
	mi := &file_codec_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodeDestExecDataToMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeDestExecDataToMapResponse) ProtoMessage() {}

func (x *DecodeDestExecDataToMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeDestExecDataToMapResponse.ProtoReflect.Descriptor instead.
func (*DecodeDestExecDataToMapResponse) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{17}
}

func (x *DecodeDestExecDataToMapResponse) GetDecodedMap() *pb.Map {
	if x != nil {
		return x.DecodedMap
	}
	return nil
}

// Supporting types
type ExecutePluginReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainReports  []*ChainReport         `protobuf:"bytes,1,rep,name=chain_reports,json=chainReports,proto3" json:"chain_reports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutePluginReport) Reset() {
	*x = ExecutePluginReport{}
	mi := &file_codec_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutePluginReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutePluginReport) ProtoMessage() {}

func (x *ExecutePluginReport) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutePluginReport.ProtoReflect.Descriptor instead.
func (*ExecutePluginReport) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{18}
}

func (x *ExecutePluginReport) GetChainReports() []*ChainReport {
	if x != nil {
		return x.ChainReports
	}
	return nil
}

type ChainReport struct {
	state               protoimpl.MessageState      `protogen:"open.v1"`
	SourceChainSelector uint64                      `protobuf:"varint,1,opt,name=source_chain_selector,json=sourceChainSelector,proto3" json:"source_chain_selector,omitempty"`
	Messages            []*Message                  `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	OffchainTokenData   []*MessageOffchainTokenData `protobuf:"bytes,3,rep,name=offchain_token_data,json=offchainTokenData,proto3" json:"offchain_token_data,omitempty"`
	Proofs              [][]byte                    `protobuf:"bytes,4,rep,name=proofs,proto3" json:"proofs,omitempty"`
	ProofFlagBits       *BigInt                     `protobuf:"bytes,5,opt,name=proof_flag_bits,json=proofFlagBits,proto3" json:"proof_flag_bits,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ChainReport) Reset() {
	*x = ChainReport{}
	mi := &file_codec_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainReport) ProtoMessage() {}

func (x *ChainReport) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainReport.ProtoReflect.Descriptor instead.
func (*ChainReport) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{19}
}

func (x *ChainReport) GetSourceChainSelector() uint64 {
	if x != nil {
		return x.SourceChainSelector
	}
	return 0
}

func (x *ChainReport) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ChainReport) GetOffchainTokenData() []*MessageOffchainTokenData {
	if x != nil {
		return x.OffchainTokenData
	}
	return nil
}

func (x *ChainReport) GetProofs() [][]byte {
	if x != nil {
		return x.Proofs
	}
	return nil
}

func (x *ChainReport) GetProofFlagBits() *BigInt {
	if x != nil {
		return x.ProofFlagBits
	}
	return nil
}

// MessageOffchainTokenData maintains the per-message token data mapping
type MessageOffchainTokenData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TokenData     [][]byte               `protobuf:"bytes,1,rep,name=token_data,json=tokenData,proto3" json:"token_data,omitempty"` // All tokens for this specific message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageOffchainTokenData) Reset() {
	*x = MessageOffchainTokenData{}
	mi := &file_codec_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageOffchainTokenData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOffchainTokenData) ProtoMessage() {}

func (x *MessageOffchainTokenData) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOffchainTokenData.ProtoReflect.Descriptor instead.
func (*MessageOffchainTokenData) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{20}
}

func (x *MessageOffchainTokenData) GetTokenData() [][]byte {
	if x != nil {
		return x.TokenData
	}
	return nil
}

// ExtraDataCodecRegistryService messages
type RegisterChainFamilyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainFamily   string                 `protobuf:"bytes,1,opt,name=chain_family,json=chainFamily,proto3" json:"chain_family,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterChainFamilyRequest) Reset() {
	*x = RegisterChainFamilyRequest{}
	mi := &file_codec_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterChainFamilyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterChainFamilyRequest) ProtoMessage() {}

func (x *RegisterChainFamilyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterChainFamilyRequest.ProtoReflect.Descriptor instead.
func (*RegisterChainFamilyRequest) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{21}
}

func (x *RegisterChainFamilyRequest) GetChainFamily() string {
	if x != nil {
		return x.ChainFamily
	}
	return ""
}

type RegisterChainFamilyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterChainFamilyResponse) Reset() {
	*x = RegisterChainFamilyResponse{}
	mi := &file_codec_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterChainFamilyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterChainFamilyResponse) ProtoMessage() {}

func (x *RegisterChainFamilyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterChainFamilyResponse.ProtoReflect.Descriptor instead.
func (*RegisterChainFamilyResponse) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{22}
}

type SetSourceChainCodecRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainFamily   string                 `protobuf:"bytes,1,opt,name=chain_family,json=chainFamily,proto3" json:"chain_family,omitempty"`
	CodecId       uint32                 `protobuf:"varint,2,opt,name=codec_id,json=codecId,proto3" json:"codec_id,omitempty"` // ID of the SourceChainExtraDataCodec service
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSourceChainCodecRequest) Reset() {
	*x = SetSourceChainCodecRequest{}
	mi := &file_codec_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSourceChainCodecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSourceChainCodecRequest) ProtoMessage() {}

func (x *SetSourceChainCodecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSourceChainCodecRequest.ProtoReflect.Descriptor instead.
func (*SetSourceChainCodecRequest) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{23}
}

func (x *SetSourceChainCodecRequest) GetChainFamily() string {
	if x != nil {
		return x.ChainFamily
	}
	return ""
}

func (x *SetSourceChainCodecRequest) GetCodecId() uint32 {
	if x != nil {
		return x.CodecId
	}
	return 0
}

type SetSourceChainCodecResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSourceChainCodecResponse) Reset() {
	*x = SetSourceChainCodecResponse{}
	mi := &file_codec_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSourceChainCodecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSourceChainCodecResponse) ProtoMessage() {}

func (x *SetSourceChainCodecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSourceChainCodecResponse.ProtoReflect.Descriptor instead.
func (*SetSourceChainCodecResponse) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{24}
}

type GetExtraDataCodecRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExtraDataCodecRequest) Reset() {
	*x = GetExtraDataCodecRequest{}
	mi := &file_codec_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExtraDataCodecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExtraDataCodecRequest) ProtoMessage() {}

func (x *GetExtraDataCodecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExtraDataCodecRequest.ProtoReflect.Descriptor instead.
func (*GetExtraDataCodecRequest) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{25}
}

type GetExtraDataCodecResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CodecMap      map[string]uint32      `protobuf:"bytes,1,rep,name=codec_map,json=codecMap,proto3" json:"codec_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // map[chain_family]codec_id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExtraDataCodecResponse) Reset() {
	*x = GetExtraDataCodecResponse{}
	mi := &file_codec_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExtraDataCodecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExtraDataCodecResponse) ProtoMessage() {}

func (x *GetExtraDataCodecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codec_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExtraDataCodecResponse.ProtoReflect.Descriptor instead.
func (*GetExtraDataCodecResponse) Descriptor() ([]byte, []int) {
	return file_codec_proto_rawDescGZIP(), []int{26}
}

func (x *GetExtraDataCodecResponse) GetCodecMap() map[string]uint32 {
	if x != nil {
		return x.CodecMap
	}
	return nil
}

var File_codec_proto protoreflect.FileDescriptor

const file_codec_proto_rawDesc = "" +
	"\n" +
	"\vcodec.proto\x12\x19loop.internal.pb.ccipocr3\x1a\fmodels.proto\x1a\x16values/v1/values.proto\"7\n" +
	"\x1bAddressBytesToStringRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\"E\n" +
	"\x1cAddressBytesToStringResponse\x12%\n" +
	"\x0eaddress_string\x18\x01 \x01(\tR\raddressString\"D\n" +
	"\x1bAddressStringToBytesRequest\x12%\n" +
	"\x0eaddress_string\x18\x01 \x01(\tR\raddressString\"8\n" +
	"\x1cAddressStringToBytesResponse\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\"<\n" +
	"\x1dOracleIDAsAddressBytesRequest\x12\x1b\n" +
	"\toracle_id\x18\x01 \x01(\rR\boracleId\":\n" +
	"\x1eOracleIDAsAddressBytesResponse\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\"C\n" +
	"\x1fTransmitterBytesToStringRequest\x12 \n" +
	"\vtransmitter\x18\x01 \x01(\fR\vtransmitter\"Q\n" +
	" TransmitterBytesToStringResponse\x12-\n" +
	"\x12transmitter_string\x18\x01 \x01(\tR\x11transmitterString\"j\n" +
	" EncodeExecutePluginReportRequest\x12F\n" +
	"\x06report\x18\x01 \x01(\v2..loop.internal.pb.ccipocr3.ExecutePluginReportR\x06report\"J\n" +
	"!EncodeExecutePluginReportResponse\x12%\n" +
	"\x0eencoded_report\x18\x01 \x01(\fR\rencodedReport\"I\n" +
	" DecodeExecutePluginReportRequest\x12%\n" +
	"\x0eencoded_report\x18\x01 \x01(\fR\rencodedReport\"k\n" +
	"!DecodeExecutePluginReportResponse\x12F\n" +
	"\x06report\x18\x01 \x01(\v2..loop.internal.pb.ccipocr3.ExecutePluginReportR\x06report\"O\n" +
	"\x11EncodeUSDCRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\fR\amessage\x12 \n" +
	"\vattestation\x18\x02 \x01(\fR\vattestation\"7\n" +
	"\x12EncodeUSDCResponse\x12!\n" +
	"\fencoded_data\x18\x01 \x01(\fR\vencodedData\"<\n" +
	"\x1bDecodeExtraArgsToMapRequest\x12\x1d\n" +
	"\n" +
	"extra_args\x18\x01 \x01(\fR\textraArgs\"O\n" +
	"\x1cDecodeExtraArgsToMapResponse\x12/\n" +
	"\vdecoded_map\x18\x01 \x01(\v2\x0e.values.v1.MapR\n" +
	"decodedMap\"F\n" +
	"\x1eDecodeDestExecDataToMapRequest\x12$\n" +
	"\x0edest_exec_data\x18\x01 \x01(\fR\fdestExecData\"R\n" +
	"\x1fDecodeDestExecDataToMapResponse\x12/\n" +
	"\vdecoded_map\x18\x01 \x01(\v2\x0e.values.v1.MapR\n" +
	"decodedMap\"b\n" +
	"\x13ExecutePluginReport\x12K\n" +
	"\rchain_reports\x18\x01 \x03(\v2&.loop.internal.pb.ccipocr3.ChainReportR\fchainReports\"\xc9\x02\n" +
	"\vChainReport\x122\n" +
	"\x15source_chain_selector\x18\x01 \x01(\x04R\x13sourceChainSelector\x12>\n" +
	"\bmessages\x18\x02 \x03(\v2\".loop.internal.pb.ccipocr3.MessageR\bmessages\x12c\n" +
	"\x13offchain_token_data\x18\x03 \x03(\v23.loop.internal.pb.ccipocr3.MessageOffchainTokenDataR\x11offchainTokenData\x12\x16\n" +
	"\x06proofs\x18\x04 \x03(\fR\x06proofs\x12I\n" +
	"\x0fproof_flag_bits\x18\x05 \x01(\v2!.loop.internal.pb.ccipocr3.BigIntR\rproofFlagBits\"9\n" +
	"\x18MessageOffchainTokenData\x12\x1d\n" +
	"\n" +
	"token_data\x18\x01 \x03(\fR\ttokenData\"?\n" +
	"\x1aRegisterChainFamilyRequest\x12!\n" +
	"\fchain_family\x18\x01 \x01(\tR\vchainFamily\"\x1d\n" +
	"\x1bRegisterChainFamilyResponse\"Z\n" +
	"\x1aSetSourceChainCodecRequest\x12!\n" +
	"\fchain_family\x18\x01 \x01(\tR\vchainFamily\x12\x19\n" +
	"\bcodec_id\x18\x02 \x01(\rR\acodecId\"\x1d\n" +
	"\x1bSetSourceChainCodecResponse\"\x1a\n" +
	"\x18GetExtraDataCodecRequest\"\xb9\x01\n" +
	"\x19GetExtraDataCodecResponse\x12_\n" +
	"\tcodec_map\x18\x01 \x03(\v2B.loop.internal.pb.ccipocr3.GetExtraDataCodecResponse.CodecMapEntryR\bcodecMap\x1a;\n" +
	"\rCodecMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x012\xd5\x04\n" +
	"\x19ChainSpecificAddressCodec\x12\x87\x01\n" +
	"\x14AddressBytesToString\x126.loop.internal.pb.ccipocr3.AddressBytesToStringRequest\x1a7.loop.internal.pb.ccipocr3.AddressBytesToStringResponse\x12\x87\x01\n" +
	"\x14AddressStringToBytes\x126.loop.internal.pb.ccipocr3.AddressStringToBytesRequest\x1a7.loop.internal.pb.ccipocr3.AddressStringToBytesResponse\x12\x8d\x01\n" +
	"\x16OracleIDAsAddressBytes\x128.loop.internal.pb.ccipocr3.OracleIDAsAddressBytesRequest\x1a9.loop.internal.pb.ccipocr3.OracleIDAsAddressBytesResponse\x12\x93\x01\n" +
	"\x18TransmitterBytesToString\x12:.loop.internal.pb.ccipocr3.TransmitterBytesToStringRequest\x1a;.loop.internal.pb.ccipocr3.TransmitterBytesToStringResponse2\xa0\x02\n" +
	"\x12ExecutePluginCodec\x12\x83\x01\n" +
	"\x06Encode\x12;.loop.internal.pb.ccipocr3.EncodeExecutePluginReportRequest\x1a<.loop.internal.pb.ccipocr3.EncodeExecutePluginReportResponse\x12\x83\x01\n" +
	"\x06Decode\x12;.loop.internal.pb.ccipocr3.DecodeExecutePluginReportRequest\x1a<.loop.internal.pb.ccipocr3.DecodeExecutePluginReportResponse2}\n" +
	"\x10TokenDataEncoder\x12i\n" +
	"\n" +
	"EncodeUSDC\x12,.loop.internal.pb.ccipocr3.EncodeUSDCRequest\x1a-.loop.internal.pb.ccipocr3.EncodeUSDCResponse2\xb8\x02\n" +
	"\x19SourceChainExtraDataCodec\x12\x87\x01\n" +
	"\x14DecodeExtraArgsToMap\x126.loop.internal.pb.ccipocr3.DecodeExtraArgsToMapRequest\x1a7.loop.internal.pb.ccipocr3.DecodeExtraArgsToMapResponse\x12\x90\x01\n" +
	"\x17DecodeDestExecDataToMap\x129.loop.internal.pb.ccipocr3.DecodeDestExecDataToMapRequest\x1a:.loop.internal.pb.ccipocr3.DecodeDestExecDataToMapResponse2\xad\x03\n" +
	"\x1dExtraDataCodecRegistryService\x12\x84\x01\n" +
	"\x13RegisterChainFamily\x125.loop.internal.pb.ccipocr3.RegisterChainFamilyRequest\x1a6.loop.internal.pb.ccipocr3.RegisterChainFamilyResponse\x12\x84\x01\n" +
	"\x13SetSourceChainCodec\x125.loop.internal.pb.ccipocr3.SetSourceChainCodecRequest\x1a6.loop.internal.pb.ccipocr3.SetSourceChainCodecResponse\x12~\n" +
	"\x11GetExtraDataCodec\x123.loop.internal.pb.ccipocr3.GetExtraDataCodecRequest\x1a4.loop.internal.pb.ccipocr3.GetExtraDataCodecResponseBWZUgithub.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/ccipocr3;ccipocr3pbb\x06proto3"

var (
	file_codec_proto_rawDescOnce sync.Once
	file_codec_proto_rawDescData []byte
)

func file_codec_proto_rawDescGZIP() []byte {
	file_codec_proto_rawDescOnce.Do(func() {
		file_codec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_codec_proto_rawDesc), len(file_codec_proto_rawDesc)))
	})
	return file_codec_proto_rawDescData
}

var file_codec_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_codec_proto_goTypes = []any{
	(*AddressBytesToStringRequest)(nil),       // 0: loop.internal.pb.ccipocr3.AddressBytesToStringRequest
	(*AddressBytesToStringResponse)(nil),      // 1: loop.internal.pb.ccipocr3.AddressBytesToStringResponse
	(*AddressStringToBytesRequest)(nil),       // 2: loop.internal.pb.ccipocr3.AddressStringToBytesRequest
	(*AddressStringToBytesResponse)(nil),      // 3: loop.internal.pb.ccipocr3.AddressStringToBytesResponse
	(*OracleIDAsAddressBytesRequest)(nil),     // 4: loop.internal.pb.ccipocr3.OracleIDAsAddressBytesRequest
	(*OracleIDAsAddressBytesResponse)(nil),    // 5: loop.internal.pb.ccipocr3.OracleIDAsAddressBytesResponse
	(*TransmitterBytesToStringRequest)(nil),   // 6: loop.internal.pb.ccipocr3.TransmitterBytesToStringRequest
	(*TransmitterBytesToStringResponse)(nil),  // 7: loop.internal.pb.ccipocr3.TransmitterBytesToStringResponse
	(*EncodeExecutePluginReportRequest)(nil),  // 8: loop.internal.pb.ccipocr3.EncodeExecutePluginReportRequest
	(*EncodeExecutePluginReportResponse)(nil), // 9: loop.internal.pb.ccipocr3.EncodeExecutePluginReportResponse
	(*DecodeExecutePluginReportRequest)(nil),  // 10: loop.internal.pb.ccipocr3.DecodeExecutePluginReportRequest
	(*DecodeExecutePluginReportResponse)(nil), // 11: loop.internal.pb.ccipocr3.DecodeExecutePluginReportResponse
	(*EncodeUSDCRequest)(nil),                 // 12: loop.internal.pb.ccipocr3.EncodeUSDCRequest
	(*EncodeUSDCResponse)(nil),                // 13: loop.internal.pb.ccipocr3.EncodeUSDCResponse
	(*DecodeExtraArgsToMapRequest)(nil),       // 14: loop.internal.pb.ccipocr3.DecodeExtraArgsToMapRequest
	(*DecodeExtraArgsToMapResponse)(nil),      // 15: loop.internal.pb.ccipocr3.DecodeExtraArgsToMapResponse
	(*DecodeDestExecDataToMapRequest)(nil),    // 16: loop.internal.pb.ccipocr3.DecodeDestExecDataToMapRequest
	(*DecodeDestExecDataToMapResponse)(nil),   // 17: loop.internal.pb.ccipocr3.DecodeDestExecDataToMapResponse
	(*ExecutePluginReport)(nil),               // 18: loop.internal.pb.ccipocr3.ExecutePluginReport
	(*ChainReport)(nil),                       // 19: loop.internal.pb.ccipocr3.ChainReport
	(*MessageOffchainTokenData)(nil),          // 20: loop.internal.pb.ccipocr3.MessageOffchainTokenData
	(*RegisterChainFamilyRequest)(nil),        // 21: loop.internal.pb.ccipocr3.RegisterChainFamilyRequest
	(*RegisterChainFamilyResponse)(nil),       // 22: loop.internal.pb.ccipocr3.RegisterChainFamilyResponse
	(*SetSourceChainCodecRequest)(nil),        // 23: loop.internal.pb.ccipocr3.SetSourceChainCodecRequest
	(*SetSourceChainCodecResponse)(nil),       // 24: loop.internal.pb.ccipocr3.SetSourceChainCodecResponse
	(*GetExtraDataCodecRequest)(nil),          // 25: loop.internal.pb.ccipocr3.GetExtraDataCodecRequest
	(*GetExtraDataCodecResponse)(nil),         // 26: loop.internal.pb.ccipocr3.GetExtraDataCodecResponse
	nil,                                       // 27: loop.internal.pb.ccipocr3.GetExtraDataCodecResponse.CodecMapEntry
	(*pb.Map)(nil),                            // 28: values.v1.Map
	(*Message)(nil),                           // 29: loop.internal.pb.ccipocr3.Message
	(*BigInt)(nil),                            // 30: loop.internal.pb.ccipocr3.BigInt
}
var file_codec_proto_depIdxs = []int32{
	18, // 0: loop.internal.pb.ccipocr3.EncodeExecutePluginReportRequest.report:type_name -> loop.internal.pb.ccipocr3.ExecutePluginReport
	18, // 1: loop.internal.pb.ccipocr3.DecodeExecutePluginReportResponse.report:type_name -> loop.internal.pb.ccipocr3.ExecutePluginReport
	28, // 2: loop.internal.pb.ccipocr3.DecodeExtraArgsToMapResponse.decoded_map:type_name -> values.v1.Map
	28, // 3: loop.internal.pb.ccipocr3.DecodeDestExecDataToMapResponse.decoded_map:type_name -> values.v1.Map
	19, // 4: loop.internal.pb.ccipocr3.ExecutePluginReport.chain_reports:type_name -> loop.internal.pb.ccipocr3.ChainReport
	29, // 5: loop.internal.pb.ccipocr3.ChainReport.messages:type_name -> loop.internal.pb.ccipocr3.Message
	20, // 6: loop.internal.pb.ccipocr3.ChainReport.offchain_token_data:type_name -> loop.internal.pb.ccipocr3.MessageOffchainTokenData
	30, // 7: loop.internal.pb.ccipocr3.ChainReport.proof_flag_bits:type_name -> loop.internal.pb.ccipocr3.BigInt
	27, // 8: loop.internal.pb.ccipocr3.GetExtraDataCodecResponse.codec_map:type_name -> loop.internal.pb.ccipocr3.GetExtraDataCodecResponse.CodecMapEntry
	0,  // 9: loop.internal.pb.ccipocr3.ChainSpecificAddressCodec.AddressBytesToString:input_type -> loop.internal.pb.ccipocr3.AddressBytesToStringRequest
	2,  // 10: loop.internal.pb.ccipocr3.ChainSpecificAddressCodec.AddressStringToBytes:input_type -> loop.internal.pb.ccipocr3.AddressStringToBytesRequest
	4,  // 11: loop.internal.pb.ccipocr3.ChainSpecificAddressCodec.OracleIDAsAddressBytes:input_type -> loop.internal.pb.ccipocr3.OracleIDAsAddressBytesRequest
	6,  // 12: loop.internal.pb.ccipocr3.ChainSpecificAddressCodec.TransmitterBytesToString:input_type -> loop.internal.pb.ccipocr3.TransmitterBytesToStringRequest
	8,  // 13: loop.internal.pb.ccipocr3.ExecutePluginCodec.Encode:input_type -> loop.internal.pb.ccipocr3.EncodeExecutePluginReportRequest
	10, // 14: loop.internal.pb.ccipocr3.ExecutePluginCodec.Decode:input_type -> loop.internal.pb.ccipocr3.DecodeExecutePluginReportRequest
	12, // 15: loop.internal.pb.ccipocr3.TokenDataEncoder.EncodeUSDC:input_type -> loop.internal.pb.ccipocr3.EncodeUSDCRequest
	14, // 16: loop.internal.pb.ccipocr3.SourceChainExtraDataCodec.DecodeExtraArgsToMap:input_type -> loop.internal.pb.ccipocr3.DecodeExtraArgsToMapRequest
	16, // 17: loop.internal.pb.ccipocr3.SourceChainExtraDataCodec.DecodeDestExecDataToMap:input_type -> loop.internal.pb.ccipocr3.DecodeDestExecDataToMapRequest
	21, // 18: loop.internal.pb.ccipocr3.ExtraDataCodecRegistryService.RegisterChainFamily:input_type -> loop.internal.pb.ccipocr3.RegisterChainFamilyRequest
	23, // 19: loop.internal.pb.ccipocr3.ExtraDataCodecRegistryService.SetSourceChainCodec:input_type -> loop.internal.pb.ccipocr3.SetSourceChainCodecRequest
	25, // 20: loop.internal.pb.ccipocr3.ExtraDataCodecRegistryService.GetExtraDataCodec:input_type -> loop.internal.pb.ccipocr3.GetExtraDataCodecRequest
	1,  // 21: loop.internal.pb.ccipocr3.ChainSpecificAddressCodec.AddressBytesToString:output_type -> loop.internal.pb.ccipocr3.AddressBytesToStringResponse
	3,  // 22: loop.internal.pb.ccipocr3.ChainSpecificAddressCodec.AddressStringToBytes:output_type -> loop.internal.pb.ccipocr3.AddressStringToBytesResponse
	5,  // 23: loop.internal.pb.ccipocr3.ChainSpecificAddressCodec.OracleIDAsAddressBytes:output_type -> loop.internal.pb.ccipocr3.OracleIDAsAddressBytesResponse
	7,  // 24: loop.internal.pb.ccipocr3.ChainSpecificAddressCodec.TransmitterBytesToString:output_type -> loop.internal.pb.ccipocr3.TransmitterBytesToStringResponse
	9,  // 25: loop.internal.pb.ccipocr3.ExecutePluginCodec.Encode:output_type -> loop.internal.pb.ccipocr3.EncodeExecutePluginReportResponse
	11, // 26: loop.internal.pb.ccipocr3.ExecutePluginCodec.Decode:output_type -> loop.internal.pb.ccipocr3.DecodeExecutePluginReportResponse
	13, // 27: loop.internal.pb.ccipocr3.TokenDataEncoder.EncodeUSDC:output_type -> loop.internal.pb.ccipocr3.EncodeUSDCResponse
	15, // 28: loop.internal.pb.ccipocr3.SourceChainExtraDataCodec.DecodeExtraArgsToMap:output_type -> loop.internal.pb.ccipocr3.DecodeExtraArgsToMapResponse
	17, // 29: loop.internal.pb.ccipocr3.SourceChainExtraDataCodec.DecodeDestExecDataToMap:output_type -> loop.internal.pb.ccipocr3.DecodeDestExecDataToMapResponse
	22, // 30: loop.internal.pb.ccipocr3.ExtraDataCodecRegistryService.RegisterChainFamily:output_type -> loop.internal.pb.ccipocr3.RegisterChainFamilyResponse
	24, // 31: loop.internal.pb.ccipocr3.ExtraDataCodecRegistryService.SetSourceChainCodec:output_type -> loop.internal.pb.ccipocr3.SetSourceChainCodecResponse
	26, // 32: loop.internal.pb.ccipocr3.ExtraDataCodecRegistryService.GetExtraDataCodec:output_type -> loop.internal.pb.ccipocr3.GetExtraDataCodecResponse
	21, // [21:33] is the sub-list for method output_type
	9,  // [9:21] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_codec_proto_init() }
func file_codec_proto_init() {
	if File_codec_proto != nil {
		return
	}
	file_models_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_codec_proto_rawDesc), len(file_codec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_codec_proto_goTypes,
		DependencyIndexes: file_codec_proto_depIdxs,
		MessageInfos:      file_codec_proto_msgTypes,
	}.Build()
	File_codec_proto = out.File
	file_codec_proto_goTypes = nil
	file_codec_proto_depIdxs = nil
}
