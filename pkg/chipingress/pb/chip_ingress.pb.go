// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: chip_ingress.proto

package pb

import (
	pb "github.com/cloudevents/sdk-go/binding/format/protobuf/v2/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CloudEventBatch is used to send many ChipIngress
type CloudEventBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*pb.CloudEvent       `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloudEventBatch) Reset() {
	*x = CloudEventBatch{}
	mi := &file_chip_ingress_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudEventBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudEventBatch) ProtoMessage() {}

func (x *CloudEventBatch) ProtoReflect() protoreflect.Message {
	mi := &file_chip_ingress_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudEventBatch.ProtoReflect.Descriptor instead.
func (*CloudEventBatch) Descriptor() ([]byte, []int) {
	return file_chip_ingress_proto_rawDescGZIP(), []int{0}
}

func (x *CloudEventBatch) GetEvents() []*pb.CloudEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type PublishResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*PublishResult       `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	mi := &file_chip_ingress_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chip_ingress_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_chip_ingress_proto_rawDescGZIP(), []int{1}
}

func (x *PublishResponse) GetResults() []*PublishResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type PublishResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishResult) Reset() {
	*x = PublishResult{}
	mi := &file_chip_ingress_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResult) ProtoMessage() {}

func (x *PublishResult) ProtoReflect() protoreflect.Message {
	mi := &file_chip_ingress_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResult.ProtoReflect.Descriptor instead.
func (*PublishResult) Descriptor() ([]byte, []int) {
	return file_chip_ingress_proto_rawDescGZIP(), []int{2}
}

func (x *PublishResult) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

// EmptyRequest is just an empty request
type EmptyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	mi := &file_chip_ingress_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chip_ingress_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_chip_ingress_proto_rawDescGZIP(), []int{3}
}

// PingResponse responds to pings
type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_chip_ingress_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chip_ingress_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_chip_ingress_proto_rawDescGZIP(), []int{4}
}

func (x *PingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Define request and response messages for the new streaming endpoint
type StreamEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *pb.CloudEvent         `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEventsRequest) Reset() {
	*x = StreamEventsRequest{}
	mi := &file_chip_ingress_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsRequest) ProtoMessage() {}

func (x *StreamEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chip_ingress_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamEventsRequest) Descriptor() ([]byte, []int) {
	return file_chip_ingress_proto_rawDescGZIP(), []int{5}
}

func (x *StreamEventsRequest) GetEvent() *pb.CloudEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type StreamEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=eventId,proto3" json:"eventId,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // e.g., "success", "error"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEventsResponse) Reset() {
	*x = StreamEventsResponse{}
	mi := &file_chip_ingress_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsResponse) ProtoMessage() {}

func (x *StreamEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chip_ingress_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventsResponse.ProtoReflect.Descriptor instead.
func (*StreamEventsResponse) Descriptor() ([]byte, []int) {
	return file_chip_ingress_proto_rawDescGZIP(), []int{6}
}

func (x *StreamEventsResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *StreamEventsResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_chip_ingress_proto protoreflect.FileDescriptor

const file_chip_ingress_proto_rawDesc = "" +
	"\n" +
	"\x12chip_ingress.proto\x12\x0echipingress.pb\x1aLgithub.com/cloudevents/sdk-go/binding/format/protobuf/v2/pb/cloudevent.proto\"H\n" +
	"\x0fCloudEventBatch\x125\n" +
	"\x06events\x18\x01 \x03(\v2\x1d.io.cloudevents.v1.CloudEventR\x06events\"J\n" +
	"\x0fPublishResponse\x127\n" +
	"\aresults\x18\x01 \x03(\v2\x1d.chipingress.pb.PublishResultR\aresults\")\n" +
	"\rPublishResult\x12\x18\n" +
	"\aeventId\x18\x01 \x01(\tR\aeventId\"\x0e\n" +
	"\fEmptyRequest\"(\n" +
	"\fPingResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"J\n" +
	"\x13StreamEventsRequest\x123\n" +
	"\x05event\x18\x01 \x01(\v2\x1d.io.cloudevents.v1.CloudEventR\x05event\"H\n" +
	"\x14StreamEventsResponse\x12\x18\n" +
	"\aeventId\x18\x01 \x01(\tR\aeventId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status2\xd3\x02\n" +
	"\vChipIngress\x12K\n" +
	"\aPublish\x12\x1d.io.cloudevents.v1.CloudEvent\x1a\x1f.chipingress.pb.PublishResponse\"\x00\x12R\n" +
	"\fPublishBatch\x12\x1f.chipingress.pb.CloudEventBatch\x1a\x1f.chipingress.pb.PublishResponse\"\x00\x12B\n" +
	"\x04Ping\x12\x1c.chipingress.pb.EmptyRequest\x1a\x1c.chipingress.pb.PingResponse\x12_\n" +
	"\fStreamEvents\x12#.chipingress.pb.StreamEventsRequest\x1a$.chipingress.pb.StreamEventsResponse\"\x00(\x010\x01B\x06Z\x04./pbb\x06proto3"

var (
	file_chip_ingress_proto_rawDescOnce sync.Once
	file_chip_ingress_proto_rawDescData []byte
)

func file_chip_ingress_proto_rawDescGZIP() []byte {
	file_chip_ingress_proto_rawDescOnce.Do(func() {
		file_chip_ingress_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chip_ingress_proto_rawDesc), len(file_chip_ingress_proto_rawDesc)))
	})
	return file_chip_ingress_proto_rawDescData
}

var file_chip_ingress_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_chip_ingress_proto_goTypes = []any{
	(*CloudEventBatch)(nil),      // 0: chipingress.pb.CloudEventBatch
	(*PublishResponse)(nil),      // 1: chipingress.pb.PublishResponse
	(*PublishResult)(nil),        // 2: chipingress.pb.PublishResult
	(*EmptyRequest)(nil),         // 3: chipingress.pb.EmptyRequest
	(*PingResponse)(nil),         // 4: chipingress.pb.PingResponse
	(*StreamEventsRequest)(nil),  // 5: chipingress.pb.StreamEventsRequest
	(*StreamEventsResponse)(nil), // 6: chipingress.pb.StreamEventsResponse
	(*pb.CloudEvent)(nil),        // 7: io.cloudevents.v1.CloudEvent
}
var file_chip_ingress_proto_depIdxs = []int32{
	7, // 0: chipingress.pb.CloudEventBatch.events:type_name -> io.cloudevents.v1.CloudEvent
	2, // 1: chipingress.pb.PublishResponse.results:type_name -> chipingress.pb.PublishResult
	7, // 2: chipingress.pb.StreamEventsRequest.event:type_name -> io.cloudevents.v1.CloudEvent
	7, // 3: chipingress.pb.ChipIngress.Publish:input_type -> io.cloudevents.v1.CloudEvent
	0, // 4: chipingress.pb.ChipIngress.PublishBatch:input_type -> chipingress.pb.CloudEventBatch
	3, // 5: chipingress.pb.ChipIngress.Ping:input_type -> chipingress.pb.EmptyRequest
	5, // 6: chipingress.pb.ChipIngress.StreamEvents:input_type -> chipingress.pb.StreamEventsRequest
	1, // 7: chipingress.pb.ChipIngress.Publish:output_type -> chipingress.pb.PublishResponse
	1, // 8: chipingress.pb.ChipIngress.PublishBatch:output_type -> chipingress.pb.PublishResponse
	4, // 9: chipingress.pb.ChipIngress.Ping:output_type -> chipingress.pb.PingResponse
	6, // 10: chipingress.pb.ChipIngress.StreamEvents:output_type -> chipingress.pb.StreamEventsResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_chip_ingress_proto_init() }
func file_chip_ingress_proto_init() {
	if File_chip_ingress_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chip_ingress_proto_rawDesc), len(file_chip_ingress_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chip_ingress_proto_goTypes,
		DependencyIndexes: file_chip_ingress_proto_depIdxs,
		MessageInfos:      file_chip_ingress_proto_msgTypes,
	}.Build()
	File_chip_ingress_proto = out.File
	file_chip_ingress_proto_goTypes = nil
	file_chip_ingress_proto_depIdxs = nil
}
