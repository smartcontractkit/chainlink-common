syntax = "proto3";

package don.evm.v1;

option go_package = "github.com/smartcontractkit/chainlink-common/pkg/capabilities/stubs/don/evm";

import "google/protobuf/empty.proto";
import "crosschain.proto";
import "metadata.proto";


message TxID {
  string value = 1;
}

message ReadMethodRequest {
  string address = 1;
  bytes calldata = 2;
  ConfidenceLevel confidence_level = 3;
}

// Represents a request to query logs
message QueryLogsRequest {
  FilterQuery filter = 1;
  ConfidenceLevel confidence_level = 2;
}

message SubmitTransactionRequest { // TODO: Remove
  string to_address = 1;
  GasConfig gas_config = 2;
  bytes calldata = 3; // Optional
};


message SignedReport {
  bytes report = 1;
  bytes context  = 2;
  repeated bytes signatures = 3;
  bytes id = 4;
}

// Represents a request to submit a transaction
message WriteAsReportRequest {
  string receiver = 1;
  bytes data = 2;
  GasConfig gas_config = 3;
}

message WriteAsReportResponse {
  TxStatus tx_status = 1;
  ReceiverContractExecutionStatus receiver_contract_execution_status = 2;
  bytes tx_hash = 3;
}

message Log {
  string address = 1; // common.Address represented as bytes
  repeated bytes topics = 2; // []common.Hash represented as repeated bytes
  bytes data = 3; // []byte represented as bytes
  uint64 block_number = 4; // uint64
  string tx_hash = 5; // common.Hash represented as string
  uint32 tx_index = 6; // uint represented as uint32
  string block_hash = 7; // common.Hash represented as string
  uint32 index = 8; // uint represented as uint32
  bool removed = 9; // bool
}

message FilterQuery {
  oneof from_block {
    uint64 from_block_number = 1;
    string from_block_tag = 2; // e.g., "latest"
  }

  oneof to_block {
    uint64 to_block_number = 3;
    string to_block_tag = 4; // e.g., "latest"
  }

  repeated string address = 5;

  repeated string topics = 6;

  string block_hash = 7;
}

message LogTriggerRequest {
  FilterQuery filterQuery = 1;
}

message EvmReport {
  //ocr3_types.Metadata metadata
  // TODO: We should use the metadata type but in go code metadata fields are at the top level instead of in a nested field.
  reserved 5;
  string workflowExecutionId = 1;
  string workflowId = 2;
  string workflowOwner = 3;
  string workflowName = 4;
  string reportId = 6;
  uint32 workflowDonId = 7;
  uint32 workflowDonConfigVersion = 8;
  string keyId = 9;
  bytes calldata = 10;
}

service Client {
  rpc GetTxResult (TxID) returns (don.crosschain.v1.TxResult);
  rpc ReadMethod (ReadMethodRequest) returns (don.crosschain.v1.ByteArray);
  rpc QueryLogs (QueryLogsRequest) returns (LogList);
  rpc RegisterLogTracking(RegisterLogTrackingRequest) returns (google.protobuf.Empty);
  rpc UnregisterLogTracking(UnregisterLogTrackingRequest) returns (google.protobuf.Empty);
  rpc SubmitTransaction (SubmitTransactionRequest) returns (TxID); //TODO remove
  rpc WriteAsReport (WriteAsReportRequest) returns (WriteAsReportResponse);
  rpc LogTrigger (LogTriggerRequest) returns (Log) {
    option (cre.metadata.callType) = Trigger;
  };
  rpc OnFinalityViolation (google.protobuf.Empty) returns (don.crosschain.v1.BlockRange) {
    option (cre.metadata.callType) = Trigger;
  };
}

// Placeholder messages for types defined elsewhere
message GasConfig {
  // Fill this in based on your domain model
}

message LogList {
  repeated Log logs = 1;
}

// represents filter for polling and caching logs
message LPFilter {
  uint64 max_logs_kept = 1; // maximum number of logs to retain ( 0 = unlimited ) 
  int64 retention_time = 2; // maximum amount of time to retain logs in seconds
  uint64 logs_per_block = 3; // rate limit ( maximum # of logs per block, 0 = unlimited )
  string name = 4; // filter name, has to persist for removing filter
  repeated string addresses = 5; // list of addresses to include
  repeated string event_sigs = 6; // list of possible signatures (aka topic1)
  repeated Hash topic2 = 7; // list of possible values for topic2
  repeated Hash topic3 = 8; // list of possible values for topic3
  repeated Hash topic4 = 9; // list of possible values for topic4
}

// ----- Message Types -----
// represents evm-style Address
// [20]byte fix-sized array
message Address {
  bytes address = 1;
}

// represents evm-style hash
// [32]byte fix-sized array
message Hash {
  bytes hash = 1;
}

// represents solidity-spec abi encoded bytes
message ABIPayload {
  bytes abi = 1;
}
message RegisterLogTrackingRequest {
  LPFilter filter = 1;
}

message UnregisterLogTrackingRequest {
  string filter_name = 1;
}

enum ConfidenceLevel {
  CONFIDENCE_LEVEL_UNSPECIFIED = 0;
  LOW = 1;
  MEDIUM = 2;
  HIGH = 3;
  FINALITY = 4;
}

enum TxStatus {
  CONFIRMED = 0;
  FINALIZED = 1;
  FAILED = 2;
}

enum ReceiverContractExecutionStatus {
  SUCCESS = 0;
  FAILURE = 1;
}
