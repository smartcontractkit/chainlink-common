syntax = "proto3";
// this is it's own package to avoid name collision with median types like OnchainConfig and BuildReport
option go_package = "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/mercury/v2;mercuryv2pb";

package loop.internal.pb.mercury.v2;


// not: the generate.go file in this dir specifies the import path of the relative proto files
import "loop/internal/pb/relayer.proto";

// DataSource is a gRPC adapter for [pkg/types/mercury/v2/DataSource]
service DataSource {
    rpc Observe(ObserveRequest) returns (ObserveResponse) {}
}

// ObserveRequest is the request payload for the Observe method, which is a gRPC adapter for input arguments of [pkg/types/mercury/v2/DataSource.Observe]
message ObserveRequest {
    ReportTimestamp report_timestamp = 1;
    bool fetchMaxFinalizedTimestamp= 2;
}

// Block is a gRPC adapter for [pkg/types/mercury/v2/Block]
message Block {
    int64 number = 1;
    bytes hash = 2;
    uint64 timestamp = 3;
}

// Observation is a gRPC adapter for [pkg/types/mercury/v2/Observation]
message Observation {
    BigInt benchmarkPrice = 1;
    int64 maxFinalizedTimestamp = 2;
    BigInt linkPrice =3;
    BigInt nativePrice = 4;
}
// ObserveResponse is the response payload for the Observe method, which is a gRPC adapter for output arguments of [pkg/types/mercury/v2/DataSource.Observe]
message ObserveResponse {
    Observation observation = 1;
}