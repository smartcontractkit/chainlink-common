syntax = "proto3";

option go_package = "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb";

package loop;

import "internal/codec/codec.proto";
import "loop/internal/pb/relayer.proto";
import "google/protobuf/empty.proto";
import "chains/evm/evm.proto";

service ContractWriter {
    rpc SubmitTransaction(SubmitTransactionRequest) returns (google.protobuf.Empty) {}
    rpc GetTransactionStatus(loop.evm.GetTransactionStatusRequest) returns (loop.evm.GetTransactionStatusReply) {}
    rpc GetFeeComponents(google.protobuf.Empty) returns (GetFeeComponentsReply) {}
    rpc GetEstimateFee(GetEstimateFeeRequest) returns (GetEstimateFeeReply) {}
}

message SubmitTransactionRequest {
    string contract_name = 1;
    string method = 2;
    codec.VersionedBytes params = 3;
    string transaction_id = 4;
    string to_address = 5;
    TransactionMeta meta = 6;
    BigInt value = 7;
}

message TransactionMeta {
    string workflow_execution_id = 1;
    BigInt gas_limit = 2;
}

// GetEstimateFeeReply has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractWriter.GetEstimateFee].
message GetEstimateFeeRequest {
    string contract_name = 1;
    string method = 2;
    codec.VersionedBytes params = 3;
    string to_address = 4;
    TransactionMeta meta = 5;
    BigInt value = 6;
}

// GetFeeComponentsReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractWriter.GetFeeComponents].
message GetFeeComponentsReply {
    BigInt execution_fee = 1;
    BigInt data_availability_fee = 2;
}

// GetEstimateFeeReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractWriter.GetEstimateFee].
message GetEstimateFeeReply {
    BigInt fee = 1;
    uint32 decimals = 2;
}
