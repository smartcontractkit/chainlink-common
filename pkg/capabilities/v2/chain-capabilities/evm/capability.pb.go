// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.3
// source: capabilities/v2/chain-capabilities/evm/capability.proto

package evm

import (
	_ "github.com/smartcontractkit/chainlink-common/pkg/capabilities/v2/protoc/pkg/pb"
	evm "github.com/smartcontractkit/chainlink-common/pkg/chains/evm"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfidenceLevel int32

const (
	ConfidenceLevel_SAFE      ConfidenceLevel = 0
	ConfidenceLevel_LATEST    ConfidenceLevel = 1
	ConfidenceLevel_FINALIZED ConfidenceLevel = 2
)

// Enum value maps for ConfidenceLevel.
var (
	ConfidenceLevel_name = map[int32]string{
		0: "SAFE",
		1: "LATEST",
		2: "FINALIZED",
	}
	ConfidenceLevel_value = map[string]int32{
		"SAFE":      0,
		"LATEST":    1,
		"FINALIZED": 2,
	}
)

func (x ConfidenceLevel) Enum() *ConfidenceLevel {
	p := new(ConfidenceLevel)
	*p = x
	return p
}

func (x ConfidenceLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfidenceLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_capabilities_v2_chain_capabilities_evm_capability_proto_enumTypes[0].Descriptor()
}

func (ConfidenceLevel) Type() protoreflect.EnumType {
	return &file_capabilities_v2_chain_capabilities_evm_capability_proto_enumTypes[0]
}

func (x ConfidenceLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfidenceLevel.Descriptor instead.
func (ConfidenceLevel) EnumDescriptor() ([]byte, []int) {
	return file_capabilities_v2_chain_capabilities_evm_capability_proto_rawDescGZIP(), []int{0}
}

type FilterLogTriggerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addresses     [][]byte               `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`                                        // list of addresses to include in evm address [20]byte fix-sized array format, at least one address is required
	EventSigs     [][]byte               `protobuf:"bytes,2,rep,name=event_sigs,json=eventSigs,proto3" json:"event_sigs,omitempty"`                       // list of possible signatures (aka topic1), in [32]byte fix-sized array format, at least one topic is required
	Topic2        [][]byte               `protobuf:"bytes,3,rep,name=topic2,proto3" json:"topic2,omitempty"`                                              // list of possible values for topic2, in [32]byte fix-sized array format, can be empty
	Topic3        [][]byte               `protobuf:"bytes,4,rep,name=topic3,proto3" json:"topic3,omitempty"`                                              // list of possible values for topic3, in [32]byte fix-sized array format, can be empty
	Topic4        [][]byte               `protobuf:"bytes,5,rep,name=topic4,proto3" json:"topic4,omitempty"`                                              // list of possible values for topic4, in [32]byte fix-sized array format, can be empty
	Confidence    ConfidenceLevel        `protobuf:"varint,6,opt,name=Confidence,proto3,enum=cre.sdk.v2.evm.ConfidenceLevel" json:"Confidence,omitempty"` // optional, defaults to "SAFE"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterLogTriggerRequest) Reset() {
	*x = FilterLogTriggerRequest{}
	mi := &file_capabilities_v2_chain_capabilities_evm_capability_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterLogTriggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterLogTriggerRequest) ProtoMessage() {}

func (x *FilterLogTriggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_v2_chain_capabilities_evm_capability_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterLogTriggerRequest.ProtoReflect.Descriptor instead.
func (*FilterLogTriggerRequest) Descriptor() ([]byte, []int) {
	return file_capabilities_v2_chain_capabilities_evm_capability_proto_rawDescGZIP(), []int{0}
}

func (x *FilterLogTriggerRequest) GetAddresses() [][]byte {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *FilterLogTriggerRequest) GetEventSigs() [][]byte {
	if x != nil {
		return x.EventSigs
	}
	return nil
}

func (x *FilterLogTriggerRequest) GetTopic2() [][]byte {
	if x != nil {
		return x.Topic2
	}
	return nil
}

func (x *FilterLogTriggerRequest) GetTopic3() [][]byte {
	if x != nil {
		return x.Topic3
	}
	return nil
}

func (x *FilterLogTriggerRequest) GetTopic4() [][]byte {
	if x != nil {
		return x.Topic4
	}
	return nil
}

func (x *FilterLogTriggerRequest) GetConfidence() ConfidenceLevel {
	if x != nil {
		return x.Confidence
	}
	return ConfidenceLevel_SAFE
}

var File_capabilities_v2_chain_capabilities_evm_capability_proto protoreflect.FileDescriptor

var file_capabilities_v2_chain_capabilities_evm_capability_proto_rawDesc = []byte{
	0x0a, 0x37, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x76,
	0x32, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2d, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2f, 0x65, 0x76, 0x6d, 0x2f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x72, 0x65, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x76, 0x32, 0x2e, 0x65, 0x76, 0x6d, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x72, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73,
	0x2f, 0x65, 0x76, 0x6d, 0x2f, 0x65, 0x76, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xf9,
	0x07, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x0c, 0x43, 0x61, 0x6c,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1d, 0x2e, 0x6c, 0x6f, 0x6f, 0x70,
	0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e,
	0x65, 0x76, 0x6d, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x44, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x73, 0x12, 0x1b, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x09, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e,
	0x65, 0x76, 0x6d, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x47,
	0x0a, 0x0b, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x12, 0x1c, 0x2e,
	0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6c, 0x6f,
	0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x47,
	0x61, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x62, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x25, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76,
	0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x65, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x12, 0x26, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6c,
	0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x57, 0x0a, 0x16, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x6e, 0x64, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x25, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x6e, 0x64, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x56, 0x0a, 0x10, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x12,
	0x21, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x53, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x2e, 0x6c, 0x6f, 0x6f,
	0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x57, 0x0a, 0x15, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x12, 0x26, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x55, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x4d, 0x0a, 0x0d, 0x49, 0x73, 0x54, 0x78, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x12, 0x1e, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x49, 0x73,
	0x54, 0x78, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x49, 0x73,
	0x54, 0x78, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x47, 0x0a, 0x0b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x1c, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x1a, 0x0f, 0x82, 0xb5, 0x18, 0x0b, 0x12,
	0x09, 0x65, 0x76, 0x6d, 0x40, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x42, 0x68, 0x5a, 0x66, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6b, 0x69, 0x74, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2d, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2f, 0x65, 0x76, 0x6d, 0x2f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x3b, 0x65, 0x76, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_capabilities_v2_chain_capabilities_evm_capability_proto_rawDescOnce sync.Once
	file_capabilities_v2_chain_capabilities_evm_capability_proto_rawDescData []byte
)

func file_capabilities_v2_chain_capabilities_evm_capability_proto_rawDescGZIP() []byte {
	file_capabilities_v2_chain_capabilities_evm_capability_proto_rawDescOnce.Do(func() {
		file_capabilities_v2_chain_capabilities_evm_capability_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_capabilities_v2_chain_capabilities_evm_capability_proto_rawDesc), len(file_capabilities_v2_chain_capabilities_evm_capability_proto_rawDesc)))
	})
	return file_capabilities_v2_chain_capabilities_evm_capability_proto_rawDescData
}

var file_capabilities_v2_chain_capabilities_evm_capability_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_capabilities_v2_chain_capabilities_evm_capability_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_capabilities_v2_chain_capabilities_evm_capability_proto_goTypes = []any{
	(*evm.CallContractRequest)(nil),          // 0: loop.evm.CallContractRequest
	(*evm.FilterLogsRequest)(nil),            // 1: loop.evm.FilterLogsRequest
	(*evm.BalanceAtRequest)(nil),             // 2: loop.evm.BalanceAtRequest
	(*evm.EstimateGasRequest)(nil),           // 3: loop.evm.EstimateGasRequest
	(*evm.GetTransactionByHashRequest)(nil),  // 4: loop.evm.GetTransactionByHashRequest
	(*evm.GetTransactionReceiptRequest)(nil), // 5: loop.evm.GetTransactionReceiptRequest
	(*emptypb.Empty)(nil),                    // 6: google.protobuf.Empty
	(*evm.QueryTrackedLogsRequest)(nil),      // 7: loop.evm.QueryTrackedLogsRequest
	(*evm.RegisterLogTrackingRequest)(nil),   // 8: loop.evm.RegisterLogTrackingRequest
	(*evm.UnregisterLogTrackingRequest)(nil), // 9: loop.evm.UnregisterLogTrackingRequest
	(*evm.IsTxFinalizedRequest)(nil),         // 10: loop.evm.IsTxFinalizedRequest
	(*evm.WriteReportRequest)(nil),           // 11: loop.evm.WriteReportRequest
	(*evm.CallContractReply)(nil),            // 12: loop.evm.CallContractReply
	(*evm.FilterLogsReply)(nil),              // 13: loop.evm.FilterLogsReply
	(*evm.BalanceAtReply)(nil),               // 14: loop.evm.BalanceAtReply
	(*evm.EstimateGasReply)(nil),             // 15: loop.evm.EstimateGasReply
	(*evm.GetTransactionByHashReply)(nil),    // 16: loop.evm.GetTransactionByHashReply
	(*evm.GetTransactionReceiptReply)(nil),   // 17: loop.evm.GetTransactionReceiptReply
	(*evm.LatestAndFinalizedHeadReply)(nil),  // 18: loop.evm.LatestAndFinalizedHeadReply
	(*evm.QueryTrackedLogsReply)(nil),        // 19: loop.evm.QueryTrackedLogsReply
	(*evm.IsTxFinalizedReply)(nil),           // 20: loop.evm.IsTxFinalizedReply
	(*evm.WriteReportReply)(nil),             // 21: loop.evm.WriteReportReply
}
var file_capabilities_v2_chain_capabilities_evm_capability_proto_depIdxs = []int32{
	0,  // 0: cre.sdk.v2.evm.Client.CallContract:input_type -> loop.evm.CallContractRequest
	1,  // 1: cre.sdk.v2.evm.Client.FilterLogs:input_type -> loop.evm.FilterLogsRequest
	2,  // 2: cre.sdk.v2.evm.Client.BalanceAt:input_type -> loop.evm.BalanceAtRequest
	3,  // 3: cre.sdk.v2.evm.Client.EstimateGas:input_type -> loop.evm.EstimateGasRequest
	4,  // 4: cre.sdk.v2.evm.Client.GetTransactionByHash:input_type -> loop.evm.GetTransactionByHashRequest
	5,  // 5: cre.sdk.v2.evm.Client.GetTransactionReceipt:input_type -> loop.evm.GetTransactionReceiptRequest
	6,  // 6: cre.sdk.v2.evm.Client.LatestAndFinalizedHead:input_type -> google.protobuf.Empty
	7,  // 7: cre.sdk.v2.evm.Client.QueryTrackedLogs:input_type -> loop.evm.QueryTrackedLogsRequest
	8,  // 8: cre.sdk.v2.evm.Client.RegisterLogTracking:input_type -> loop.evm.RegisterLogTrackingRequest
	9,  // 9: cre.sdk.v2.evm.Client.UnregisterLogTracking:input_type -> loop.evm.UnregisterLogTrackingRequest
	10, // 10: cre.sdk.v2.evm.Client.IsTxFinalized:input_type -> loop.evm.IsTxFinalizedRequest
	11, // 11: cre.sdk.v2.evm.Client.WriteReport:input_type -> loop.evm.WriteReportRequest
	12, // 12: cre.sdk.v2.evm.Client.CallContract:output_type -> loop.evm.CallContractReply
	13, // 13: cre.sdk.v2.evm.Client.FilterLogs:output_type -> loop.evm.FilterLogsReply
	14, // 14: cre.sdk.v2.evm.Client.BalanceAt:output_type -> loop.evm.BalanceAtReply
	15, // 15: cre.sdk.v2.evm.Client.EstimateGas:output_type -> loop.evm.EstimateGasReply
	16, // 16: cre.sdk.v2.evm.Client.GetTransactionByHash:output_type -> loop.evm.GetTransactionByHashReply
	17, // 17: cre.sdk.v2.evm.Client.GetTransactionReceipt:output_type -> loop.evm.GetTransactionReceiptReply
	18, // 18: cre.sdk.v2.evm.Client.LatestAndFinalizedHead:output_type -> loop.evm.LatestAndFinalizedHeadReply
	19, // 19: cre.sdk.v2.evm.Client.QueryTrackedLogs:output_type -> loop.evm.QueryTrackedLogsReply
	6,  // 20: cre.sdk.v2.evm.Client.RegisterLogTracking:output_type -> google.protobuf.Empty
	6,  // 21: cre.sdk.v2.evm.Client.UnregisterLogTracking:output_type -> google.protobuf.Empty
	20, // 22: cre.sdk.v2.evm.Client.IsTxFinalized:output_type -> loop.evm.IsTxFinalizedReply
	21, // 23: cre.sdk.v2.evm.Client.WriteReport:output_type -> loop.evm.WriteReportReply
	12, // [12:24] is the sub-list for method output_type
	0,  // [0:12] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_capabilities_v2_chain_capabilities_evm_capability_proto_init() }
func file_capabilities_v2_chain_capabilities_evm_capability_proto_init() {
	if File_capabilities_v2_chain_capabilities_evm_capability_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_capabilities_v2_chain_capabilities_evm_capability_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_capabilities_v2_chain_capabilities_evm_capability_proto_goTypes,
		DependencyIndexes: file_capabilities_v2_chain_capabilities_evm_capability_proto_depIdxs,
		EnumInfos:         file_capabilities_v2_chain_capabilities_evm_capability_proto_enumTypes,
		MessageInfos:      file_capabilities_v2_chain_capabilities_evm_capability_proto_msgTypes,
	}.Build()
	File_capabilities_v2_chain_capabilities_evm_capability_proto = out.File
	file_capabilities_v2_chain_capabilities_evm_capability_proto_rawDesc = nil
	file_capabilities_v2_chain_capabilities_evm_capability_proto_goTypes = nil
	file_capabilities_v2_chain_capabilities_evm_capability_proto_depIdxs = nil
}
