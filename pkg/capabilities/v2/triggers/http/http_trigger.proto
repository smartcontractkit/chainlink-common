syntax = "proto3";

package http_trigger.v1;

option go_package = "github.com/smartcontractkit/chainlink-common/pkg/capabilities/v2/triggers/http";

import "tools/generator/v1alpha/cre_metadata.proto";
import "google/protobuf/struct.proto";

message Config {
  // Public keys against which the signature of incoming requests are validated
  repeated AuthorizedKey authorized_keys = 1;
}

message Payload {
  // JSON input in the HTTP trigger request
  google.protobuf.Struct input = 1;

  // Key used to sign the HTTP trigger request
  AuthorizedKey key = 2;
}

enum KeyType {
  KEY_TYPE_UNSPECIFIED = 0;
  KEY_TYPE_ECDSA = 1;
}

// Generic and extensible authorized signer abstraction
message AuthorizedKey {
  KeyType type = 1;
  string public_key = 2;
}

service HTTP {
  option (tools.generator.v1alpha.capability) = {
    mode: MODE_DON
    capability_id: "http-trigger@0.1.0"
  };

  rpc Trigger(Config) returns (stream Payload);
}