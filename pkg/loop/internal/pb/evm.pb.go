// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: evm.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ----- Message Types -----
// represents simplified evm-style CallMsg
type CallMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            string                 `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallMsg) Reset() {
	*x = CallMsg{}
	mi := &file_evm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallMsg) ProtoMessage() {}

func (x *CallMsg) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallMsg.ProtoReflect.Descriptor instead.
func (*CallMsg) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{0}
}

func (x *CallMsg) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CallMsg) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *CallMsg) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// represents evm-style log
type Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                      // common.Address represented as bytes
	Topics        []string               `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`                        // []common.Hash represented as repeated string
	TxHash        string                 `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`          // common.Address represented as string
	BlockHash     string                 `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"` // common.Hash represented as string
	Data          []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`                            //
	EventSig      []byte                 `protobuf:"bytes,6,opt,name=eventSig,proto3" json:"eventSig,omitempty"`
	BlockNumber   *BigInt                `protobuf:"bytes,7,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	TxIndex       uint32                 `protobuf:"varint,8,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`
	Index         uint32                 `protobuf:"varint,9,opt,name=index,proto3" json:"index,omitempty"`
	Removed       bool                   `protobuf:"varint,10,opt,name=removed,proto3" json:"removed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_evm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{1}
}

func (x *Log) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Log) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *Log) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *Log) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *Log) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Log) GetEventSig() []byte {
	if x != nil {
		return x.EventSig
	}
	return nil
}

func (x *Log) GetBlockNumber() *BigInt {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

func (x *Log) GetTxIndex() uint32 {
	if x != nil {
		return x.TxIndex
	}
	return 0
}

func (x *Log) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Log) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

type EVMFilterQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockHash     string                 `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	FromBlock     *BigInt                `protobuf:"bytes,2,opt,name=fromBlock,proto3" json:"fromBlock,omitempty"`
	ToBlock       *BigInt                `protobuf:"bytes,3,opt,name=toBlock,proto3" json:"toBlock,omitempty"`
	Addresses     []string               `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Topics        []string               `protobuf:"bytes,5,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EVMFilterQuery) Reset() {
	*x = EVMFilterQuery{}
	mi := &file_evm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EVMFilterQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EVMFilterQuery) ProtoMessage() {}

func (x *EVMFilterQuery) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EVMFilterQuery.ProtoReflect.Descriptor instead.
func (*EVMFilterQuery) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{2}
}

func (x *EVMFilterQuery) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *EVMFilterQuery) GetFromBlock() *BigInt {
	if x != nil {
		return x.FromBlock
	}
	return nil
}

func (x *EVMFilterQuery) GetToBlock() *BigInt {
	if x != nil {
		return x.ToBlock
	}
	return nil
}

func (x *EVMFilterQuery) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *EVMFilterQuery) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

type EVMTransaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nonce         uint64                 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Gas           uint64                 `protobuf:"varint,2,opt,name=gas,proto3" json:"gas,omitempty"`
	To            string                 `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Hash          string                 `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	Value         *BigInt                `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	GasPrice      *BigInt                `protobuf:"bytes,7,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EVMTransaction) Reset() {
	*x = EVMTransaction{}
	mi := &file_evm_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EVMTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EVMTransaction) ProtoMessage() {}

func (x *EVMTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EVMTransaction.ProtoReflect.Descriptor instead.
func (*EVMTransaction) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{3}
}

func (x *EVMTransaction) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *EVMTransaction) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *EVMTransaction) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *EVMTransaction) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EVMTransaction) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *EVMTransaction) GetValue() *BigInt {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *EVMTransaction) GetGasPrice() *BigInt {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

type EVMReceipt struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Status            uint64                 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	GasUsed           uint64                 `protobuf:"varint,2,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	TxIndex           uint64                 `protobuf:"varint,3,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`
	BlockHash         string                 `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	PostState         []byte                 `protobuf:"bytes,5,opt,name=post_state,json=postState,proto3" json:"post_state,omitempty"`
	Logs              []*Log                 `protobuf:"bytes,6,rep,name=logs,proto3" json:"logs,omitempty"`
	TxHash            string                 `protobuf:"bytes,7,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	EffectiveGasPrice *BigInt                `protobuf:"bytes,8,opt,name=effective_gas_price,json=effectiveGasPrice,proto3" json:"effective_gas_price,omitempty"`
	BlockNumber       *BigInt                `protobuf:"bytes,9,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	ContractAddress   string                 `protobuf:"bytes,10,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EVMReceipt) Reset() {
	*x = EVMReceipt{}
	mi := &file_evm_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EVMReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EVMReceipt) ProtoMessage() {}

func (x *EVMReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EVMReceipt.ProtoReflect.Descriptor instead.
func (*EVMReceipt) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{4}
}

func (x *EVMReceipt) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *EVMReceipt) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *EVMReceipt) GetTxIndex() uint64 {
	if x != nil {
		return x.TxIndex
	}
	return 0
}

func (x *EVMReceipt) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *EVMReceipt) GetPostState() []byte {
	if x != nil {
		return x.PostState
	}
	return nil
}

func (x *EVMReceipt) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *EVMReceipt) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *EVMReceipt) GetEffectiveGasPrice() *BigInt {
	if x != nil {
		return x.EffectiveGasPrice
	}
	return nil
}

func (x *EVMReceipt) GetBlockNumber() *BigInt {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

func (x *EVMReceipt) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type LPFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxLogsKept   uint64                 `protobuf:"varint,1,opt,name=max_logs_kept,json=maxLogsKept,proto3" json:"max_logs_kept,omitempty"`
	RetentionTime int64                  `protobuf:"varint,2,opt,name=retention_time,json=retentionTime,proto3" json:"retention_time,omitempty"` // Retention time in seconds
	LogsPerBlock  uint64                 `protobuf:"varint,3,opt,name=logs_per_block,json=logsPerBlock,proto3" json:"logs_per_block,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Addresses     []string               `protobuf:"bytes,5,rep,name=addresses,proto3" json:"addresses,omitempty"`
	EventSigs     []string               `protobuf:"bytes,6,rep,name=event_sigs,json=eventSigs,proto3" json:"event_sigs,omitempty"`
	Topic2        []string               `protobuf:"bytes,7,rep,name=topic2,proto3" json:"topic2,omitempty"`
	Topic3        []string               `protobuf:"bytes,8,rep,name=topic3,proto3" json:"topic3,omitempty"`
	Topic4        []string               `protobuf:"bytes,9,rep,name=topic4,proto3" json:"topic4,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LPFilter) Reset() {
	*x = LPFilter{}
	mi := &file_evm_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LPFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LPFilter) ProtoMessage() {}

func (x *LPFilter) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LPFilter.ProtoReflect.Descriptor instead.
func (*LPFilter) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{5}
}

func (x *LPFilter) GetMaxLogsKept() uint64 {
	if x != nil {
		return x.MaxLogsKept
	}
	return 0
}

func (x *LPFilter) GetRetentionTime() int64 {
	if x != nil {
		return x.RetentionTime
	}
	return 0
}

func (x *LPFilter) GetLogsPerBlock() uint64 {
	if x != nil {
		return x.LogsPerBlock
	}
	return 0
}

func (x *LPFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LPFilter) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *LPFilter) GetEventSigs() []string {
	if x != nil {
		return x.EventSigs
	}
	return nil
}

func (x *LPFilter) GetTopic2() []string {
	if x != nil {
		return x.Topic2
	}
	return nil
}

func (x *LPFilter) GetTopic3() []string {
	if x != nil {
		return x.Topic3
	}
	return nil
}

func (x *LPFilter) GetTopic4() []string {
	if x != nil {
		return x.Topic4
	}
	return nil
}

// ----- Request/Reply Wrappers -----
type LatestAndFinalizedHeadReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latest        *Head                  `protobuf:"bytes,1,opt,name=latest,proto3" json:"latest,omitempty"`
	Finalized     *Head                  `protobuf:"bytes,2,opt,name=finalized,proto3" json:"finalized,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestAndFinalizedHeadReply) Reset() {
	*x = LatestAndFinalizedHeadReply{}
	mi := &file_evm_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestAndFinalizedHeadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestAndFinalizedHeadReply) ProtoMessage() {}

func (x *LatestAndFinalizedHeadReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestAndFinalizedHeadReply.ProtoReflect.Descriptor instead.
func (*LatestAndFinalizedHeadReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{6}
}

func (x *LatestAndFinalizedHeadReply) GetLatest() *Head {
	if x != nil {
		return x.Latest
	}
	return nil
}

func (x *LatestAndFinalizedHeadReply) GetFinalized() *Head {
	if x != nil {
		return x.Finalized
	}
	return nil
}

type CallContractRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Call            *CallMsg               `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	ConfidenceLevel Confidence             `protobuf:"varint,2,opt,name=confidenceLevel,proto3,enum=loop.Confidence" json:"confidenceLevel,omitempty"` // confidenceLevel will be handled by evm loop to difine finalty
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CallContractRequest) Reset() {
	*x = CallContractRequest{}
	mi := &file_evm_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallContractRequest) ProtoMessage() {}

func (x *CallContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallContractRequest.ProtoReflect.Descriptor instead.
func (*CallContractRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{7}
}

func (x *CallContractRequest) GetCall() *CallMsg {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *CallContractRequest) GetConfidenceLevel() Confidence {
	if x != nil {
		return x.ConfidenceLevel
	}
	return Confidence_Unconfirmed
}

type CallContractReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallContractReply) Reset() {
	*x = CallContractReply{}
	mi := &file_evm_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallContractReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallContractReply) ProtoMessage() {}

func (x *CallContractReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallContractReply.ProtoReflect.Descriptor instead.
func (*CallContractReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{8}
}

func (x *CallContractReply) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetTransactionFeeRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.EVMRElayer.GetTransactionFee].
type GetTransactionFeeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // idempotency key used when transaction was submitted
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionFeeRequest) Reset() {
	*x = GetTransactionFeeRequest{}
	mi := &file_evm_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionFeeRequest) ProtoMessage() {}

func (x *GetTransactionFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionFeeRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionFeeRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{9}
}

func (x *GetTransactionFeeRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

// GetTransactionFeeReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.EVMRElayer.GetTransactionFee].
type GetTransactionFeeReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransationFee *BigInt                `protobuf:"bytes,1,opt,name=transation_fee,json=transationFee,proto3" json:"transation_fee,omitempty"` // transaction fee is the cost of transaction execution in Wei
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionFeeReply) Reset() {
	*x = GetTransactionFeeReply{}
	mi := &file_evm_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionFeeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionFeeReply) ProtoMessage() {}

func (x *GetTransactionFeeReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionFeeReply.ProtoReflect.Descriptor instead.
func (*GetTransactionFeeReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{10}
}

func (x *GetTransactionFeeReply) GetTransationFee() *BigInt {
	if x != nil {
		return x.TransationFee
	}
	return nil
}

type GetLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilterQuery   *EVMFilterQuery        `protobuf:"bytes,1,opt,name=filter_query,json=filterQuery,proto3" json:"filter_query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogsRequest) Reset() {
	*x = GetLogsRequest{}
	mi := &file_evm_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsRequest) ProtoMessage() {}

func (x *GetLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsRequest.ProtoReflect.Descriptor instead.
func (*GetLogsRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{11}
}

func (x *GetLogsRequest) GetFilterQuery() *EVMFilterQuery {
	if x != nil {
		return x.FilterQuery
	}
	return nil
}

type GetLogsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*Log                 `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogsReply) Reset() {
	*x = GetLogsReply{}
	mi := &file_evm_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsReply) ProtoMessage() {}

func (x *GetLogsReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsReply.ProtoReflect.Descriptor instead.
func (*GetLogsReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{12}
}

func (x *GetLogsReply) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

type BalanceAtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	BlockNumber   *BigInt                `protobuf:"bytes,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BalanceAtRequest) Reset() {
	*x = BalanceAtRequest{}
	mi := &file_evm_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceAtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceAtRequest) ProtoMessage() {}

func (x *BalanceAtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceAtRequest.ProtoReflect.Descriptor instead.
func (*BalanceAtRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{13}
}

func (x *BalanceAtRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *BalanceAtRequest) GetBlockNumber() *BigInt {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

type BalanceAtReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balance       *BigInt                `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BalanceAtReply) Reset() {
	*x = BalanceAtReply{}
	mi := &file_evm_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceAtReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceAtReply) ProtoMessage() {}

func (x *BalanceAtReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceAtReply.ProtoReflect.Descriptor instead.
func (*BalanceAtReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{14}
}

func (x *BalanceAtReply) GetBalance() *BigInt {
	if x != nil {
		return x.Balance
	}
	return nil
}

type EstimateGasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           *CallMsg               `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateGasRequest) Reset() {
	*x = EstimateGasRequest{}
	mi := &file_evm_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateGasRequest) ProtoMessage() {}

func (x *EstimateGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateGasRequest.ProtoReflect.Descriptor instead.
func (*EstimateGasRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{15}
}

func (x *EstimateGasRequest) GetMsg() *CallMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

type EstimateGasReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gas           uint64                 `protobuf:"varint,1,opt,name=gas,proto3" json:"gas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateGasReply) Reset() {
	*x = EstimateGasReply{}
	mi := &file_evm_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateGasReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateGasReply) ProtoMessage() {}

func (x *EstimateGasReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateGasReply.ProtoReflect.Descriptor instead.
func (*EstimateGasReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{16}
}

func (x *EstimateGasReply) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

type GetTransactionByHashRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionByHashRequest) Reset() {
	*x = GetTransactionByHashRequest{}
	mi := &file_evm_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionByHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByHashRequest) ProtoMessage() {}

func (x *GetTransactionByHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByHashRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionByHashRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{17}
}

func (x *GetTransactionByHashRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetTransactionByHashReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transaction   *EVMTransaction        `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionByHashReply) Reset() {
	*x = GetTransactionByHashReply{}
	mi := &file_evm_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionByHashReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByHashReply) ProtoMessage() {}

func (x *GetTransactionByHashReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByHashReply.ProtoReflect.Descriptor instead.
func (*GetTransactionByHashReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{18}
}

func (x *GetTransactionByHashReply) GetTransaction() *EVMTransaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type GetReceiptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReceiptRequest) Reset() {
	*x = GetReceiptRequest{}
	mi := &file_evm_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReceiptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReceiptRequest) ProtoMessage() {}

func (x *GetReceiptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReceiptRequest.ProtoReflect.Descriptor instead.
func (*GetReceiptRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{19}
}

func (x *GetReceiptRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetReceiptReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Receipt       *EVMReceipt            `protobuf:"bytes,1,opt,name=receipt,proto3" json:"receipt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReceiptReply) Reset() {
	*x = GetReceiptReply{}
	mi := &file_evm_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReceiptReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReceiptReply) ProtoMessage() {}

func (x *GetReceiptReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReceiptReply.ProtoReflect.Descriptor instead.
func (*GetReceiptReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{20}
}

func (x *GetReceiptReply) GetReceipt() *EVMReceipt {
	if x != nil {
		return x.Receipt
	}
	return nil
}

type RegisterLogTrackingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *LPFilter              `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterLogTrackingRequest) Reset() {
	*x = RegisterLogTrackingRequest{}
	mi := &file_evm_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterLogTrackingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterLogTrackingRequest) ProtoMessage() {}

func (x *RegisterLogTrackingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterLogTrackingRequest.ProtoReflect.Descriptor instead.
func (*RegisterLogTrackingRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{21}
}

func (x *RegisterLogTrackingRequest) GetFilter() *LPFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type UnregisterLogTrackingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilterName    string                 `protobuf:"bytes,1,opt,name=filter_name,json=filterName,proto3" json:"filter_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterLogTrackingRequest) Reset() {
	*x = UnregisterLogTrackingRequest{}
	mi := &file_evm_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterLogTrackingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterLogTrackingRequest) ProtoMessage() {}

func (x *UnregisterLogTrackingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterLogTrackingRequest.ProtoReflect.Descriptor instead.
func (*UnregisterLogTrackingRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{22}
}

func (x *UnregisterLogTrackingRequest) GetFilterName() string {
	if x != nil {
		return x.FilterName
	}
	return ""
}

type QueryLogsFromCacheRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Expression    []*Expression          `protobuf:"bytes,1,rep,name=expression,proto3" json:"expression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryLogsFromCacheRequest) Reset() {
	*x = QueryLogsFromCacheRequest{}
	mi := &file_evm_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryLogsFromCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLogsFromCacheRequest) ProtoMessage() {}

func (x *QueryLogsFromCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLogsFromCacheRequest.ProtoReflect.Descriptor instead.
func (*QueryLogsFromCacheRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{23}
}

func (x *QueryLogsFromCacheRequest) GetExpression() []*Expression {
	if x != nil {
		return x.Expression
	}
	return nil
}

type QueryLogsFromCacheReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*Log                 `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryLogsFromCacheReply) Reset() {
	*x = QueryLogsFromCacheReply{}
	mi := &file_evm_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryLogsFromCacheReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLogsFromCacheReply) ProtoMessage() {}

func (x *QueryLogsFromCacheReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLogsFromCacheReply.ProtoReflect.Descriptor instead.
func (*QueryLogsFromCacheReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{24}
}

func (x *QueryLogsFromCacheReply) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

type SubscribeLogTriggerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Expression    []*Expression          `protobuf:"bytes,1,rep,name=expression,proto3" json:"expression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeLogTriggerRequest) Reset() {
	*x = SubscribeLogTriggerRequest{}
	mi := &file_evm_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeLogTriggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeLogTriggerRequest) ProtoMessage() {}

func (x *SubscribeLogTriggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeLogTriggerRequest.ProtoReflect.Descriptor instead.
func (*SubscribeLogTriggerRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{25}
}

func (x *SubscribeLogTriggerRequest) GetExpression() []*Expression {
	if x != nil {
		return x.Expression
	}
	return nil
}

type LogTriggerReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Log           *Log                   `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogTriggerReply) Reset() {
	*x = LogTriggerReply{}
	mi := &file_evm_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogTriggerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogTriggerReply) ProtoMessage() {}

func (x *LogTriggerReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogTriggerReply.ProtoReflect.Descriptor instead.
func (*LogTriggerReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{26}
}

func (x *LogTriggerReply) GetLog() *Log {
	if x != nil {
		return x.Log
	}
	return nil
}

var File_evm_proto protoreflect.FileDescriptor

const file_evm_proto_rawDesc = "" +
	"\n" +
	"\tevm.proto\x12\x04loop\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\rrelayer.proto\x1a\x15contract_reader.proto\x1a\x15contract_writer.proto\"A\n" +
	"\aCallMsg\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\tR\x02to\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\"\x9b\x02\n" +
	"\x03Log\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x16\n" +
	"\x06topics\x18\x02 \x03(\tR\x06topics\x12\x17\n" +
	"\atx_hash\x18\x03 \x01(\tR\x06txHash\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x04 \x01(\tR\tblockHash\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\x12\x1a\n" +
	"\beventSig\x18\x06 \x01(\fR\beventSig\x12/\n" +
	"\fblock_number\x18\a \x01(\v2\f.loop.BigIntR\vblockNumber\x12\x19\n" +
	"\btx_index\x18\b \x01(\rR\atxIndex\x12\x14\n" +
	"\x05index\x18\t \x01(\rR\x05index\x12\x18\n" +
	"\aremoved\x18\n" +
	" \x01(\bR\aremoved\"\xb9\x01\n" +
	"\x0eEVMFilterQuery\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x01 \x01(\tR\tblockHash\x12*\n" +
	"\tfromBlock\x18\x02 \x01(\v2\f.loop.BigIntR\tfromBlock\x12&\n" +
	"\atoBlock\x18\x03 \x01(\v2\f.loop.BigIntR\atoBlock\x12\x1c\n" +
	"\taddresses\x18\x04 \x03(\tR\taddresses\x12\x16\n" +
	"\x06topics\x18\x05 \x03(\tR\x06topics\"\xbf\x01\n" +
	"\x0eEVMTransaction\x12\x14\n" +
	"\x05nonce\x18\x01 \x01(\x04R\x05nonce\x12\x10\n" +
	"\x03gas\x18\x02 \x01(\x04R\x03gas\x12\x0e\n" +
	"\x02to\x18\x03 \x01(\tR\x02to\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x12\x12\n" +
	"\x04hash\x18\x05 \x01(\tR\x04hash\x12\"\n" +
	"\x05value\x18\x06 \x01(\v2\f.loop.BigIntR\x05value\x12)\n" +
	"\tgas_price\x18\a \x01(\v2\f.loop.BigIntR\bgasPrice\"\xea\x02\n" +
	"\n" +
	"EVMReceipt\x12\x16\n" +
	"\x06status\x18\x01 \x01(\x04R\x06status\x12\x19\n" +
	"\bgas_used\x18\x02 \x01(\x04R\agasUsed\x12\x19\n" +
	"\btx_index\x18\x03 \x01(\x04R\atxIndex\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x04 \x01(\tR\tblockHash\x12\x1d\n" +
	"\n" +
	"post_state\x18\x05 \x01(\fR\tpostState\x12\x1d\n" +
	"\x04logs\x18\x06 \x03(\v2\t.loop.LogR\x04logs\x12\x17\n" +
	"\atx_hash\x18\a \x01(\tR\x06txHash\x12<\n" +
	"\x13effective_gas_price\x18\b \x01(\v2\f.loop.BigIntR\x11effectiveGasPrice\x12/\n" +
	"\fblock_number\x18\t \x01(\v2\f.loop.BigIntR\vblockNumber\x12)\n" +
	"\x10contract_address\x18\n" +
	" \x01(\tR\x0fcontractAddress\"\x94\x02\n" +
	"\bLPFilter\x12\"\n" +
	"\rmax_logs_kept\x18\x01 \x01(\x04R\vmaxLogsKept\x12%\n" +
	"\x0eretention_time\x18\x02 \x01(\x03R\rretentionTime\x12$\n" +
	"\x0elogs_per_block\x18\x03 \x01(\x04R\flogsPerBlock\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x1c\n" +
	"\taddresses\x18\x05 \x03(\tR\taddresses\x12\x1d\n" +
	"\n" +
	"event_sigs\x18\x06 \x03(\tR\teventSigs\x12\x16\n" +
	"\x06topic2\x18\a \x03(\tR\x06topic2\x12\x16\n" +
	"\x06topic3\x18\b \x03(\tR\x06topic3\x12\x16\n" +
	"\x06topic4\x18\t \x03(\tR\x06topic4\"k\n" +
	"\x1bLatestAndFinalizedHeadReply\x12\"\n" +
	"\x06latest\x18\x01 \x01(\v2\n" +
	".loop.HeadR\x06latest\x12(\n" +
	"\tfinalized\x18\x02 \x01(\v2\n" +
	".loop.HeadR\tfinalized\"t\n" +
	"\x13CallContractRequest\x12!\n" +
	"\x04call\x18\x01 \x01(\v2\r.loop.CallMsgR\x04call\x12:\n" +
	"\x0fconfidenceLevel\x18\x02 \x01(\x0e2\x10.loop.ConfidenceR\x0fconfidenceLevel\"'\n" +
	"\x11CallContractReply\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"A\n" +
	"\x18GetTransactionFeeRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\"M\n" +
	"\x16GetTransactionFeeReply\x123\n" +
	"\x0etransation_fee\x18\x01 \x01(\v2\f.loop.BigIntR\rtransationFee\"I\n" +
	"\x0eGetLogsRequest\x127\n" +
	"\ffilter_query\x18\x01 \x01(\v2\x14.loop.EVMFilterQueryR\vfilterQuery\"-\n" +
	"\fGetLogsReply\x12\x1d\n" +
	"\x04logs\x18\x01 \x03(\v2\t.loop.LogR\x04logs\"]\n" +
	"\x10BalanceAtRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12/\n" +
	"\fblock_number\x18\x02 \x01(\v2\f.loop.BigIntR\vblockNumber\"8\n" +
	"\x0eBalanceAtReply\x12&\n" +
	"\abalance\x18\x01 \x01(\v2\f.loop.BigIntR\abalance\"5\n" +
	"\x12EstimateGasRequest\x12\x1f\n" +
	"\x03msg\x18\x01 \x01(\v2\r.loop.CallMsgR\x03msg\"$\n" +
	"\x10EstimateGasReply\x12\x10\n" +
	"\x03gas\x18\x01 \x01(\x04R\x03gas\"1\n" +
	"\x1bGetTransactionByHashRequest\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\tR\x04hash\"S\n" +
	"\x19GetTransactionByHashReply\x126\n" +
	"\vtransaction\x18\x01 \x01(\v2\x14.loop.EVMTransactionR\vtransaction\"'\n" +
	"\x11GetReceiptRequest\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\tR\x04hash\"=\n" +
	"\x0fGetReceiptReply\x12*\n" +
	"\areceipt\x18\x01 \x01(\v2\x10.loop.EVMReceiptR\areceipt\"D\n" +
	"\x1aRegisterLogTrackingRequest\x12&\n" +
	"\x06filter\x18\x01 \x01(\v2\x0e.loop.LPFilterR\x06filter\"?\n" +
	"\x1cUnregisterLogTrackingRequest\x12\x1f\n" +
	"\vfilter_name\x18\x01 \x01(\tR\n" +
	"filterName\"M\n" +
	"\x19QueryLogsFromCacheRequest\x120\n" +
	"\n" +
	"expression\x18\x01 \x03(\v2\x10.loop.ExpressionR\n" +
	"expression\"8\n" +
	"\x17QueryLogsFromCacheReply\x12\x1d\n" +
	"\x04logs\x18\x01 \x03(\v2\t.loop.LogR\x04logs\"N\n" +
	"\x1aSubscribeLogTriggerRequest\x120\n" +
	"\n" +
	"expression\x18\x01 \x03(\v2\x10.loop.ExpressionR\n" +
	"expression\".\n" +
	"\x0fLogTriggerReply\x12\x1b\n" +
	"\x03log\x18\x01 \x01(\v2\t.loop.LogR\x03log2\xf3\a\n" +
	"\x03EVM\x12S\n" +
	"\x11GetTransactionFee\x12\x1e.loop.GetTransactionFeeRequest\x1a\x1c.loop.GetTransactionFeeReply\"\x00\x12B\n" +
	"\fCallContract\x12\x19.loop.CallContractRequest\x1a\x17.loop.CallContractReply\x123\n" +
	"\aGetLogs\x12\x14.loop.GetLogsRequest\x1a\x12.loop.GetLogsReply\x129\n" +
	"\tBalanceAt\x12\x16.loop.BalanceAtRequest\x1a\x14.loop.BalanceAtReply\x12?\n" +
	"\vEstimateGas\x12\x18.loop.EstimateGasRequest\x1a\x16.loop.EstimateGasReply\x12Z\n" +
	"\x14GetTransactionByHash\x12!.loop.GetTransactionByHashRequest\x1a\x1f.loop.GetTransactionByHashReply\x12G\n" +
	"\x15GetTransactionReceipt\x12\x17.loop.GetReceiptRequest\x1a\x15.loop.GetReceiptReply\x12S\n" +
	"\x16LatestAndFinalizedHead\x12\x16.google.protobuf.Empty\x1a!.loop.LatestAndFinalizedHeadReply\x12T\n" +
	"\x12QueryLogsFromCache\x12\x1f.loop.QueryLogsFromCacheRequest\x1a\x1d.loop.QueryLogsFromCacheReply\x12P\n" +
	"\x13SubscribeLogTrigger\x12 .loop.SubscribeLogTriggerRequest\x1a\x15.loop.LogTriggerReply0\x01\x12O\n" +
	"\x13RegisterLogTracking\x12 .loop.RegisterLogTrackingRequest\x1a\x16.google.protobuf.Empty\x12S\n" +
	"\x15UnregisterLogTracking\x12\".loop.UnregisterLogTrackingRequest\x1a\x16.google.protobuf.Empty\x12Z\n" +
	"\x14GetTransactionStatus\x12!.loop.GetTransactionStatusRequest\x1a\x1f.loop.GetTransactionStatusReplyBCZAgithub.com/smartcontractkit/chainlink-common/pkg/loop/internal/pbb\x06proto3"

var (
	file_evm_proto_rawDescOnce sync.Once
	file_evm_proto_rawDescData []byte
)

func file_evm_proto_rawDescGZIP() []byte {
	file_evm_proto_rawDescOnce.Do(func() {
		file_evm_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_evm_proto_rawDesc), len(file_evm_proto_rawDesc)))
	})
	return file_evm_proto_rawDescData
}

var file_evm_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_evm_proto_goTypes = []any{
	(*CallMsg)(nil),                      // 0: loop.CallMsg
	(*Log)(nil),                          // 1: loop.Log
	(*EVMFilterQuery)(nil),               // 2: loop.EVMFilterQuery
	(*EVMTransaction)(nil),               // 3: loop.EVMTransaction
	(*EVMReceipt)(nil),                   // 4: loop.EVMReceipt
	(*LPFilter)(nil),                     // 5: loop.LPFilter
	(*LatestAndFinalizedHeadReply)(nil),  // 6: loop.LatestAndFinalizedHeadReply
	(*CallContractRequest)(nil),          // 7: loop.CallContractRequest
	(*CallContractReply)(nil),            // 8: loop.CallContractReply
	(*GetTransactionFeeRequest)(nil),     // 9: loop.GetTransactionFeeRequest
	(*GetTransactionFeeReply)(nil),       // 10: loop.GetTransactionFeeReply
	(*GetLogsRequest)(nil),               // 11: loop.GetLogsRequest
	(*GetLogsReply)(nil),                 // 12: loop.GetLogsReply
	(*BalanceAtRequest)(nil),             // 13: loop.BalanceAtRequest
	(*BalanceAtReply)(nil),               // 14: loop.BalanceAtReply
	(*EstimateGasRequest)(nil),           // 15: loop.EstimateGasRequest
	(*EstimateGasReply)(nil),             // 16: loop.EstimateGasReply
	(*GetTransactionByHashRequest)(nil),  // 17: loop.GetTransactionByHashRequest
	(*GetTransactionByHashReply)(nil),    // 18: loop.GetTransactionByHashReply
	(*GetReceiptRequest)(nil),            // 19: loop.GetReceiptRequest
	(*GetReceiptReply)(nil),              // 20: loop.GetReceiptReply
	(*RegisterLogTrackingRequest)(nil),   // 21: loop.RegisterLogTrackingRequest
	(*UnregisterLogTrackingRequest)(nil), // 22: loop.UnregisterLogTrackingRequest
	(*QueryLogsFromCacheRequest)(nil),    // 23: loop.QueryLogsFromCacheRequest
	(*QueryLogsFromCacheReply)(nil),      // 24: loop.QueryLogsFromCacheReply
	(*SubscribeLogTriggerRequest)(nil),   // 25: loop.SubscribeLogTriggerRequest
	(*LogTriggerReply)(nil),              // 26: loop.LogTriggerReply
	(*BigInt)(nil),                       // 27: loop.BigInt
	(*Head)(nil),                         // 28: loop.Head
	(Confidence)(0),                      // 29: loop.Confidence
	(*Expression)(nil),                   // 30: loop.Expression
	(*emptypb.Empty)(nil),                // 31: google.protobuf.Empty
	(*GetTransactionStatusRequest)(nil),  // 32: loop.GetTransactionStatusRequest
	(*GetTransactionStatusReply)(nil),    // 33: loop.GetTransactionStatusReply
}
var file_evm_proto_depIdxs = []int32{
	27, // 0: loop.Log.block_number:type_name -> loop.BigInt
	27, // 1: loop.EVMFilterQuery.fromBlock:type_name -> loop.BigInt
	27, // 2: loop.EVMFilterQuery.toBlock:type_name -> loop.BigInt
	27, // 3: loop.EVMTransaction.value:type_name -> loop.BigInt
	27, // 4: loop.EVMTransaction.gas_price:type_name -> loop.BigInt
	1,  // 5: loop.EVMReceipt.logs:type_name -> loop.Log
	27, // 6: loop.EVMReceipt.effective_gas_price:type_name -> loop.BigInt
	27, // 7: loop.EVMReceipt.block_number:type_name -> loop.BigInt
	28, // 8: loop.LatestAndFinalizedHeadReply.latest:type_name -> loop.Head
	28, // 9: loop.LatestAndFinalizedHeadReply.finalized:type_name -> loop.Head
	0,  // 10: loop.CallContractRequest.call:type_name -> loop.CallMsg
	29, // 11: loop.CallContractRequest.confidenceLevel:type_name -> loop.Confidence
	27, // 12: loop.GetTransactionFeeReply.transation_fee:type_name -> loop.BigInt
	2,  // 13: loop.GetLogsRequest.filter_query:type_name -> loop.EVMFilterQuery
	1,  // 14: loop.GetLogsReply.logs:type_name -> loop.Log
	27, // 15: loop.BalanceAtRequest.block_number:type_name -> loop.BigInt
	27, // 16: loop.BalanceAtReply.balance:type_name -> loop.BigInt
	0,  // 17: loop.EstimateGasRequest.msg:type_name -> loop.CallMsg
	3,  // 18: loop.GetTransactionByHashReply.transaction:type_name -> loop.EVMTransaction
	4,  // 19: loop.GetReceiptReply.receipt:type_name -> loop.EVMReceipt
	5,  // 20: loop.RegisterLogTrackingRequest.filter:type_name -> loop.LPFilter
	30, // 21: loop.QueryLogsFromCacheRequest.expression:type_name -> loop.Expression
	1,  // 22: loop.QueryLogsFromCacheReply.logs:type_name -> loop.Log
	30, // 23: loop.SubscribeLogTriggerRequest.expression:type_name -> loop.Expression
	1,  // 24: loop.LogTriggerReply.log:type_name -> loop.Log
	9,  // 25: loop.EVM.GetTransactionFee:input_type -> loop.GetTransactionFeeRequest
	7,  // 26: loop.EVM.CallContract:input_type -> loop.CallContractRequest
	11, // 27: loop.EVM.GetLogs:input_type -> loop.GetLogsRequest
	13, // 28: loop.EVM.BalanceAt:input_type -> loop.BalanceAtRequest
	15, // 29: loop.EVM.EstimateGas:input_type -> loop.EstimateGasRequest
	17, // 30: loop.EVM.GetTransactionByHash:input_type -> loop.GetTransactionByHashRequest
	19, // 31: loop.EVM.GetTransactionReceipt:input_type -> loop.GetReceiptRequest
	31, // 32: loop.EVM.LatestAndFinalizedHead:input_type -> google.protobuf.Empty
	23, // 33: loop.EVM.QueryLogsFromCache:input_type -> loop.QueryLogsFromCacheRequest
	25, // 34: loop.EVM.SubscribeLogTrigger:input_type -> loop.SubscribeLogTriggerRequest
	21, // 35: loop.EVM.RegisterLogTracking:input_type -> loop.RegisterLogTrackingRequest
	22, // 36: loop.EVM.UnregisterLogTracking:input_type -> loop.UnregisterLogTrackingRequest
	32, // 37: loop.EVM.GetTransactionStatus:input_type -> loop.GetTransactionStatusRequest
	10, // 38: loop.EVM.GetTransactionFee:output_type -> loop.GetTransactionFeeReply
	8,  // 39: loop.EVM.CallContract:output_type -> loop.CallContractReply
	12, // 40: loop.EVM.GetLogs:output_type -> loop.GetLogsReply
	14, // 41: loop.EVM.BalanceAt:output_type -> loop.BalanceAtReply
	16, // 42: loop.EVM.EstimateGas:output_type -> loop.EstimateGasReply
	18, // 43: loop.EVM.GetTransactionByHash:output_type -> loop.GetTransactionByHashReply
	20, // 44: loop.EVM.GetTransactionReceipt:output_type -> loop.GetReceiptReply
	6,  // 45: loop.EVM.LatestAndFinalizedHead:output_type -> loop.LatestAndFinalizedHeadReply
	24, // 46: loop.EVM.QueryLogsFromCache:output_type -> loop.QueryLogsFromCacheReply
	26, // 47: loop.EVM.SubscribeLogTrigger:output_type -> loop.LogTriggerReply
	31, // 48: loop.EVM.RegisterLogTracking:output_type -> google.protobuf.Empty
	31, // 49: loop.EVM.UnregisterLogTracking:output_type -> google.protobuf.Empty
	33, // 50: loop.EVM.GetTransactionStatus:output_type -> loop.GetTransactionStatusReply
	38, // [38:51] is the sub-list for method output_type
	25, // [25:38] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_evm_proto_init() }
func file_evm_proto_init() {
	if File_evm_proto != nil {
		return
	}
	file_relayer_proto_init()
	file_contract_reader_proto_init()
	file_contract_writer_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_evm_proto_rawDesc), len(file_evm_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_evm_proto_goTypes,
		DependencyIndexes: file_evm_proto_depIdxs,
		MessageInfos:      file_evm_proto_msgTypes,
	}.Build()
	File_evm_proto = out.File
	file_evm_proto_goTypes = nil
	file_evm_proto_depIdxs = nil
}
