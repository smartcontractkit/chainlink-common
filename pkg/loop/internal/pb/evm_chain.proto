syntax = "proto3";

package loop;

option go_package = "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb";

import "contract_writer.proto";
import "relayer.proto";

// EVM chain
service EVMChain {
  rpc GetTransactionFee(GetTransactionFeeRequest) returns (GetTransactionFeeReply) {}
}


// GetTransactionFeeRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractWriter.GetTransactionFee].
message GetTransactionFeeRequest {
    string transaction_id = 1; // idempotency key used when transaction was submitted
}

// GetTransactionFeeReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractWriter.GetTransactionFee].
message GetTransactionFeeReply {
    BigInt transation_fee = 2; // transaction fee is the cost of transaction execution in native currency
}


