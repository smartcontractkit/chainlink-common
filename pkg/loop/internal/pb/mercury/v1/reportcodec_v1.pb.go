// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: reportcodec_v1.proto

package mercuryv1pb

import (
	pb "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ReportFields is gRPC wrapper for struct [github.com/smartcontractkit/chainlink-data-streams/mercury/v1/ReportFields].
type ReportFields struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Timestamp             uint32                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BenchmarkPrice        *pb.BigInt             `protobuf:"bytes,2,opt,name=benchmarkPrice,proto3" json:"benchmarkPrice,omitempty"`
	Bid                   *pb.BigInt             `protobuf:"bytes,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Ask                   *pb.BigInt             `protobuf:"bytes,4,opt,name=ask,proto3" json:"ask,omitempty"`
	CurrentBlockNum       int64                  `protobuf:"varint,5,opt,name=currentBlockNum,proto3" json:"currentBlockNum,omitempty"`
	CurrentBlockHash      []byte                 `protobuf:"bytes,6,opt,name=currentBlockHash,proto3" json:"currentBlockHash,omitempty"`
	ValidFromBlockNum     int64                  `protobuf:"varint,7,opt,name=validFromBlockNum,proto3" json:"validFromBlockNum,omitempty"`
	CurrentBlockTimestamp uint64                 `protobuf:"varint,8,opt,name=currentBlockTimestamp,proto3" json:"currentBlockTimestamp,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ReportFields) Reset() {
	*x = ReportFields{}
	mi := &file_reportcodec_v1_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportFields) ProtoMessage() {}

func (x *ReportFields) ProtoReflect() protoreflect.Message {
	mi := &file_reportcodec_v1_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportFields.ProtoReflect.Descriptor instead.
func (*ReportFields) Descriptor() ([]byte, []int) {
	return file_reportcodec_v1_proto_rawDescGZIP(), []int{0}
}

func (x *ReportFields) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ReportFields) GetBenchmarkPrice() *pb.BigInt {
	if x != nil {
		return x.BenchmarkPrice
	}
	return nil
}

func (x *ReportFields) GetBid() *pb.BigInt {
	if x != nil {
		return x.Bid
	}
	return nil
}

func (x *ReportFields) GetAsk() *pb.BigInt {
	if x != nil {
		return x.Ask
	}
	return nil
}

func (x *ReportFields) GetCurrentBlockNum() int64 {
	if x != nil {
		return x.CurrentBlockNum
	}
	return 0
}

func (x *ReportFields) GetCurrentBlockHash() []byte {
	if x != nil {
		return x.CurrentBlockHash
	}
	return nil
}

func (x *ReportFields) GetValidFromBlockNum() int64 {
	if x != nil {
		return x.ValidFromBlockNum
	}
	return 0
}

func (x *ReportFields) GetCurrentBlockTimestamp() uint64 {
	if x != nil {
		return x.CurrentBlockTimestamp
	}
	return 0
}

// BuildReportRequest is gRPC adapter for [github.com/smartcontractkit/chainlink-data-streams/mercury/v1/ReportCodec.BuildReport].
type BuildReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportFields  *ReportFields          `protobuf:"bytes,1,opt,name=reportFields,proto3" json:"reportFields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildReportRequest) Reset() {
	*x = BuildReportRequest{}
	mi := &file_reportcodec_v1_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildReportRequest) ProtoMessage() {}

func (x *BuildReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reportcodec_v1_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildReportRequest.ProtoReflect.Descriptor instead.
func (*BuildReportRequest) Descriptor() ([]byte, []int) {
	return file_reportcodec_v1_proto_rawDescGZIP(), []int{1}
}

func (x *BuildReportRequest) GetReportFields() *ReportFields {
	if x != nil {
		return x.ReportFields
	}
	return nil
}

// BuildReportReply is gRPC adapter for the return values of [github.com/smartcontractkit/chainlink-data-streams/mercury/v1/ReportCodec.BuildReport].
type BuildReportReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Report        []byte                 `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildReportReply) Reset() {
	*x = BuildReportReply{}
	mi := &file_reportcodec_v1_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildReportReply) ProtoMessage() {}

func (x *BuildReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_reportcodec_v1_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildReportReply.ProtoReflect.Descriptor instead.
func (*BuildReportReply) Descriptor() ([]byte, []int) {
	return file_reportcodec_v1_proto_rawDescGZIP(), []int{2}
}

func (x *BuildReportReply) GetReport() []byte {
	if x != nil {
		return x.Report
	}
	return nil
}

// MaxReportLengthRequest is gRPC adapter for [github.com/smartcontractkit/chainlink-data-streams/mercury/v3/ReportCodec.MaxReportLength].
type MaxReportLengthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumOracles    uint64                 `protobuf:"varint,1,opt,name=numOracles,proto3" json:"numOracles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MaxReportLengthRequest) Reset() {
	*x = MaxReportLengthRequest{}
	mi := &file_reportcodec_v1_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaxReportLengthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxReportLengthRequest) ProtoMessage() {}

func (x *MaxReportLengthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reportcodec_v1_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxReportLengthRequest.ProtoReflect.Descriptor instead.
func (*MaxReportLengthRequest) Descriptor() ([]byte, []int) {
	return file_reportcodec_v1_proto_rawDescGZIP(), []int{3}
}

func (x *MaxReportLengthRequest) GetNumOracles() uint64 {
	if x != nil {
		return x.NumOracles
	}
	return 0
}

// MaxReportLengthReply has return arguments for [github.com/smartcontractkit/chainlink-data-streams/mercury/v3/ReportCodec.MaxReportLength].
type MaxReportLengthReply struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MaxReportLength uint64                 `protobuf:"varint,1,opt,name=maxReportLength,proto3" json:"maxReportLength,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MaxReportLengthReply) Reset() {
	*x = MaxReportLengthReply{}
	mi := &file_reportcodec_v1_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaxReportLengthReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxReportLengthReply) ProtoMessage() {}

func (x *MaxReportLengthReply) ProtoReflect() protoreflect.Message {
	mi := &file_reportcodec_v1_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxReportLengthReply.ProtoReflect.Descriptor instead.
func (*MaxReportLengthReply) Descriptor() ([]byte, []int) {
	return file_reportcodec_v1_proto_rawDescGZIP(), []int{4}
}

func (x *MaxReportLengthReply) GetMaxReportLength() uint64 {
	if x != nil {
		return x.MaxReportLength
	}
	return 0
}

// CurrentBlockNumFromReportRequest is gRPC adapter for [github.com/smartcontractkit/chainlink-data-streams/mercury/v1/ReportCodec.CurrentBlockNumFromReport].
type CurrentBlockNumFromReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Report        []byte                 `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CurrentBlockNumFromReportRequest) Reset() {
	*x = CurrentBlockNumFromReportRequest{}
	mi := &file_reportcodec_v1_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentBlockNumFromReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentBlockNumFromReportRequest) ProtoMessage() {}

func (x *CurrentBlockNumFromReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reportcodec_v1_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentBlockNumFromReportRequest.ProtoReflect.Descriptor instead.
func (*CurrentBlockNumFromReportRequest) Descriptor() ([]byte, []int) {
	return file_reportcodec_v1_proto_rawDescGZIP(), []int{5}
}

func (x *CurrentBlockNumFromReportRequest) GetReport() []byte {
	if x != nil {
		return x.Report
	}
	return nil
}

// CurrentBlockNumFromReportResponse is gRPC adapter for [github.com/smartcontractkit/chainlink-data-streams/mercury/v1/ReportCodec.CurrentBlockNumFromReport].
type CurrentBlockNumFromReportResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CurrentBlockNum int64                  `protobuf:"varint,1,opt,name=currentBlockNum,proto3" json:"currentBlockNum,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CurrentBlockNumFromReportResponse) Reset() {
	*x = CurrentBlockNumFromReportResponse{}
	mi := &file_reportcodec_v1_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentBlockNumFromReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentBlockNumFromReportResponse) ProtoMessage() {}

func (x *CurrentBlockNumFromReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_reportcodec_v1_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentBlockNumFromReportResponse.ProtoReflect.Descriptor instead.
func (*CurrentBlockNumFromReportResponse) Descriptor() ([]byte, []int) {
	return file_reportcodec_v1_proto_rawDescGZIP(), []int{6}
}

func (x *CurrentBlockNumFromReportResponse) GetCurrentBlockNum() int64 {
	if x != nil {
		return x.CurrentBlockNum
	}
	return 0
}

var File_reportcodec_v1_proto protoreflect.FileDescriptor

const file_reportcodec_v1_proto_rawDesc = "" +
	"\n" +
	"\x14reportcodec_v1.proto\x12\x1bloop.internal.pb.mercury.v1\x1a\rrelayer.proto\"\xdc\x02\n" +
	"\fReportFields\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\rR\ttimestamp\x124\n" +
	"\x0ebenchmarkPrice\x18\x02 \x01(\v2\f.loop.BigIntR\x0ebenchmarkPrice\x12\x1e\n" +
	"\x03bid\x18\x03 \x01(\v2\f.loop.BigIntR\x03bid\x12\x1e\n" +
	"\x03ask\x18\x04 \x01(\v2\f.loop.BigIntR\x03ask\x12(\n" +
	"\x0fcurrentBlockNum\x18\x05 \x01(\x03R\x0fcurrentBlockNum\x12*\n" +
	"\x10currentBlockHash\x18\x06 \x01(\fR\x10currentBlockHash\x12,\n" +
	"\x11validFromBlockNum\x18\a \x01(\x03R\x11validFromBlockNum\x124\n" +
	"\x15currentBlockTimestamp\x18\b \x01(\x04R\x15currentBlockTimestamp\"c\n" +
	"\x12BuildReportRequest\x12M\n" +
	"\freportFields\x18\x01 \x01(\v2).loop.internal.pb.mercury.v1.ReportFieldsR\freportFields\"*\n" +
	"\x10BuildReportReply\x12\x16\n" +
	"\x06report\x18\x01 \x01(\fR\x06report\"8\n" +
	"\x16MaxReportLengthRequest\x12\x1e\n" +
	"\n" +
	"numOracles\x18\x01 \x01(\x04R\n" +
	"numOracles\"@\n" +
	"\x14MaxReportLengthReply\x12(\n" +
	"\x0fmaxReportLength\x18\x01 \x01(\x04R\x0fmaxReportLength\":\n" +
	" CurrentBlockNumFromReportRequest\x12\x16\n" +
	"\x06report\x18\x01 \x01(\fR\x06report\"M\n" +
	"!CurrentBlockNumFromReportResponse\x12(\n" +
	"\x0fcurrentBlockNum\x18\x01 \x01(\x03R\x0fcurrentBlockNum2\x9a\x03\n" +
	"\vReportCodec\x12o\n" +
	"\vBuildReport\x12/.loop.internal.pb.mercury.v1.BuildReportRequest\x1a-.loop.internal.pb.mercury.v1.BuildReportReply\"\x00\x12{\n" +
	"\x0fMaxReportLength\x123.loop.internal.pb.mercury.v1.MaxReportLengthRequest\x1a1.loop.internal.pb.mercury.v1.MaxReportLengthReply\"\x00\x12\x9c\x01\n" +
	"\x19CurrentBlockNumFromReport\x12=.loop.internal.pb.mercury.v1.CurrentBlockNumFromReportRequest\x1a>.loop.internal.pb.mercury.v1.CurrentBlockNumFromReportResponse\"\x00BZZXgithub.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/mercury/v1;mercuryv1pbb\x06proto3"

var (
	file_reportcodec_v1_proto_rawDescOnce sync.Once
	file_reportcodec_v1_proto_rawDescData []byte
)

func file_reportcodec_v1_proto_rawDescGZIP() []byte {
	file_reportcodec_v1_proto_rawDescOnce.Do(func() {
		file_reportcodec_v1_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_reportcodec_v1_proto_rawDesc), len(file_reportcodec_v1_proto_rawDesc)))
	})
	return file_reportcodec_v1_proto_rawDescData
}

var file_reportcodec_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_reportcodec_v1_proto_goTypes = []any{
	(*ReportFields)(nil),                      // 0: loop.internal.pb.mercury.v1.ReportFields
	(*BuildReportRequest)(nil),                // 1: loop.internal.pb.mercury.v1.BuildReportRequest
	(*BuildReportReply)(nil),                  // 2: loop.internal.pb.mercury.v1.BuildReportReply
	(*MaxReportLengthRequest)(nil),            // 3: loop.internal.pb.mercury.v1.MaxReportLengthRequest
	(*MaxReportLengthReply)(nil),              // 4: loop.internal.pb.mercury.v1.MaxReportLengthReply
	(*CurrentBlockNumFromReportRequest)(nil),  // 5: loop.internal.pb.mercury.v1.CurrentBlockNumFromReportRequest
	(*CurrentBlockNumFromReportResponse)(nil), // 6: loop.internal.pb.mercury.v1.CurrentBlockNumFromReportResponse
	(*pb.BigInt)(nil),                         // 7: loop.BigInt
}
var file_reportcodec_v1_proto_depIdxs = []int32{
	7, // 0: loop.internal.pb.mercury.v1.ReportFields.benchmarkPrice:type_name -> loop.BigInt
	7, // 1: loop.internal.pb.mercury.v1.ReportFields.bid:type_name -> loop.BigInt
	7, // 2: loop.internal.pb.mercury.v1.ReportFields.ask:type_name -> loop.BigInt
	0, // 3: loop.internal.pb.mercury.v1.BuildReportRequest.reportFields:type_name -> loop.internal.pb.mercury.v1.ReportFields
	1, // 4: loop.internal.pb.mercury.v1.ReportCodec.BuildReport:input_type -> loop.internal.pb.mercury.v1.BuildReportRequest
	3, // 5: loop.internal.pb.mercury.v1.ReportCodec.MaxReportLength:input_type -> loop.internal.pb.mercury.v1.MaxReportLengthRequest
	5, // 6: loop.internal.pb.mercury.v1.ReportCodec.CurrentBlockNumFromReport:input_type -> loop.internal.pb.mercury.v1.CurrentBlockNumFromReportRequest
	2, // 7: loop.internal.pb.mercury.v1.ReportCodec.BuildReport:output_type -> loop.internal.pb.mercury.v1.BuildReportReply
	4, // 8: loop.internal.pb.mercury.v1.ReportCodec.MaxReportLength:output_type -> loop.internal.pb.mercury.v1.MaxReportLengthReply
	6, // 9: loop.internal.pb.mercury.v1.ReportCodec.CurrentBlockNumFromReport:output_type -> loop.internal.pb.mercury.v1.CurrentBlockNumFromReportResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_reportcodec_v1_proto_init() }
func file_reportcodec_v1_proto_init() {
	if File_reportcodec_v1_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_reportcodec_v1_proto_rawDesc), len(file_reportcodec_v1_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_reportcodec_v1_proto_goTypes,
		DependencyIndexes: file_reportcodec_v1_proto_depIdxs,
		MessageInfos:      file_reportcodec_v1_proto_msgTypes,
	}.Build()
	File_reportcodec_v1_proto = out.File
	file_reportcodec_v1_proto_goTypes = nil
	file_reportcodec_v1_proto_depIdxs = nil
}
