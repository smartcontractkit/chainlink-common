// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: gaspriceestimator.proto

package ccippb

import (
	pb "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetGasPriceResponse returns the current gas price. It is a gRPC adpater for the return values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorExec.GetGasPrice]
type GetGasPriceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GasPrice      *pb.BigInt             `protobuf:"bytes,1,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGasPriceResponse) Reset() {
	*x = GetGasPriceResponse{}
	mi := &file_gaspriceestimator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGasPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGasPriceResponse) ProtoMessage() {}

func (x *GetGasPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaspriceestimator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGasPriceResponse.ProtoReflect.Descriptor instead.
func (*GetGasPriceResponse) Descriptor() ([]byte, []int) {
	return file_gaspriceestimator_proto_rawDescGZIP(), []int{0}
}

func (x *GetGasPriceResponse) GetGasPrice() *pb.BigInt {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

// DenoteInUSDRequest is a gRPC adapter for the input values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorExec.DenoteInUSD]
type DenoteInUSDRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	P                  *pb.BigInt             `protobuf:"bytes,1,opt,name=p,proto3" json:"p,omitempty"`
	WrappedNativePrice *pb.BigInt             `protobuf:"bytes,2,opt,name=wrapped_native_price,json=wrappedNativePrice,proto3" json:"wrapped_native_price,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DenoteInUSDRequest) Reset() {
	*x = DenoteInUSDRequest{}
	mi := &file_gaspriceestimator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DenoteInUSDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenoteInUSDRequest) ProtoMessage() {}

func (x *DenoteInUSDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaspriceestimator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenoteInUSDRequest.ProtoReflect.Descriptor instead.
func (*DenoteInUSDRequest) Descriptor() ([]byte, []int) {
	return file_gaspriceestimator_proto_rawDescGZIP(), []int{1}
}

func (x *DenoteInUSDRequest) GetP() *pb.BigInt {
	if x != nil {
		return x.P
	}
	return nil
}

func (x *DenoteInUSDRequest) GetWrappedNativePrice() *pb.BigInt {
	if x != nil {
		return x.WrappedNativePrice
	}
	return nil
}

// DenoteInUSDResponse returns the price in USD. It is a gRPC adapter for the return values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorExec.DenoteInUSD]
type DenoteInUSDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UsdPrice      *pb.BigInt             `protobuf:"bytes,1,opt,name=usd_price,json=usdPrice,proto3" json:"usd_price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DenoteInUSDResponse) Reset() {
	*x = DenoteInUSDResponse{}
	mi := &file_gaspriceestimator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DenoteInUSDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenoteInUSDResponse) ProtoMessage() {}

func (x *DenoteInUSDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaspriceestimator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenoteInUSDResponse.ProtoReflect.Descriptor instead.
func (*DenoteInUSDResponse) Descriptor() ([]byte, []int) {
	return file_gaspriceestimator_proto_rawDescGZIP(), []int{2}
}

func (x *DenoteInUSDResponse) GetUsdPrice() *pb.BigInt {
	if x != nil {
		return x.UsdPrice
	}
	return nil
}

// EstimateMsgCostUSDRequest is a gRPC adapter for the input values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorExec.EstimateMsgCostUSD]
type EstimateMsgCostUSDRequest struct {
	state              protoimpl.MessageState                  `protogen:"open.v1"`
	P                  *pb.BigInt                              `protobuf:"bytes,1,opt,name=p,proto3" json:"p,omitempty"`
	WrappedNativePrice *pb.BigInt                              `protobuf:"bytes,2,opt,name=wrapped_native_price,json=wrappedNativePrice,proto3" json:"wrapped_native_price,omitempty"`
	Msg                *EVM2EVMOnRampCCIPSendRequestedWithMeta `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *EstimateMsgCostUSDRequest) Reset() {
	*x = EstimateMsgCostUSDRequest{}
	mi := &file_gaspriceestimator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateMsgCostUSDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateMsgCostUSDRequest) ProtoMessage() {}

func (x *EstimateMsgCostUSDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaspriceestimator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateMsgCostUSDRequest.ProtoReflect.Descriptor instead.
func (*EstimateMsgCostUSDRequest) Descriptor() ([]byte, []int) {
	return file_gaspriceestimator_proto_rawDescGZIP(), []int{3}
}

func (x *EstimateMsgCostUSDRequest) GetP() *pb.BigInt {
	if x != nil {
		return x.P
	}
	return nil
}

func (x *EstimateMsgCostUSDRequest) GetWrappedNativePrice() *pb.BigInt {
	if x != nil {
		return x.WrappedNativePrice
	}
	return nil
}

func (x *EstimateMsgCostUSDRequest) GetMsg() *EVM2EVMOnRampCCIPSendRequestedWithMeta {
	if x != nil {
		return x.Msg
	}
	return nil
}

// EstimateMsgCostUSDResponse returns the estimated cost in USD. It is a gRPC adapter for the return values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorExec.EstimateMsgCostUSD]
type EstimateMsgCostUSDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UsdCost       *pb.BigInt             `protobuf:"bytes,1,opt,name=usd_cost,json=usdCost,proto3" json:"usd_cost,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateMsgCostUSDResponse) Reset() {
	*x = EstimateMsgCostUSDResponse{}
	mi := &file_gaspriceestimator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateMsgCostUSDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateMsgCostUSDResponse) ProtoMessage() {}

func (x *EstimateMsgCostUSDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaspriceestimator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateMsgCostUSDResponse.ProtoReflect.Descriptor instead.
func (*EstimateMsgCostUSDResponse) Descriptor() ([]byte, []int) {
	return file_gaspriceestimator_proto_rawDescGZIP(), []int{4}
}

func (x *EstimateMsgCostUSDResponse) GetUsdCost() *pb.BigInt {
	if x != nil {
		return x.UsdCost
	}
	return nil
}

// MedianRequest is a gRPC adapter for the input values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.CommonGasPriceEstimator.Median]
type MedianRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GasPrices     []*pb.BigInt           `protobuf:"bytes,1,rep,name=gas_prices,json=gasPrices,proto3" json:"gas_prices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MedianRequest) Reset() {
	*x = MedianRequest{}
	mi := &file_gaspriceestimator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MedianRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedianRequest) ProtoMessage() {}

func (x *MedianRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaspriceestimator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MedianRequest.ProtoReflect.Descriptor instead.
func (*MedianRequest) Descriptor() ([]byte, []int) {
	return file_gaspriceestimator_proto_rawDescGZIP(), []int{5}
}

func (x *MedianRequest) GetGasPrices() []*pb.BigInt {
	if x != nil {
		return x.GasPrices
	}
	return nil
}

// MedianResponse returns the median gas price. It is a gRPC adapter for the return values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.CommonGasPriceEstimator.Median]
type MedianResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GasPrice      *pb.BigInt             `protobuf:"bytes,1,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MedianResponse) Reset() {
	*x = MedianResponse{}
	mi := &file_gaspriceestimator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MedianResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedianResponse) ProtoMessage() {}

func (x *MedianResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaspriceestimator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MedianResponse.ProtoReflect.Descriptor instead.
func (*MedianResponse) Descriptor() ([]byte, []int) {
	return file_gaspriceestimator_proto_rawDescGZIP(), []int{6}
}

func (x *MedianResponse) GetGasPrice() *pb.BigInt {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

// DeviatesRequest is a gRPC adapter for the input values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorCommit.Deviates]
type DeviatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	P1            *pb.BigInt             `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2            *pb.BigInt             `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviatesRequest) Reset() {
	*x = DeviatesRequest{}
	mi := &file_gaspriceestimator_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviatesRequest) ProtoMessage() {}

func (x *DeviatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaspriceestimator_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviatesRequest.ProtoReflect.Descriptor instead.
func (*DeviatesRequest) Descriptor() ([]byte, []int) {
	return file_gaspriceestimator_proto_rawDescGZIP(), []int{7}
}

func (x *DeviatesRequest) GetP1() *pb.BigInt {
	if x != nil {
		return x.P1
	}
	return nil
}

func (x *DeviatesRequest) GetP2() *pb.BigInt {
	if x != nil {
		return x.P2
	}
	return nil
}

// DeviatesResponse returns the deviation between two gas prices. It is a gRPC adapter for the return values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorCommit.Deviates]
type DeviatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deviates      bool                   `protobuf:"varint,1,opt,name=deviates,proto3" json:"deviates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviatesResponse) Reset() {
	*x = DeviatesResponse{}
	mi := &file_gaspriceestimator_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviatesResponse) ProtoMessage() {}

func (x *DeviatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gaspriceestimator_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviatesResponse.ProtoReflect.Descriptor instead.
func (*DeviatesResponse) Descriptor() ([]byte, []int) {
	return file_gaspriceestimator_proto_rawDescGZIP(), []int{8}
}

func (x *DeviatesResponse) GetDeviates() bool {
	if x != nil {
		return x.Deviates
	}
	return false
}

var File_gaspriceestimator_proto protoreflect.FileDescriptor

const file_gaspriceestimator_proto_rawDesc = "" +
	"\n" +
	"\x17gaspriceestimator.proto\x12\x15loop.internal.pb.ccip\x1a\x1bgoogle/protobuf/empty.proto\x1a\rrelayer.proto\x1a\fmodels.proto\"@\n" +
	"\x13GetGasPriceResponse\x12)\n" +
	"\tgas_price\x18\x01 \x01(\v2\f.loop.BigIntR\bgasPrice\"p\n" +
	"\x12DenoteInUSDRequest\x12\x1a\n" +
	"\x01p\x18\x01 \x01(\v2\f.loop.BigIntR\x01p\x12>\n" +
	"\x14wrapped_native_price\x18\x02 \x01(\v2\f.loop.BigIntR\x12wrappedNativePrice\"@\n" +
	"\x13DenoteInUSDResponse\x12)\n" +
	"\tusd_price\x18\x01 \x01(\v2\f.loop.BigIntR\busdPrice\"\xc8\x01\n" +
	"\x19EstimateMsgCostUSDRequest\x12\x1a\n" +
	"\x01p\x18\x01 \x01(\v2\f.loop.BigIntR\x01p\x12>\n" +
	"\x14wrapped_native_price\x18\x02 \x01(\v2\f.loop.BigIntR\x12wrappedNativePrice\x12O\n" +
	"\x03msg\x18\x03 \x01(\v2=.loop.internal.pb.ccip.EVM2EVMOnRampCCIPSendRequestedWithMetaR\x03msg\"E\n" +
	"\x1aEstimateMsgCostUSDResponse\x12'\n" +
	"\busd_cost\x18\x01 \x01(\v2\f.loop.BigIntR\ausdCost\"<\n" +
	"\rMedianRequest\x12+\n" +
	"\n" +
	"gas_prices\x18\x01 \x03(\v2\f.loop.BigIntR\tgasPrices\";\n" +
	"\x0eMedianResponse\x12)\n" +
	"\tgas_price\x18\x01 \x01(\v2\f.loop.BigIntR\bgasPrice\"M\n" +
	"\x0fDeviatesRequest\x12\x1c\n" +
	"\x02p1\x18\x01 \x01(\v2\f.loop.BigIntR\x02p1\x12\x1c\n" +
	"\x02p2\x18\x02 \x01(\v2\f.loop.BigIntR\x02p2\".\n" +
	"\x10DeviatesResponse\x12\x1a\n" +
	"\bdeviates\x18\x01 \x01(\bR\bdeviates2\xa2\x03\n" +
	"\x15GasPriceEstimatorExec\x12Q\n" +
	"\vGetGasPrice\x12\x16.google.protobuf.Empty\x1a*.loop.internal.pb.ccip.GetGasPriceResponse\x12d\n" +
	"\vDenoteInUSD\x12).loop.internal.pb.ccip.DenoteInUSDRequest\x1a*.loop.internal.pb.ccip.DenoteInUSDResponse\x12y\n" +
	"\x12EstimateMsgCostUSD\x120.loop.internal.pb.ccip.EstimateMsgCostUSDRequest\x1a1.loop.internal.pb.ccip.EstimateMsgCostUSDResponse\x12U\n" +
	"\x06Median\x12$.loop.internal.pb.ccip.MedianRequest\x1a%.loop.internal.pb.ccip.MedianResponse2\x86\x03\n" +
	"\x17GasPriceEstimatorCommit\x12Q\n" +
	"\vGetGasPrice\x12\x16.google.protobuf.Empty\x1a*.loop.internal.pb.ccip.GetGasPriceResponse\x12d\n" +
	"\vDenoteInUSD\x12).loop.internal.pb.ccip.DenoteInUSDRequest\x1a*.loop.internal.pb.ccip.DenoteInUSDResponse\x12U\n" +
	"\x06Median\x12$.loop.internal.pb.ccip.MedianRequest\x1a%.loop.internal.pb.ccip.MedianResponse\x12[\n" +
	"\bDeviates\x12&.loop.internal.pb.ccip.DeviatesRequest\x1a'.loop.internal.pb.ccip.DeviatesResponseBOZMgithub.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/ccip;ccippbb\x06proto3"

var (
	file_gaspriceestimator_proto_rawDescOnce sync.Once
	file_gaspriceestimator_proto_rawDescData []byte
)

func file_gaspriceestimator_proto_rawDescGZIP() []byte {
	file_gaspriceestimator_proto_rawDescOnce.Do(func() {
		file_gaspriceestimator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gaspriceestimator_proto_rawDesc), len(file_gaspriceestimator_proto_rawDesc)))
	})
	return file_gaspriceestimator_proto_rawDescData
}

var file_gaspriceestimator_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_gaspriceestimator_proto_goTypes = []any{
	(*GetGasPriceResponse)(nil),                    // 0: loop.internal.pb.ccip.GetGasPriceResponse
	(*DenoteInUSDRequest)(nil),                     // 1: loop.internal.pb.ccip.DenoteInUSDRequest
	(*DenoteInUSDResponse)(nil),                    // 2: loop.internal.pb.ccip.DenoteInUSDResponse
	(*EstimateMsgCostUSDRequest)(nil),              // 3: loop.internal.pb.ccip.EstimateMsgCostUSDRequest
	(*EstimateMsgCostUSDResponse)(nil),             // 4: loop.internal.pb.ccip.EstimateMsgCostUSDResponse
	(*MedianRequest)(nil),                          // 5: loop.internal.pb.ccip.MedianRequest
	(*MedianResponse)(nil),                         // 6: loop.internal.pb.ccip.MedianResponse
	(*DeviatesRequest)(nil),                        // 7: loop.internal.pb.ccip.DeviatesRequest
	(*DeviatesResponse)(nil),                       // 8: loop.internal.pb.ccip.DeviatesResponse
	(*pb.BigInt)(nil),                              // 9: loop.BigInt
	(*EVM2EVMOnRampCCIPSendRequestedWithMeta)(nil), // 10: loop.internal.pb.ccip.EVM2EVMOnRampCCIPSendRequestedWithMeta
	(*emptypb.Empty)(nil),                          // 11: google.protobuf.Empty
}
var file_gaspriceestimator_proto_depIdxs = []int32{
	9,  // 0: loop.internal.pb.ccip.GetGasPriceResponse.gas_price:type_name -> loop.BigInt
	9,  // 1: loop.internal.pb.ccip.DenoteInUSDRequest.p:type_name -> loop.BigInt
	9,  // 2: loop.internal.pb.ccip.DenoteInUSDRequest.wrapped_native_price:type_name -> loop.BigInt
	9,  // 3: loop.internal.pb.ccip.DenoteInUSDResponse.usd_price:type_name -> loop.BigInt
	9,  // 4: loop.internal.pb.ccip.EstimateMsgCostUSDRequest.p:type_name -> loop.BigInt
	9,  // 5: loop.internal.pb.ccip.EstimateMsgCostUSDRequest.wrapped_native_price:type_name -> loop.BigInt
	10, // 6: loop.internal.pb.ccip.EstimateMsgCostUSDRequest.msg:type_name -> loop.internal.pb.ccip.EVM2EVMOnRampCCIPSendRequestedWithMeta
	9,  // 7: loop.internal.pb.ccip.EstimateMsgCostUSDResponse.usd_cost:type_name -> loop.BigInt
	9,  // 8: loop.internal.pb.ccip.MedianRequest.gas_prices:type_name -> loop.BigInt
	9,  // 9: loop.internal.pb.ccip.MedianResponse.gas_price:type_name -> loop.BigInt
	9,  // 10: loop.internal.pb.ccip.DeviatesRequest.p1:type_name -> loop.BigInt
	9,  // 11: loop.internal.pb.ccip.DeviatesRequest.p2:type_name -> loop.BigInt
	11, // 12: loop.internal.pb.ccip.GasPriceEstimatorExec.GetGasPrice:input_type -> google.protobuf.Empty
	1,  // 13: loop.internal.pb.ccip.GasPriceEstimatorExec.DenoteInUSD:input_type -> loop.internal.pb.ccip.DenoteInUSDRequest
	3,  // 14: loop.internal.pb.ccip.GasPriceEstimatorExec.EstimateMsgCostUSD:input_type -> loop.internal.pb.ccip.EstimateMsgCostUSDRequest
	5,  // 15: loop.internal.pb.ccip.GasPriceEstimatorExec.Median:input_type -> loop.internal.pb.ccip.MedianRequest
	11, // 16: loop.internal.pb.ccip.GasPriceEstimatorCommit.GetGasPrice:input_type -> google.protobuf.Empty
	1,  // 17: loop.internal.pb.ccip.GasPriceEstimatorCommit.DenoteInUSD:input_type -> loop.internal.pb.ccip.DenoteInUSDRequest
	5,  // 18: loop.internal.pb.ccip.GasPriceEstimatorCommit.Median:input_type -> loop.internal.pb.ccip.MedianRequest
	7,  // 19: loop.internal.pb.ccip.GasPriceEstimatorCommit.Deviates:input_type -> loop.internal.pb.ccip.DeviatesRequest
	0,  // 20: loop.internal.pb.ccip.GasPriceEstimatorExec.GetGasPrice:output_type -> loop.internal.pb.ccip.GetGasPriceResponse
	2,  // 21: loop.internal.pb.ccip.GasPriceEstimatorExec.DenoteInUSD:output_type -> loop.internal.pb.ccip.DenoteInUSDResponse
	4,  // 22: loop.internal.pb.ccip.GasPriceEstimatorExec.EstimateMsgCostUSD:output_type -> loop.internal.pb.ccip.EstimateMsgCostUSDResponse
	6,  // 23: loop.internal.pb.ccip.GasPriceEstimatorExec.Median:output_type -> loop.internal.pb.ccip.MedianResponse
	0,  // 24: loop.internal.pb.ccip.GasPriceEstimatorCommit.GetGasPrice:output_type -> loop.internal.pb.ccip.GetGasPriceResponse
	2,  // 25: loop.internal.pb.ccip.GasPriceEstimatorCommit.DenoteInUSD:output_type -> loop.internal.pb.ccip.DenoteInUSDResponse
	6,  // 26: loop.internal.pb.ccip.GasPriceEstimatorCommit.Median:output_type -> loop.internal.pb.ccip.MedianResponse
	8,  // 27: loop.internal.pb.ccip.GasPriceEstimatorCommit.Deviates:output_type -> loop.internal.pb.ccip.DeviatesResponse
	20, // [20:28] is the sub-list for method output_type
	12, // [12:20] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_gaspriceestimator_proto_init() }
func file_gaspriceestimator_proto_init() {
	if File_gaspriceestimator_proto != nil {
		return
	}
	file_models_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gaspriceestimator_proto_rawDesc), len(file_gaspriceestimator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_gaspriceestimator_proto_goTypes,
		DependencyIndexes: file_gaspriceestimator_proto_depIdxs,
		MessageInfos:      file_gaspriceestimator_proto_msgTypes,
	}.Build()
	File_gaspriceestimator_proto = out.File
	file_gaspriceestimator_proto_goTypes = nil
	file_gaspriceestimator_proto_depIdxs = nil
}
