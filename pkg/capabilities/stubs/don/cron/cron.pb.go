// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: capabilities/stubs/don/cron/cron.proto

package cron

import (
	_ "github.com/smartcontractkit/chainlink-common/pkg/capabilities/v2/protoc/pkg/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schedule      string                 `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_capabilities_stubs_don_cron_cron_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_stubs_don_cron_cron_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_capabilities_stubs_don_cron_cron_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

type CronTrigger struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	ScheduledExecutionTime int64                  `protobuf:"varint,1,opt,name=scheduled_execution_time,json=scheduledExecutionTime,proto3" json:"scheduled_execution_time,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CronTrigger) Reset() {
	*x = CronTrigger{}
	mi := &file_capabilities_stubs_don_cron_cron_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CronTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronTrigger) ProtoMessage() {}

func (x *CronTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_stubs_don_cron_cron_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronTrigger.ProtoReflect.Descriptor instead.
func (*CronTrigger) Descriptor() ([]byte, []int) {
	return file_capabilities_stubs_don_cron_cron_proto_rawDescGZIP(), []int{1}
}

func (x *CronTrigger) GetScheduledExecutionTime() int64 {
	if x != nil {
		return x.ScheduledExecutionTime
	}
	return 0
}

var File_capabilities_stubs_don_cron_cron_proto protoreflect.FileDescriptor

const file_capabilities_stubs_don_cron_cron_proto_rawDesc = "" +
	"\n" +
	"&capabilities/stubs/don/cron/cron.proto\x12\vdon.cron.v1\x1a0capabilities/v2/protoc/pkg/pb/cre_metadata.proto\"$\n" +
	"\x06Config\x12\x1a\n" +
	"\bschedule\x18\x01 \x01(\tR\bschedule\"G\n" +
	"\vCronTrigger\x128\n" +
	"\x18scheduled_execution_time\x18\x01 \x01(\x03R\x16scheduledExecutionTime2T\n" +
	"\x04Cron\x12:\n" +
	"\aTrigger\x12\x13.don.cron.v1.Config\x1a\x18.don.cron.v1.CronTrigger0\x01\x1a\x10\x82\xb5\x18\f\x12\n" +
	"cron@1.0.0BNZLgithub.com/smartcontractkit/chainlink-common/pkg/capabilities/stubs/don/cronb\x06proto3"

var (
	file_capabilities_stubs_don_cron_cron_proto_rawDescOnce sync.Once
	file_capabilities_stubs_don_cron_cron_proto_rawDescData []byte
)

func file_capabilities_stubs_don_cron_cron_proto_rawDescGZIP() []byte {
	file_capabilities_stubs_don_cron_cron_proto_rawDescOnce.Do(func() {
		file_capabilities_stubs_don_cron_cron_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_capabilities_stubs_don_cron_cron_proto_rawDesc), len(file_capabilities_stubs_don_cron_cron_proto_rawDesc)))
	})
	return file_capabilities_stubs_don_cron_cron_proto_rawDescData
}

var file_capabilities_stubs_don_cron_cron_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_capabilities_stubs_don_cron_cron_proto_goTypes = []any{
	(*Config)(nil),      // 0: don.cron.v1.Config
	(*CronTrigger)(nil), // 1: don.cron.v1.CronTrigger
}
var file_capabilities_stubs_don_cron_cron_proto_depIdxs = []int32{
	0, // 0: don.cron.v1.Cron.Trigger:input_type -> don.cron.v1.Config
	1, // 1: don.cron.v1.Cron.Trigger:output_type -> don.cron.v1.CronTrigger
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_capabilities_stubs_don_cron_cron_proto_init() }
func file_capabilities_stubs_don_cron_cron_proto_init() {
	if File_capabilities_stubs_don_cron_cron_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_capabilities_stubs_don_cron_cron_proto_rawDesc), len(file_capabilities_stubs_don_cron_cron_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_capabilities_stubs_don_cron_cron_proto_goTypes,
		DependencyIndexes: file_capabilities_stubs_don_cron_cron_proto_depIdxs,
		MessageInfos:      file_capabilities_stubs_don_cron_cron_proto_msgTypes,
	}.Build()
	File_capabilities_stubs_don_cron_cron_proto = out.File
	file_capabilities_stubs_don_cron_cron_proto_goTypes = nil
	file_capabilities_stubs_don_cron_cron_proto_depIdxs = nil
}
