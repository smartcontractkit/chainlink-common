// Code generated by github.com/smartcontractkit/chainlink-common/pkg/capabilities/cli, DO NOT EDIT.

package cron

import (
	"github.com/smartcontractkit/chainlink-common/pkg/capabilities"
	"github.com/smartcontractkit/chainlink-common/pkg/workflows/sdk"
)

func (cfg Config) New(w *sdk.WorkflowSpecFactory) PayloadCap {
	ref := "trigger"
	def := sdk.StepDefinition{
		ID: "cron-trigger@1.0.0", Ref: ref,
		Inputs: sdk.StepInputs{},
		Config: map[string]any{
			"schedule": cfg.Schedule,
		},
		CapabilityType: capabilities.CapabilityTypeTrigger,
	}

	step := sdk.Step[Payload]{Definition: def}
	raw := step.AddTo(w)
	return PayloadWrapper(raw)
}

// PayloadWrapper allows access to field from an sdk.CapDefinition[Payload]
func PayloadWrapper(raw sdk.CapDefinition[Payload]) PayloadCap {
	wrapped, ok := raw.(PayloadCap)
	if ok {
		return wrapped
	}
	return &payloadCap{CapDefinition: raw}
}

type PayloadCap interface {
	sdk.CapDefinition[Payload]
	ActualExecutionTime() sdk.CapDefinition[string]
	ScheduledExecutionTime() sdk.CapDefinition[string]
	private()
}

type payloadCap struct {
	sdk.CapDefinition[Payload]
}

func (*payloadCap) private() {}
func (c *payloadCap) ActualExecutionTime() sdk.CapDefinition[string] {
	return sdk.AccessField[Payload, string](c.CapDefinition, "ActualExecutionTime")
}
func (c *payloadCap) ScheduledExecutionTime() sdk.CapDefinition[string] {
	return sdk.AccessField[Payload, string](c.CapDefinition, "ScheduledExecutionTime")
}

func ConstantPayload(value Payload) PayloadCap {
	return &payloadCap{CapDefinition: sdk.ConstantDefinition(value)}
}

func NewPayloadFromFields(
	actualExecutionTime sdk.CapDefinition[string],
	scheduledExecutionTime sdk.CapDefinition[string]) PayloadCap {
	return &simplePayload{
		CapDefinition: sdk.ComponentCapDefinition[Payload]{
			"ActualExecutionTime":    actualExecutionTime.Ref(),
			"ScheduledExecutionTime": scheduledExecutionTime.Ref(),
		},
		actualExecutionTime:    actualExecutionTime,
		scheduledExecutionTime: scheduledExecutionTime,
	}
}

type simplePayload struct {
	sdk.CapDefinition[Payload]
	actualExecutionTime    sdk.CapDefinition[string]
	scheduledExecutionTime sdk.CapDefinition[string]
}

func (c *simplePayload) ActualExecutionTime() sdk.CapDefinition[string] {
	return c.actualExecutionTime
}
func (c *simplePayload) ScheduledExecutionTime() sdk.CapDefinition[string] {
	return c.scheduledExecutionTime
}

func (c *simplePayload) private() {}
