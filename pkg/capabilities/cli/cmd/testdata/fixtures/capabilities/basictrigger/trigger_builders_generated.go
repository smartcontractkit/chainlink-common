// Code generated by github.com/smartcontractkit/chainlink-common/pkg/capabilities/cli, DO NOT EDIT.

package basictrigger

import (
	"github.com/smartcontractkit/chainlink-common/pkg/capabilities"
	"github.com/smartcontractkit/chainlink-common/pkg/workflows/sdk"
)

func (cfg TriggerConfig) New(w *sdk.WorkflowSpecFactory) TriggerOutputsCap {
	ref := "trigger"
	def := sdk.StepDefinition{
		ID: "basic-test-trigger@1.0.0", Ref: ref,
		Inputs: sdk.StepInputs{},
		Config: map[string]any{
			"name":   cfg.Name,
			"number": cfg.Number,
		},
		CapabilityType: capabilities.CapabilityTypeTrigger,
	}

	step := sdk.Step[TriggerOutputs]{Definition: def}
	raw := step.AddTo(w)
	return TriggerOutputsWrapper(raw)
}

// TriggerOutputsWrapper allows access to field from an sdk.CapDefinition[TriggerOutputs]
func TriggerOutputsWrapper(raw sdk.CapDefinition[TriggerOutputs]) TriggerOutputsCap {
	wrapped, ok := raw.(TriggerOutputsCap)
	if ok {
		return wrapped
	}
	return &triggerOutputsCap{CapDefinition: raw}
}

type TriggerOutputsCap interface {
	sdk.CapDefinition[TriggerOutputs]
	CoolOutput() sdk.CapDefinition[string]
	private()
}

type triggerOutputsCap struct {
	sdk.CapDefinition[TriggerOutputs]
}

func (*triggerOutputsCap) private() {}
func (c *triggerOutputsCap) CoolOutput() sdk.CapDefinition[string] {
	return sdk.AccessField[TriggerOutputs, string](c.CapDefinition, "cool_output")
}

func ConstantTriggerOutputs(value TriggerOutputs) TriggerOutputsCap {
	return &triggerOutputsCap{CapDefinition: sdk.ConstantDefinition(value)}
}

func NewTriggerOutputsFromFields(
	coolOutput sdk.CapDefinition[string]) TriggerOutputsCap {
	return &simpleTriggerOutputs{
		CapDefinition: sdk.ComponentCapDefinition[TriggerOutputs]{
			"cool_output": coolOutput.Ref(),
		},
		coolOutput: coolOutput,
	}
}

type simpleTriggerOutputs struct {
	sdk.CapDefinition[TriggerOutputs]
	coolOutput sdk.CapDefinition[string]
}

func (c *simpleTriggerOutputs) CoolOutput() sdk.CapDefinition[string] {
	return c.coolOutput
}

func (c *simpleTriggerOutputs) private() {}
