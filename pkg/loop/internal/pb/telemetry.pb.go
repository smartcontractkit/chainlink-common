// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: telemetry.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RelayID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	ChainId       string                 `protobuf:"bytes,2,opt,name=chainId,proto3" json:"chainId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RelayID) Reset() {
	*x = RelayID{}
	mi := &file_telemetry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelayID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayID) ProtoMessage() {}

func (x *RelayID) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayID.ProtoReflect.Descriptor instead.
func (*RelayID) Descriptor() ([]byte, []int) {
	return file_telemetry_proto_rawDescGZIP(), []int{0}
}

func (x *RelayID) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *RelayID) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

type TelemetryMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RelayID       *RelayID               `protobuf:"bytes,1,opt,name=relayID,proto3" json:"relayID,omitempty"`
	ContractID    string                 `protobuf:"bytes,2,opt,name=contractID,proto3" json:"contractID,omitempty"`
	TelemetryType string                 `protobuf:"bytes,3,opt,name=telemetryType,proto3" json:"telemetryType,omitempty"`
	Payload       []byte                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TelemetryMessage) Reset() {
	*x = TelemetryMessage{}
	mi := &file_telemetry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TelemetryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryMessage) ProtoMessage() {}

func (x *TelemetryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_telemetry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryMessage.ProtoReflect.Descriptor instead.
func (*TelemetryMessage) Descriptor() ([]byte, []int) {
	return file_telemetry_proto_rawDescGZIP(), []int{1}
}

func (x *TelemetryMessage) GetRelayID() *RelayID {
	if x != nil {
		return x.RelayID
	}
	return nil
}

func (x *TelemetryMessage) GetContractID() string {
	if x != nil {
		return x.ContractID
	}
	return ""
}

func (x *TelemetryMessage) GetTelemetryType() string {
	if x != nil {
		return x.TelemetryType
	}
	return ""
}

func (x *TelemetryMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_telemetry_proto protoreflect.FileDescriptor

const file_telemetry_proto_rawDesc = "" +
	"\n" +
	"\x0ftelemetry.proto\x12\x04loop\x1a\x1bgoogle/protobuf/empty.proto\"=\n" +
	"\aRelayID\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x18\n" +
	"\achainId\x18\x02 \x01(\tR\achainId\"\x9b\x01\n" +
	"\x10TelemetryMessage\x12'\n" +
	"\arelayID\x18\x01 \x01(\v2\r.loop.RelayIDR\arelayID\x12\x1e\n" +
	"\n" +
	"contractID\x18\x02 \x01(\tR\n" +
	"contractID\x12$\n" +
	"\rtelemetryType\x18\x03 \x01(\tR\rtelemetryType\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload2C\n" +
	"\tTelemetry\x126\n" +
	"\x04Send\x12\x16.loop.TelemetryMessage\x1a\x16.google.protobuf.EmptyBCZAgithub.com/smartcontractkit/chainlink-common/pkg/loop/internal/pbb\x06proto3"

var (
	file_telemetry_proto_rawDescOnce sync.Once
	file_telemetry_proto_rawDescData []byte
)

func file_telemetry_proto_rawDescGZIP() []byte {
	file_telemetry_proto_rawDescOnce.Do(func() {
		file_telemetry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_telemetry_proto_rawDesc), len(file_telemetry_proto_rawDesc)))
	})
	return file_telemetry_proto_rawDescData
}

var file_telemetry_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_telemetry_proto_goTypes = []any{
	(*RelayID)(nil),          // 0: loop.RelayID
	(*TelemetryMessage)(nil), // 1: loop.TelemetryMessage
	(*emptypb.Empty)(nil),    // 2: google.protobuf.Empty
}
var file_telemetry_proto_depIdxs = []int32{
	0, // 0: loop.TelemetryMessage.relayID:type_name -> loop.RelayID
	1, // 1: loop.Telemetry.Send:input_type -> loop.TelemetryMessage
	2, // 2: loop.Telemetry.Send:output_type -> google.protobuf.Empty
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_telemetry_proto_init() }
func file_telemetry_proto_init() {
	if File_telemetry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_telemetry_proto_rawDesc), len(file_telemetry_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_telemetry_proto_goTypes,
		DependencyIndexes: file_telemetry_proto_depIdxs,
		MessageInfos:      file_telemetry_proto_msgTypes,
	}.Build()
	File_telemetry_proto = out.File
	file_telemetry_proto_goTypes = nil
	file_telemetry_proto_depIdxs = nil
}
