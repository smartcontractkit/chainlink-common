// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: relayer.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewRelayerRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Config               string                 `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"` // toml (is chain instance config enough?)
	KeystoreID           uint32                 `protobuf:"varint,2,opt,name=keystoreID,proto3" json:"keystoreID,omitempty"`
	CapabilityRegistryID uint32                 `protobuf:"varint,3,opt,name=capabilityRegistryID,proto3" json:"capabilityRegistryID,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *NewRelayerRequest) Reset() {
	*x = NewRelayerRequest{}
	mi := &file_relayer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewRelayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRelayerRequest) ProtoMessage() {}

func (x *NewRelayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRelayerRequest.ProtoReflect.Descriptor instead.
func (*NewRelayerRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{0}
}

func (x *NewRelayerRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *NewRelayerRequest) GetKeystoreID() uint32 {
	if x != nil {
		return x.KeystoreID
	}
	return 0
}

func (x *NewRelayerRequest) GetCapabilityRegistryID() uint32 {
	if x != nil {
		return x.CapabilityRegistryID
	}
	return 0
}

type NewRelayerReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RelayerID     uint32                 `protobuf:"varint,1,opt,name=relayerID,proto3" json:"relayerID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewRelayerReply) Reset() {
	*x = NewRelayerReply{}
	mi := &file_relayer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewRelayerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRelayerReply) ProtoMessage() {}

func (x *NewRelayerReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRelayerReply.ProtoReflect.Descriptor instead.
func (*NewRelayerReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{1}
}

func (x *NewRelayerReply) GetRelayerID() uint32 {
	if x != nil {
		return x.RelayerID
	}
	return 0
}

type AccountsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accounts      []string               `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountsReply) Reset() {
	*x = AccountsReply{}
	mi := &file_relayer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountsReply) ProtoMessage() {}

func (x *AccountsReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountsReply.ProtoReflect.Descriptor instead.
func (*AccountsReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{2}
}

func (x *AccountsReply) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type SignRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignRequest) Reset() {
	*x = SignRequest{}
	mi := &file_relayer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequest) ProtoMessage() {}

func (x *SignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequest.ProtoReflect.Descriptor instead.
func (*SignRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{3}
}

func (x *SignRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SignRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SignReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SignedData    []byte                 `protobuf:"bytes,1,opt,name=signedData,proto3" json:"signedData,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignReply) Reset() {
	*x = SignReply{}
	mi := &file_relayer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignReply) ProtoMessage() {}

func (x *SignReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignReply.ProtoReflect.Descriptor instead.
func (*SignReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{4}
}

func (x *SignReply) GetSignedData() []byte {
	if x != nil {
		return x.SignedData
	}
	return nil
}

// RelayArgs represents [github.com/smartcontractkit/chainlink-common/pkg/types.RelayArgs].
type RelayArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalJobID []byte                 `protobuf:"bytes,1,opt,name=externalJobID,proto3" json:"externalJobID,omitempty"` // [32]byte
	JobID         int32                  `protobuf:"varint,2,opt,name=jobID,proto3" json:"jobID,omitempty"`
	ContractID    string                 `protobuf:"bytes,3,opt,name=contractID,proto3" json:"contractID,omitempty"`
	New           bool                   `protobuf:"varint,4,opt,name=new,proto3" json:"new,omitempty"`
	RelayConfig   []byte                 `protobuf:"bytes,5,opt,name=relayConfig,proto3" json:"relayConfig,omitempty"`
	ProviderType  string                 `protobuf:"bytes,6,opt,name=providerType,proto3" json:"providerType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RelayArgs) Reset() {
	*x = RelayArgs{}
	mi := &file_relayer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelayArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayArgs) ProtoMessage() {}

func (x *RelayArgs) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayArgs.ProtoReflect.Descriptor instead.
func (*RelayArgs) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{5}
}

func (x *RelayArgs) GetExternalJobID() []byte {
	if x != nil {
		return x.ExternalJobID
	}
	return nil
}

func (x *RelayArgs) GetJobID() int32 {
	if x != nil {
		return x.JobID
	}
	return 0
}

func (x *RelayArgs) GetContractID() string {
	if x != nil {
		return x.ContractID
	}
	return ""
}

func (x *RelayArgs) GetNew() bool {
	if x != nil {
		return x.New
	}
	return false
}

func (x *RelayArgs) GetRelayConfig() []byte {
	if x != nil {
		return x.RelayConfig
	}
	return nil
}

func (x *RelayArgs) GetProviderType() string {
	if x != nil {
		return x.ProviderType
	}
	return ""
}

// RelayArgs represents [github.com/smartcontractkit/chainlink-common/pkg/types.PluginArgs].
type PluginArgs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransmitterID string                 `protobuf:"bytes,1,opt,name=transmitterID,proto3" json:"transmitterID,omitempty"`
	PluginConfig  []byte                 `protobuf:"bytes,2,opt,name=pluginConfig,proto3" json:"pluginConfig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PluginArgs) Reset() {
	*x = PluginArgs{}
	mi := &file_relayer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PluginArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginArgs) ProtoMessage() {}

func (x *PluginArgs) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginArgs.ProtoReflect.Descriptor instead.
func (*PluginArgs) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{6}
}

func (x *PluginArgs) GetTransmitterID() string {
	if x != nil {
		return x.TransmitterID
	}
	return ""
}

func (x *PluginArgs) GetPluginConfig() []byte {
	if x != nil {
		return x.PluginConfig
	}
	return nil
}

// NewContractWriterRequest has request parameters for [github.com/smartcontractkit/chainlink-common/pkg/loop.Relayer.NewContractWriter].
type NewContractWriterRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ContractWriterConfig []byte                 `protobuf:"bytes,1,opt,name=contractWriterConfig,proto3" json:"contractWriterConfig,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *NewContractWriterRequest) Reset() {
	*x = NewContractWriterRequest{}
	mi := &file_relayer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewContractWriterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewContractWriterRequest) ProtoMessage() {}

func (x *NewContractWriterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewContractWriterRequest.ProtoReflect.Descriptor instead.
func (*NewContractWriterRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{7}
}

func (x *NewContractWriterRequest) GetContractWriterConfig() []byte {
	if x != nil {
		return x.ContractWriterConfig
	}
	return nil
}

// NewContractWriterReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/loop.Relayer.NewContractWriter].
type NewContractWriterReply struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ContractWriterID uint32                 `protobuf:"varint,1,opt,name=contractWriterID,proto3" json:"contractWriterID,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NewContractWriterReply) Reset() {
	*x = NewContractWriterReply{}
	mi := &file_relayer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewContractWriterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewContractWriterReply) ProtoMessage() {}

func (x *NewContractWriterReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewContractWriterReply.ProtoReflect.Descriptor instead.
func (*NewContractWriterReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{8}
}

func (x *NewContractWriterReply) GetContractWriterID() uint32 {
	if x != nil {
		return x.ContractWriterID
	}
	return 0
}

// NewContractReaderRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/loop.Relayer.NewContractReader].
type NewContractReaderRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ContractReaderConfig []byte                 `protobuf:"bytes,1,opt,name=contractReaderConfig,proto3" json:"contractReaderConfig,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *NewContractReaderRequest) Reset() {
	*x = NewContractReaderRequest{}
	mi := &file_relayer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewContractReaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewContractReaderRequest) ProtoMessage() {}

func (x *NewContractReaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewContractReaderRequest.ProtoReflect.Descriptor instead.
func (*NewContractReaderRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{9}
}

func (x *NewContractReaderRequest) GetContractReaderConfig() []byte {
	if x != nil {
		return x.ContractReaderConfig
	}
	return nil
}

// NewContractReaderReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/loop.Relayer.NewContractReader].
type NewContractReaderReply struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ContractReaderID uint32                 `protobuf:"varint,1,opt,name=contractReaderID,proto3" json:"contractReaderID,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NewContractReaderReply) Reset() {
	*x = NewContractReaderReply{}
	mi := &file_relayer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewContractReaderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewContractReaderReply) ProtoMessage() {}

func (x *NewContractReaderReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewContractReaderReply.ProtoReflect.Descriptor instead.
func (*NewContractReaderReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{10}
}

func (x *NewContractReaderReply) GetContractReaderID() uint32 {
	if x != nil {
		return x.ContractReaderID
	}
	return 0
}

// NewPluginProviderRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/loop.Relayer.NewPluginProvider].
type NewPluginProviderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RelayArgs     *RelayArgs             `protobuf:"bytes,1,opt,name=relayArgs,proto3" json:"relayArgs,omitempty"`
	PluginArgs    *PluginArgs            `protobuf:"bytes,2,opt,name=pluginArgs,proto3" json:"pluginArgs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewPluginProviderRequest) Reset() {
	*x = NewPluginProviderRequest{}
	mi := &file_relayer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewPluginProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewPluginProviderRequest) ProtoMessage() {}

func (x *NewPluginProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewPluginProviderRequest.ProtoReflect.Descriptor instead.
func (*NewPluginProviderRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{11}
}

func (x *NewPluginProviderRequest) GetRelayArgs() *RelayArgs {
	if x != nil {
		return x.RelayArgs
	}
	return nil
}

func (x *NewPluginProviderRequest) GetPluginArgs() *PluginArgs {
	if x != nil {
		return x.PluginArgs
	}
	return nil
}

// NewPluginProviderReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/loop.Relayer.NewPluginProvider].
type NewPluginProviderReply struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PluginProviderID uint32                 `protobuf:"varint,1,opt,name=pluginProviderID,proto3" json:"pluginProviderID,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NewPluginProviderReply) Reset() {
	*x = NewPluginProviderReply{}
	mi := &file_relayer_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewPluginProviderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewPluginProviderReply) ProtoMessage() {}

func (x *NewPluginProviderReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewPluginProviderReply.ProtoReflect.Descriptor instead.
func (*NewPluginProviderReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{12}
}

func (x *NewPluginProviderReply) GetPluginProviderID() uint32 {
	if x != nil {
		return x.PluginProviderID
	}
	return 0
}

// NewConfigProviderRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/loop.Relayer.NewConfigProvider].
type NewConfigProviderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RelayArgs     *RelayArgs             `protobuf:"bytes,1,opt,name=relayArgs,proto3" json:"relayArgs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewConfigProviderRequest) Reset() {
	*x = NewConfigProviderRequest{}
	mi := &file_relayer_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewConfigProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewConfigProviderRequest) ProtoMessage() {}

func (x *NewConfigProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewConfigProviderRequest.ProtoReflect.Descriptor instead.
func (*NewConfigProviderRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{13}
}

func (x *NewConfigProviderRequest) GetRelayArgs() *RelayArgs {
	if x != nil {
		return x.RelayArgs
	}
	return nil
}

// NewConfigProviderReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/loop.Relayer.NewConfigProvider].
type NewConfigProviderReply struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ConfigProviderID uint32                 `protobuf:"varint,1,opt,name=configProviderID,proto3" json:"configProviderID,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NewConfigProviderReply) Reset() {
	*x = NewConfigProviderReply{}
	mi := &file_relayer_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewConfigProviderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewConfigProviderReply) ProtoMessage() {}

func (x *NewConfigProviderReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewConfigProviderReply.ProtoReflect.Descriptor instead.
func (*NewConfigProviderReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{14}
}

func (x *NewConfigProviderReply) GetConfigProviderID() uint32 {
	if x != nil {
		return x.ConfigProviderID
	}
	return 0
}

type LatestHeadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestHeadRequest) Reset() {
	*x = LatestHeadRequest{}
	mi := &file_relayer_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestHeadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestHeadRequest) ProtoMessage() {}

func (x *LatestHeadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestHeadRequest.ProtoReflect.Descriptor instead.
func (*LatestHeadRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{15}
}

// LatestHeadReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/loop.Relayer.LatestHeadReply].
type LatestHeadReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Head          *Head                  `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestHeadReply) Reset() {
	*x = LatestHeadReply{}
	mi := &file_relayer_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestHeadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestHeadReply) ProtoMessage() {}

func (x *LatestHeadReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestHeadReply.ProtoReflect.Descriptor instead.
func (*LatestHeadReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{16}
}

func (x *LatestHeadReply) GetHead() *Head {
	if x != nil {
		return x.Head
	}
	return nil
}

type GetChainStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChainStatusRequest) Reset() {
	*x = GetChainStatusRequest{}
	mi := &file_relayer_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChainStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainStatusRequest) ProtoMessage() {}

func (x *GetChainStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainStatusRequest.ProtoReflect.Descriptor instead.
func (*GetChainStatusRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{17}
}

// ChainStatusReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/loop.Relayer.ChainStatus].
type GetChainStatusReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chain         *ChainStatus           `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChainStatusReply) Reset() {
	*x = GetChainStatusReply{}
	mi := &file_relayer_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChainStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainStatusReply) ProtoMessage() {}

func (x *GetChainStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainStatusReply.ProtoReflect.Descriptor instead.
func (*GetChainStatusReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{18}
}

func (x *GetChainStatusReply) GetChain() *ChainStatus {
	if x != nil {
		return x.Chain
	}
	return nil
}

// ChainStatus represents [github.com/smartcontractkit/chainlink-common/pkg/types.ChainStatus].
type ChainStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Enabled       bool                   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Config        string                 `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"` // TOML
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChainStatus) Reset() {
	*x = ChainStatus{}
	mi := &file_relayer_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainStatus) ProtoMessage() {}

func (x *ChainStatus) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainStatus.ProtoReflect.Descriptor instead.
func (*ChainStatus) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{19}
}

func (x *ChainStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChainStatus) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ChainStatus) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

// ListNodeStatusesRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/loop.Relayer.ListNodeStatuses].
type ListNodeStatusesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodeStatusesRequest) Reset() {
	*x = ListNodeStatusesRequest{}
	mi := &file_relayer_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodeStatusesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeStatusesRequest) ProtoMessage() {}

func (x *ListNodeStatusesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeStatusesRequest.ProtoReflect.Descriptor instead.
func (*ListNodeStatusesRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{20}
}

func (x *ListNodeStatusesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListNodeStatusesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// ListNodeStatusesReply is a pagination response  for [github.com/smartcontractkit/chainlink-common/pkg/loop.Relayer.ListNodeStatuses].
type ListNodeStatusesReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*NodeStatus          `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // total count of nodes
	NextPageToken string                 `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodeStatusesReply) Reset() {
	*x = ListNodeStatusesReply{}
	mi := &file_relayer_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodeStatusesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeStatusesReply) ProtoMessage() {}

func (x *ListNodeStatusesReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeStatusesReply.ProtoReflect.Descriptor instead.
func (*ListNodeStatusesReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{21}
}

func (x *ListNodeStatusesReply) GetNodes() []*NodeStatus {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ListNodeStatusesReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListNodeStatusesReply) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// NodeStatus represents [github.com/smartcontractkit/chainlink-common/pkg/types.NodeStatus].
type NodeStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainID       string                 `protobuf:"bytes,1,opt,name=chainID,proto3" json:"chainID,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Config        string                 `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"` // TOML
	State         string                 `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeStatus) Reset() {
	*x = NodeStatus{}
	mi := &file_relayer_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatus) ProtoMessage() {}

func (x *NodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatus.ProtoReflect.Descriptor instead.
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{22}
}

func (x *NodeStatus) GetChainID() string {
	if x != nil {
		return x.ChainID
	}
	return ""
}

func (x *NodeStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeStatus) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *NodeStatus) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type ReplayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromBlock     string                 `protobuf:"bytes,1,opt,name=fromBlock,proto3" json:"fromBlock,omitempty"`
	Args          *structpb.Struct       `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplayRequest) Reset() {
	*x = ReplayRequest{}
	mi := &file_relayer_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayRequest) ProtoMessage() {}

func (x *ReplayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayRequest.ProtoReflect.Descriptor instead.
func (*ReplayRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{23}
}

func (x *ReplayRequest) GetFromBlock() string {
	if x != nil {
		return x.FromBlock
	}
	return ""
}

func (x *ReplayRequest) GetArgs() *structpb.Struct {
	if x != nil {
		return x.Args
	}
	return nil
}

// SendTxRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/loop.Relayer.SendTx].
type TransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            string                 `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount        *BigInt                `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	BalanceCheck  bool                   `protobuf:"varint,4,opt,name=balanceCheck,proto3" json:"balanceCheck,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionRequest) Reset() {
	*x = TransactionRequest{}
	mi := &file_relayer_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionRequest) ProtoMessage() {}

func (x *TransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionRequest.ProtoReflect.Descriptor instead.
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{24}
}

func (x *TransactionRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransactionRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransactionRequest) GetAmount() *BigInt {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *TransactionRequest) GetBalanceCheck() bool {
	if x != nil {
		return x.BalanceCheck
	}
	return false
}

// ContractConfig represents [github.com/smartcontractkit/libocr/offchainreporting2plus/types.ContractConfig]
type ContractConfig struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ConfigDigest          []byte                 `protobuf:"bytes,1,opt,name=configDigest,proto3" json:"configDigest,omitempty"` // [32]byte
	ConfigCount           uint64                 `protobuf:"varint,2,opt,name=configCount,proto3" json:"configCount,omitempty"`
	Signers               [][]byte               `protobuf:"bytes,3,rep,name=signers,proto3" json:"signers,omitempty"`           // []OnchainPublicKey
	Transmitters          []string               `protobuf:"bytes,4,rep,name=transmitters,proto3" json:"transmitters,omitempty"` // []Account
	F                     uint32                 `protobuf:"varint,5,opt,name=F,proto3" json:"F,omitempty"`                      // uint8
	OnchainConfig         []byte                 `protobuf:"bytes,6,opt,name=onchainConfig,proto3" json:"onchainConfig,omitempty"`
	OffchainConfigVersion uint64                 `protobuf:"varint,7,opt,name=offchainConfigVersion,proto3" json:"offchainConfigVersion,omitempty"`
	OffchainConfig        []byte                 `protobuf:"bytes,8,opt,name=offchainConfig,proto3" json:"offchainConfig,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ContractConfig) Reset() {
	*x = ContractConfig{}
	mi := &file_relayer_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContractConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractConfig) ProtoMessage() {}

func (x *ContractConfig) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractConfig.ProtoReflect.Descriptor instead.
func (*ContractConfig) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{25}
}

func (x *ContractConfig) GetConfigDigest() []byte {
	if x != nil {
		return x.ConfigDigest
	}
	return nil
}

func (x *ContractConfig) GetConfigCount() uint64 {
	if x != nil {
		return x.ConfigCount
	}
	return 0
}

func (x *ContractConfig) GetSigners() [][]byte {
	if x != nil {
		return x.Signers
	}
	return nil
}

func (x *ContractConfig) GetTransmitters() []string {
	if x != nil {
		return x.Transmitters
	}
	return nil
}

func (x *ContractConfig) GetF() uint32 {
	if x != nil {
		return x.F
	}
	return 0
}

func (x *ContractConfig) GetOnchainConfig() []byte {
	if x != nil {
		return x.OnchainConfig
	}
	return nil
}

func (x *ContractConfig) GetOffchainConfigVersion() uint64 {
	if x != nil {
		return x.OffchainConfigVersion
	}
	return 0
}

func (x *ContractConfig) GetOffchainConfig() []byte {
	if x != nil {
		return x.OffchainConfig
	}
	return nil
}

// ConfigDigestRequest has arguments for [github.com/smartcontractkit/libocr/offchainreporting2plus/types.OffchainConfigDigester.ConfigDigest].
type ConfigDigestRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContractConfig *ContractConfig        `protobuf:"bytes,1,opt,name=contractConfig,proto3" json:"contractConfig,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConfigDigestRequest) Reset() {
	*x = ConfigDigestRequest{}
	mi := &file_relayer_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigDigestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDigestRequest) ProtoMessage() {}

func (x *ConfigDigestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDigestRequest.ProtoReflect.Descriptor instead.
func (*ConfigDigestRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{26}
}

func (x *ConfigDigestRequest) GetContractConfig() *ContractConfig {
	if x != nil {
		return x.ContractConfig
	}
	return nil
}

// ConfigDigestReply has return arguments for [github.com/smartcontractkit/libocr/offchainreporting2plus/types.OffchainConfigDigester.ConfigDigest].
type ConfigDigestReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfigDigest  []byte                 `protobuf:"bytes,1,opt,name=configDigest,proto3" json:"configDigest,omitempty"` // [32]byte
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigDigestReply) Reset() {
	*x = ConfigDigestReply{}
	mi := &file_relayer_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigDigestReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDigestReply) ProtoMessage() {}

func (x *ConfigDigestReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDigestReply.ProtoReflect.Descriptor instead.
func (*ConfigDigestReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{27}
}

func (x *ConfigDigestReply) GetConfigDigest() []byte {
	if x != nil {
		return x.ConfigDigest
	}
	return nil
}

type ConfigDigestPrefixRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigDigestPrefixRequest) Reset() {
	*x = ConfigDigestPrefixRequest{}
	mi := &file_relayer_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigDigestPrefixRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDigestPrefixRequest) ProtoMessage() {}

func (x *ConfigDigestPrefixRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDigestPrefixRequest.ProtoReflect.Descriptor instead.
func (*ConfigDigestPrefixRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{28}
}

// ConfigDigestPrefixReply has return arguments for [github.com/smartcontractkit/libocr/offchainreporting2plus/types.OffchainConfigDigester.ConfigDigestPrefix].
type ConfigDigestPrefixReply struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ConfigDigestPrefix uint32                 `protobuf:"varint,1,opt,name=configDigestPrefix,proto3" json:"configDigestPrefix,omitempty"` // uint16
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ConfigDigestPrefixReply) Reset() {
	*x = ConfigDigestPrefixReply{}
	mi := &file_relayer_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigDigestPrefixReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDigestPrefixReply) ProtoMessage() {}

func (x *ConfigDigestPrefixReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDigestPrefixReply.ProtoReflect.Descriptor instead.
func (*ConfigDigestPrefixReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{29}
}

func (x *ConfigDigestPrefixReply) GetConfigDigestPrefix() uint32 {
	if x != nil {
		return x.ConfigDigestPrefix
	}
	return 0
}

type LatestConfigDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestConfigDetailsRequest) Reset() {
	*x = LatestConfigDetailsRequest{}
	mi := &file_relayer_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestConfigDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestConfigDetailsRequest) ProtoMessage() {}

func (x *LatestConfigDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestConfigDetailsRequest.ProtoReflect.Descriptor instead.
func (*LatestConfigDetailsRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{30}
}

// LatestConfigDetailsReply has return arguments for [github.com/smartcontractkit/libocr/offchainreporting2plus/types.ContractConfigTracker.LatestConfigDetails].
type LatestConfigDetailsReply struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ChangedInBlock uint64                 `protobuf:"varint,1,opt,name=changedInBlock,proto3" json:"changedInBlock,omitempty"`
	ConfigDigest   []byte                 `protobuf:"bytes,2,opt,name=configDigest,proto3" json:"configDigest,omitempty"` // [32]byte
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LatestConfigDetailsReply) Reset() {
	*x = LatestConfigDetailsReply{}
	mi := &file_relayer_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestConfigDetailsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestConfigDetailsReply) ProtoMessage() {}

func (x *LatestConfigDetailsReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestConfigDetailsReply.ProtoReflect.Descriptor instead.
func (*LatestConfigDetailsReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{31}
}

func (x *LatestConfigDetailsReply) GetChangedInBlock() uint64 {
	if x != nil {
		return x.ChangedInBlock
	}
	return 0
}

func (x *LatestConfigDetailsReply) GetConfigDigest() []byte {
	if x != nil {
		return x.ConfigDigest
	}
	return nil
}

// LatestConfigRequest has arguments for [github.com/smartcontractkit/libocr/offchainreporting2plus/types.ContractConfigTracker.LatestConfig].
type LatestConfigRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ChangedInBlock uint64                 `protobuf:"varint,1,opt,name=changedInBlock,proto3" json:"changedInBlock,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LatestConfigRequest) Reset() {
	*x = LatestConfigRequest{}
	mi := &file_relayer_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestConfigRequest) ProtoMessage() {}

func (x *LatestConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestConfigRequest.ProtoReflect.Descriptor instead.
func (*LatestConfigRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{32}
}

func (x *LatestConfigRequest) GetChangedInBlock() uint64 {
	if x != nil {
		return x.ChangedInBlock
	}
	return 0
}

// LatestConfigReply has return arguments for [github.com/smartcontractkit/libocr/offchainreporting2plus/types.ContractConfigTracker.LatestConfig].
type LatestConfigReply struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContractConfig *ContractConfig        `protobuf:"bytes,1,opt,name=contractConfig,proto3" json:"contractConfig,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LatestConfigReply) Reset() {
	*x = LatestConfigReply{}
	mi := &file_relayer_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestConfigReply) ProtoMessage() {}

func (x *LatestConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestConfigReply.ProtoReflect.Descriptor instead.
func (*LatestConfigReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{33}
}

func (x *LatestConfigReply) GetContractConfig() *ContractConfig {
	if x != nil {
		return x.ContractConfig
	}
	return nil
}

type LatestBlockHeightRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestBlockHeightRequest) Reset() {
	*x = LatestBlockHeightRequest{}
	mi := &file_relayer_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestBlockHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestBlockHeightRequest) ProtoMessage() {}

func (x *LatestBlockHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestBlockHeightRequest.ProtoReflect.Descriptor instead.
func (*LatestBlockHeightRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{34}
}

// LatestBlockHeightReply has return arguments for [github.com/smartcontractkit/libocr/offchainreporting2plus/types.ContractConfigTracker.LatestBlockHeightReply].
type LatestBlockHeightReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockHeight   uint64                 `protobuf:"varint,1,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestBlockHeightReply) Reset() {
	*x = LatestBlockHeightReply{}
	mi := &file_relayer_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestBlockHeightReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestBlockHeightReply) ProtoMessage() {}

func (x *LatestBlockHeightReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestBlockHeightReply.ProtoReflect.Descriptor instead.
func (*LatestBlockHeightReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{35}
}

func (x *LatestBlockHeightReply) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

// ReportTimestamp represents [github.com/smartcontractkit/libocr/offchainreporting2plus/types.ReportTimestamp].
type ReportTimestamp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfigDigest  []byte                 `protobuf:"bytes,1,opt,name=configDigest,proto3" json:"configDigest,omitempty"` // [32]byte
	Epoch         uint32                 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Round         uint32                 `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"` // uint8
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportTimestamp) Reset() {
	*x = ReportTimestamp{}
	mi := &file_relayer_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportTimestamp) ProtoMessage() {}

func (x *ReportTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportTimestamp.ProtoReflect.Descriptor instead.
func (*ReportTimestamp) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{36}
}

func (x *ReportTimestamp) GetConfigDigest() []byte {
	if x != nil {
		return x.ConfigDigest
	}
	return nil
}

func (x *ReportTimestamp) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *ReportTimestamp) GetRound() uint32 {
	if x != nil {
		return x.Round
	}
	return 0
}

// ReportContext represents [github.com/smartcontractkit/libocr/offchainreporting2plus/types.ReportContext].
type ReportContext struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ReportTimestamp *ReportTimestamp       `protobuf:"bytes,1,opt,name=reportTimestamp,proto3" json:"reportTimestamp,omitempty"`
	ExtraHash       []byte                 `protobuf:"bytes,2,opt,name=extraHash,proto3" json:"extraHash,omitempty"` // [32]byte
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ReportContext) Reset() {
	*x = ReportContext{}
	mi := &file_relayer_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportContext) ProtoMessage() {}

func (x *ReportContext) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportContext.ProtoReflect.Descriptor instead.
func (*ReportContext) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{37}
}

func (x *ReportContext) GetReportTimestamp() *ReportTimestamp {
	if x != nil {
		return x.ReportTimestamp
	}
	return nil
}

func (x *ReportContext) GetExtraHash() []byte {
	if x != nil {
		return x.ExtraHash
	}
	return nil
}

// AttributedOnchainSignature represents [github.com/smartcontractkit/libocr/offchainreporting2plus/types.AttributedOnchainSignature].
type AttributedOnchainSignature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signature     []byte                 `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Signer        uint32                 `protobuf:"varint,2,opt,name=signer,proto3" json:"signer,omitempty"` // uint8
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttributedOnchainSignature) Reset() {
	*x = AttributedOnchainSignature{}
	mi := &file_relayer_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributedOnchainSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributedOnchainSignature) ProtoMessage() {}

func (x *AttributedOnchainSignature) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributedOnchainSignature.ProtoReflect.Descriptor instead.
func (*AttributedOnchainSignature) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{38}
}

func (x *AttributedOnchainSignature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *AttributedOnchainSignature) GetSigner() uint32 {
	if x != nil {
		return x.Signer
	}
	return 0
}

// TransmitRequest has arguments for [github.com/smartcontractkit/libocr/offchainreporting2plus/types.ContractTransmitter.Transmit].
type TransmitRequest struct {
	state                       protoimpl.MessageState        `protogen:"open.v1"`
	ReportContext               *ReportContext                `protobuf:"bytes,1,opt,name=reportContext,proto3" json:"reportContext,omitempty"`
	Report                      []byte                        `protobuf:"bytes,2,opt,name=report,proto3" json:"report,omitempty"`
	AttributedOnchainSignatures []*AttributedOnchainSignature `protobuf:"bytes,3,rep,name=attributedOnchainSignatures,proto3" json:"attributedOnchainSignatures,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *TransmitRequest) Reset() {
	*x = TransmitRequest{}
	mi := &file_relayer_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransmitRequest) ProtoMessage() {}

func (x *TransmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransmitRequest.ProtoReflect.Descriptor instead.
func (*TransmitRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{39}
}

func (x *TransmitRequest) GetReportContext() *ReportContext {
	if x != nil {
		return x.ReportContext
	}
	return nil
}

func (x *TransmitRequest) GetReport() []byte {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *TransmitRequest) GetAttributedOnchainSignatures() []*AttributedOnchainSignature {
	if x != nil {
		return x.AttributedOnchainSignatures
	}
	return nil
}

type TransmitReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransmitReply) Reset() {
	*x = TransmitReply{}
	mi := &file_relayer_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransmitReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransmitReply) ProtoMessage() {}

func (x *TransmitReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransmitReply.ProtoReflect.Descriptor instead.
func (*TransmitReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{40}
}

type LatestConfigDigestAndEpochRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestConfigDigestAndEpochRequest) Reset() {
	*x = LatestConfigDigestAndEpochRequest{}
	mi := &file_relayer_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestConfigDigestAndEpochRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestConfigDigestAndEpochRequest) ProtoMessage() {}

func (x *LatestConfigDigestAndEpochRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestConfigDigestAndEpochRequest.ProtoReflect.Descriptor instead.
func (*LatestConfigDigestAndEpochRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{41}
}

// LatestConfigDigestAndEpochReply has return arguments for [github.com/smartcontractkit/libocr/offchainreporting2plus/types.ContractTransmitter.LatestConfigDigestAndEpoch].
type LatestConfigDigestAndEpochReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfigDigest  []byte                 `protobuf:"bytes,1,opt,name=configDigest,proto3" json:"configDigest,omitempty"` // [32]byte
	Epoch         uint32                 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestConfigDigestAndEpochReply) Reset() {
	*x = LatestConfigDigestAndEpochReply{}
	mi := &file_relayer_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestConfigDigestAndEpochReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestConfigDigestAndEpochReply) ProtoMessage() {}

func (x *LatestConfigDigestAndEpochReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestConfigDigestAndEpochReply.ProtoReflect.Descriptor instead.
func (*LatestConfigDigestAndEpochReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{42}
}

func (x *LatestConfigDigestAndEpochReply) GetConfigDigest() []byte {
	if x != nil {
		return x.ConfigDigest
	}
	return nil
}

func (x *LatestConfigDigestAndEpochReply) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

type FromAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FromAccountRequest) Reset() {
	*x = FromAccountRequest{}
	mi := &file_relayer_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FromAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FromAccountRequest) ProtoMessage() {}

func (x *FromAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FromAccountRequest.ProtoReflect.Descriptor instead.
func (*FromAccountRequest) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{43}
}

// FromAccountReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.Service.FromAccount].
type FromAccountReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       string                 `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FromAccountReply) Reset() {
	*x = FromAccountReply{}
	mi := &file_relayer_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FromAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FromAccountReply) ProtoMessage() {}

func (x *FromAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FromAccountReply.ProtoReflect.Descriptor instead.
func (*FromAccountReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{44}
}

func (x *FromAccountReply) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

// NameReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.Service.Name].
type NameReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameReply) Reset() {
	*x = NameReply{}
	mi := &file_relayer_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameReply) ProtoMessage() {}

func (x *NameReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameReply.ProtoReflect.Descriptor instead.
func (*NameReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{45}
}

func (x *NameReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// HealthReportReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.Service.HealthReport].
type HealthReportReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HealthReport  map[string]string      `protobuf:"bytes,1,rep,name=healthReport,proto3" json:"healthReport,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthReportReply) Reset() {
	*x = HealthReportReply{}
	mi := &file_relayer_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthReportReply) ProtoMessage() {}

func (x *HealthReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthReportReply.ProtoReflect.Descriptor instead.
func (*HealthReportReply) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{46}
}

func (x *HealthReportReply) GetHealthReport() map[string]string {
	if x != nil {
		return x.HealthReport
	}
	return nil
}

// BigInt represents a [big.Int].
type BigInt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Negative      bool                   `protobuf:"varint,1,opt,name=negative,proto3" json:"negative,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BigInt) Reset() {
	*x = BigInt{}
	mi := &file_relayer_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BigInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigInt) ProtoMessage() {}

func (x *BigInt) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigInt.ProtoReflect.Descriptor instead.
func (*BigInt) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{47}
}

func (x *BigInt) GetNegative() bool {
	if x != nil {
		return x.Negative
	}
	return false
}

func (x *BigInt) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type StarknetSignature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             *BigInt                `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             *BigInt                `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StarknetSignature) Reset() {
	*x = StarknetSignature{}
	mi := &file_relayer_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StarknetSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarknetSignature) ProtoMessage() {}

func (x *StarknetSignature) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarknetSignature.ProtoReflect.Descriptor instead.
func (*StarknetSignature) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{48}
}

func (x *StarknetSignature) GetX() *BigInt {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *StarknetSignature) GetY() *BigInt {
	if x != nil {
		return x.Y
	}
	return nil
}

type StarknetMessageHash struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          *BigInt                `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StarknetMessageHash) Reset() {
	*x = StarknetMessageHash{}
	mi := &file_relayer_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StarknetMessageHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StarknetMessageHash) ProtoMessage() {}

func (x *StarknetMessageHash) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StarknetMessageHash.ProtoReflect.Descriptor instead.
func (*StarknetMessageHash) Descriptor() ([]byte, []int) {
	return file_relayer_proto_rawDescGZIP(), []int{49}
}

func (x *StarknetMessageHash) GetHash() *BigInt {
	if x != nil {
		return x.Hash
	}
	return nil
}

var File_relayer_proto protoreflect.FileDescriptor

const file_relayer_proto_rawDesc = "" +
	"\n" +
	"\rrelayer.proto\x12\x04loop\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x15contract_reader.proto\"\x7f\n" +
	"\x11NewRelayerRequest\x12\x16\n" +
	"\x06config\x18\x01 \x01(\tR\x06config\x12\x1e\n" +
	"\n" +
	"keystoreID\x18\x02 \x01(\rR\n" +
	"keystoreID\x122\n" +
	"\x14capabilityRegistryID\x18\x03 \x01(\rR\x14capabilityRegistryID\"/\n" +
	"\x0fNewRelayerReply\x12\x1c\n" +
	"\trelayerID\x18\x01 \x01(\rR\trelayerID\"+\n" +
	"\rAccountsReply\x12\x1a\n" +
	"\baccounts\x18\x01 \x03(\tR\baccounts\";\n" +
	"\vSignRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"+\n" +
	"\tSignReply\x12\x1e\n" +
	"\n" +
	"signedData\x18\x01 \x01(\fR\n" +
	"signedData\"\xbf\x01\n" +
	"\tRelayArgs\x12$\n" +
	"\rexternalJobID\x18\x01 \x01(\fR\rexternalJobID\x12\x14\n" +
	"\x05jobID\x18\x02 \x01(\x05R\x05jobID\x12\x1e\n" +
	"\n" +
	"contractID\x18\x03 \x01(\tR\n" +
	"contractID\x12\x10\n" +
	"\x03new\x18\x04 \x01(\bR\x03new\x12 \n" +
	"\vrelayConfig\x18\x05 \x01(\fR\vrelayConfig\x12\"\n" +
	"\fproviderType\x18\x06 \x01(\tR\fproviderType\"V\n" +
	"\n" +
	"PluginArgs\x12$\n" +
	"\rtransmitterID\x18\x01 \x01(\tR\rtransmitterID\x12\"\n" +
	"\fpluginConfig\x18\x02 \x01(\fR\fpluginConfig\"N\n" +
	"\x18NewContractWriterRequest\x122\n" +
	"\x14contractWriterConfig\x18\x01 \x01(\fR\x14contractWriterConfig\"D\n" +
	"\x16NewContractWriterReply\x12*\n" +
	"\x10contractWriterID\x18\x01 \x01(\rR\x10contractWriterID\"N\n" +
	"\x18NewContractReaderRequest\x122\n" +
	"\x14contractReaderConfig\x18\x01 \x01(\fR\x14contractReaderConfig\"D\n" +
	"\x16NewContractReaderReply\x12*\n" +
	"\x10contractReaderID\x18\x01 \x01(\rR\x10contractReaderID\"{\n" +
	"\x18NewPluginProviderRequest\x12-\n" +
	"\trelayArgs\x18\x01 \x01(\v2\x0f.loop.RelayArgsR\trelayArgs\x120\n" +
	"\n" +
	"pluginArgs\x18\x02 \x01(\v2\x10.loop.PluginArgsR\n" +
	"pluginArgs\"D\n" +
	"\x16NewPluginProviderReply\x12*\n" +
	"\x10pluginProviderID\x18\x01 \x01(\rR\x10pluginProviderID\"I\n" +
	"\x18NewConfigProviderRequest\x12-\n" +
	"\trelayArgs\x18\x01 \x01(\v2\x0f.loop.RelayArgsR\trelayArgs\"D\n" +
	"\x16NewConfigProviderReply\x12*\n" +
	"\x10configProviderID\x18\x01 \x01(\rR\x10configProviderID\"\x13\n" +
	"\x11LatestHeadRequest\"1\n" +
	"\x0fLatestHeadReply\x12\x1e\n" +
	"\x04head\x18\x01 \x01(\v2\n" +
	".loop.HeadR\x04head\"\x17\n" +
	"\x15GetChainStatusRequest\">\n" +
	"\x13GetChainStatusReply\x12'\n" +
	"\x05chain\x18\x01 \x01(\v2\x11.loop.ChainStatusR\x05chain\"O\n" +
	"\vChainStatus\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aenabled\x18\x02 \x01(\bR\aenabled\x12\x16\n" +
	"\x06config\x18\x03 \x01(\tR\x06config\"U\n" +
	"\x17ListNodeStatusesRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"}\n" +
	"\x15ListNodeStatusesReply\x12&\n" +
	"\x05nodes\x18\x01 \x03(\v2\x10.loop.NodeStatusR\x05nodes\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12&\n" +
	"\x0fnext_page_token\x18\x03 \x01(\tR\rnextPageToken\"h\n" +
	"\n" +
	"NodeStatus\x12\x18\n" +
	"\achainID\x18\x01 \x01(\tR\achainID\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06config\x18\x03 \x01(\tR\x06config\x12\x14\n" +
	"\x05state\x18\x04 \x01(\tR\x05state\"Z\n" +
	"\rReplayRequest\x12\x1c\n" +
	"\tfromBlock\x18\x01 \x01(\tR\tfromBlock\x12+\n" +
	"\x04args\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x04args\"\x82\x01\n" +
	"\x12TransactionRequest\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\tR\x02to\x12$\n" +
	"\x06amount\x18\x03 \x01(\v2\f.loop.BigIntR\x06amount\x12\"\n" +
	"\fbalanceCheck\x18\x04 \x01(\bR\fbalanceCheck\"\xa6\x02\n" +
	"\x0eContractConfig\x12\"\n" +
	"\fconfigDigest\x18\x01 \x01(\fR\fconfigDigest\x12 \n" +
	"\vconfigCount\x18\x02 \x01(\x04R\vconfigCount\x12\x18\n" +
	"\asigners\x18\x03 \x03(\fR\asigners\x12\"\n" +
	"\ftransmitters\x18\x04 \x03(\tR\ftransmitters\x12\f\n" +
	"\x01F\x18\x05 \x01(\rR\x01F\x12$\n" +
	"\ronchainConfig\x18\x06 \x01(\fR\ronchainConfig\x124\n" +
	"\x15offchainConfigVersion\x18\a \x01(\x04R\x15offchainConfigVersion\x12&\n" +
	"\x0eoffchainConfig\x18\b \x01(\fR\x0eoffchainConfig\"S\n" +
	"\x13ConfigDigestRequest\x12<\n" +
	"\x0econtractConfig\x18\x01 \x01(\v2\x14.loop.ContractConfigR\x0econtractConfig\"7\n" +
	"\x11ConfigDigestReply\x12\"\n" +
	"\fconfigDigest\x18\x01 \x01(\fR\fconfigDigest\"\x1b\n" +
	"\x19ConfigDigestPrefixRequest\"I\n" +
	"\x17ConfigDigestPrefixReply\x12.\n" +
	"\x12configDigestPrefix\x18\x01 \x01(\rR\x12configDigestPrefix\"\x1c\n" +
	"\x1aLatestConfigDetailsRequest\"f\n" +
	"\x18LatestConfigDetailsReply\x12&\n" +
	"\x0echangedInBlock\x18\x01 \x01(\x04R\x0echangedInBlock\x12\"\n" +
	"\fconfigDigest\x18\x02 \x01(\fR\fconfigDigest\"=\n" +
	"\x13LatestConfigRequest\x12&\n" +
	"\x0echangedInBlock\x18\x01 \x01(\x04R\x0echangedInBlock\"Q\n" +
	"\x11LatestConfigReply\x12<\n" +
	"\x0econtractConfig\x18\x01 \x01(\v2\x14.loop.ContractConfigR\x0econtractConfig\"\x1a\n" +
	"\x18LatestBlockHeightRequest\":\n" +
	"\x16LatestBlockHeightReply\x12 \n" +
	"\vblockHeight\x18\x01 \x01(\x04R\vblockHeight\"a\n" +
	"\x0fReportTimestamp\x12\"\n" +
	"\fconfigDigest\x18\x01 \x01(\fR\fconfigDigest\x12\x14\n" +
	"\x05epoch\x18\x02 \x01(\rR\x05epoch\x12\x14\n" +
	"\x05round\x18\x03 \x01(\rR\x05round\"n\n" +
	"\rReportContext\x12?\n" +
	"\x0freportTimestamp\x18\x01 \x01(\v2\x15.loop.ReportTimestampR\x0freportTimestamp\x12\x1c\n" +
	"\textraHash\x18\x02 \x01(\fR\textraHash\"R\n" +
	"\x1aAttributedOnchainSignature\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\fR\tsignature\x12\x16\n" +
	"\x06signer\x18\x02 \x01(\rR\x06signer\"\xc8\x01\n" +
	"\x0fTransmitRequest\x129\n" +
	"\rreportContext\x18\x01 \x01(\v2\x13.loop.ReportContextR\rreportContext\x12\x16\n" +
	"\x06report\x18\x02 \x01(\fR\x06report\x12b\n" +
	"\x1battributedOnchainSignatures\x18\x03 \x03(\v2 .loop.AttributedOnchainSignatureR\x1battributedOnchainSignatures\"\x0f\n" +
	"\rTransmitReply\"#\n" +
	"!LatestConfigDigestAndEpochRequest\"[\n" +
	"\x1fLatestConfigDigestAndEpochReply\x12\"\n" +
	"\fconfigDigest\x18\x01 \x01(\fR\fconfigDigest\x12\x14\n" +
	"\x05epoch\x18\x02 \x01(\rR\x05epoch\"\x14\n" +
	"\x12FromAccountRequest\",\n" +
	"\x10FromAccountReply\x12\x18\n" +
	"\aAccount\x18\x01 \x01(\tR\aAccount\"\x1f\n" +
	"\tNameReply\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\xa3\x01\n" +
	"\x11HealthReportReply\x12M\n" +
	"\fhealthReport\x18\x01 \x03(\v2).loop.HealthReportReply.HealthReportEntryR\fhealthReport\x1a?\n" +
	"\x11HealthReportEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\":\n" +
	"\x06BigInt\x12\x1a\n" +
	"\bnegative\x18\x01 \x01(\bR\bnegative\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\"K\n" +
	"\x11StarknetSignature\x12\x1a\n" +
	"\x01x\x18\x01 \x01(\v2\f.loop.BigIntR\x01x\x12\x1a\n" +
	"\x01y\x18\x02 \x01(\v2\f.loop.BigIntR\x01y\"7\n" +
	"\x13StarknetMessageHash\x12 \n" +
	"\x04hash\x18\x01 \x01(\v2\f.loop.BigIntR\x04hash2O\n" +
	"\rPluginRelayer\x12>\n" +
	"\n" +
	"NewRelayer\x12\x17.loop.NewRelayerRequest\x1a\x15.loop.NewRelayerReply\"\x002s\n" +
	"\bKeystore\x129\n" +
	"\bAccounts\x12\x16.google.protobuf.Empty\x1a\x13.loop.AccountsReply\"\x00\x12,\n" +
	"\x04Sign\x12\x11.loop.SignRequest\x1a\x0f.loop.SignReply\"\x002\xb4\x05\n" +
	"\aRelayer\x12S\n" +
	"\x11NewContractWriter\x12\x1e.loop.NewContractWriterRequest\x1a\x1c.loop.NewContractWriterReply\"\x00\x12S\n" +
	"\x11NewContractReader\x12\x1e.loop.NewContractReaderRequest\x1a\x1c.loop.NewContractReaderReply\"\x00\x12S\n" +
	"\x11NewConfigProvider\x12\x1e.loop.NewConfigProviderRequest\x1a\x1c.loop.NewConfigProviderReply\"\x00\x12S\n" +
	"\x11NewPluginProvider\x12\x1e.loop.NewPluginProviderRequest\x1a\x1c.loop.NewPluginProviderReply\"\x00\x12>\n" +
	"\n" +
	"LatestHead\x12\x17.loop.LatestHeadRequest\x1a\x15.loop.LatestHeadReply\"\x00\x12J\n" +
	"\x0eGetChainStatus\x12\x1b.loop.GetChainStatusRequest\x1a\x19.loop.GetChainStatusReply\"\x00\x12P\n" +
	"\x10ListNodeStatuses\x12\x1d.loop.ListNodeStatusesRequest\x1a\x1b.loop.ListNodeStatusesReply\"\x00\x12>\n" +
	"\bTransact\x12\x18.loop.TransactionRequest\x1a\x16.google.protobuf.Empty\"\x00\x127\n" +
	"\x06Replay\x12\x13.loop.ReplayRequest\x1a\x16.google.protobuf.Empty\"\x002\xb6\x01\n" +
	"\x16OffchainConfigDigester\x12D\n" +
	"\fConfigDigest\x12\x19.loop.ConfigDigestRequest\x1a\x17.loop.ConfigDigestReply\"\x00\x12V\n" +
	"\x12ConfigDigestPrefix\x12\x1f.loop.ConfigDigestPrefixRequest\x1a\x1d.loop.ConfigDigestPrefixReply\"\x002\x8d\x02\n" +
	"\x15ContractConfigTracker\x12Y\n" +
	"\x13LatestConfigDetails\x12 .loop.LatestConfigDetailsRequest\x1a\x1e.loop.LatestConfigDetailsReply\"\x00\x12D\n" +
	"\fLatestConfig\x12\x19.loop.LatestConfigRequest\x1a\x17.loop.LatestConfigReply\"\x00\x12S\n" +
	"\x11LatestBlockHeight\x12\x1e.loop.LatestBlockHeightRequest\x1a\x1c.loop.LatestBlockHeightReply\"\x002\x82\x02\n" +
	"\x13ContractTransmitter\x128\n" +
	"\bTransmit\x12\x15.loop.TransmitRequest\x1a\x13.loop.TransmitReply\"\x00\x12n\n" +
	"\x1aLatestConfigDigestAndEpoch\x12'.loop.LatestConfigDigestAndEpochRequest\x1a%.loop.LatestConfigDigestAndEpochReply\"\x00\x12A\n" +
	"\vFromAccount\x12\x18.loop.FromAccountRequest\x1a\x16.loop.FromAccountReply\"\x002\xf5\x01\n" +
	"\aService\x121\n" +
	"\x04Name\x12\x16.google.protobuf.Empty\x1a\x0f.loop.NameReply\"\x00\x129\n" +
	"\x05Close\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x00\x129\n" +
	"\x05Ready\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x00\x12A\n" +
	"\fHealthReport\x12\x16.google.protobuf.Empty\x1a\x17.loop.HealthReportReply\"\x00BCZAgithub.com/smartcontractkit/chainlink-common/pkg/loop/internal/pbb\x06proto3"

var (
	file_relayer_proto_rawDescOnce sync.Once
	file_relayer_proto_rawDescData []byte
)

func file_relayer_proto_rawDescGZIP() []byte {
	file_relayer_proto_rawDescOnce.Do(func() {
		file_relayer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_relayer_proto_rawDesc), len(file_relayer_proto_rawDesc)))
	})
	return file_relayer_proto_rawDescData
}

var file_relayer_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_relayer_proto_goTypes = []any{
	(*NewRelayerRequest)(nil),                 // 0: loop.NewRelayerRequest
	(*NewRelayerReply)(nil),                   // 1: loop.NewRelayerReply
	(*AccountsReply)(nil),                     // 2: loop.AccountsReply
	(*SignRequest)(nil),                       // 3: loop.SignRequest
	(*SignReply)(nil),                         // 4: loop.SignReply
	(*RelayArgs)(nil),                         // 5: loop.RelayArgs
	(*PluginArgs)(nil),                        // 6: loop.PluginArgs
	(*NewContractWriterRequest)(nil),          // 7: loop.NewContractWriterRequest
	(*NewContractWriterReply)(nil),            // 8: loop.NewContractWriterReply
	(*NewContractReaderRequest)(nil),          // 9: loop.NewContractReaderRequest
	(*NewContractReaderReply)(nil),            // 10: loop.NewContractReaderReply
	(*NewPluginProviderRequest)(nil),          // 11: loop.NewPluginProviderRequest
	(*NewPluginProviderReply)(nil),            // 12: loop.NewPluginProviderReply
	(*NewConfigProviderRequest)(nil),          // 13: loop.NewConfigProviderRequest
	(*NewConfigProviderReply)(nil),            // 14: loop.NewConfigProviderReply
	(*LatestHeadRequest)(nil),                 // 15: loop.LatestHeadRequest
	(*LatestHeadReply)(nil),                   // 16: loop.LatestHeadReply
	(*GetChainStatusRequest)(nil),             // 17: loop.GetChainStatusRequest
	(*GetChainStatusReply)(nil),               // 18: loop.GetChainStatusReply
	(*ChainStatus)(nil),                       // 19: loop.ChainStatus
	(*ListNodeStatusesRequest)(nil),           // 20: loop.ListNodeStatusesRequest
	(*ListNodeStatusesReply)(nil),             // 21: loop.ListNodeStatusesReply
	(*NodeStatus)(nil),                        // 22: loop.NodeStatus
	(*ReplayRequest)(nil),                     // 23: loop.ReplayRequest
	(*TransactionRequest)(nil),                // 24: loop.TransactionRequest
	(*ContractConfig)(nil),                    // 25: loop.ContractConfig
	(*ConfigDigestRequest)(nil),               // 26: loop.ConfigDigestRequest
	(*ConfigDigestReply)(nil),                 // 27: loop.ConfigDigestReply
	(*ConfigDigestPrefixRequest)(nil),         // 28: loop.ConfigDigestPrefixRequest
	(*ConfigDigestPrefixReply)(nil),           // 29: loop.ConfigDigestPrefixReply
	(*LatestConfigDetailsRequest)(nil),        // 30: loop.LatestConfigDetailsRequest
	(*LatestConfigDetailsReply)(nil),          // 31: loop.LatestConfigDetailsReply
	(*LatestConfigRequest)(nil),               // 32: loop.LatestConfigRequest
	(*LatestConfigReply)(nil),                 // 33: loop.LatestConfigReply
	(*LatestBlockHeightRequest)(nil),          // 34: loop.LatestBlockHeightRequest
	(*LatestBlockHeightReply)(nil),            // 35: loop.LatestBlockHeightReply
	(*ReportTimestamp)(nil),                   // 36: loop.ReportTimestamp
	(*ReportContext)(nil),                     // 37: loop.ReportContext
	(*AttributedOnchainSignature)(nil),        // 38: loop.AttributedOnchainSignature
	(*TransmitRequest)(nil),                   // 39: loop.TransmitRequest
	(*TransmitReply)(nil),                     // 40: loop.TransmitReply
	(*LatestConfigDigestAndEpochRequest)(nil), // 41: loop.LatestConfigDigestAndEpochRequest
	(*LatestConfigDigestAndEpochReply)(nil),   // 42: loop.LatestConfigDigestAndEpochReply
	(*FromAccountRequest)(nil),                // 43: loop.FromAccountRequest
	(*FromAccountReply)(nil),                  // 44: loop.FromAccountReply
	(*NameReply)(nil),                         // 45: loop.NameReply
	(*HealthReportReply)(nil),                 // 46: loop.HealthReportReply
	(*BigInt)(nil),                            // 47: loop.BigInt
	(*StarknetSignature)(nil),                 // 48: loop.StarknetSignature
	(*StarknetMessageHash)(nil),               // 49: loop.StarknetMessageHash
	nil,                                       // 50: loop.HealthReportReply.HealthReportEntry
	(*Head)(nil),                              // 51: loop.Head
	(*structpb.Struct)(nil),                   // 52: google.protobuf.Struct
	(*emptypb.Empty)(nil),                     // 53: google.protobuf.Empty
}
var file_relayer_proto_depIdxs = []int32{
	5,  // 0: loop.NewPluginProviderRequest.relayArgs:type_name -> loop.RelayArgs
	6,  // 1: loop.NewPluginProviderRequest.pluginArgs:type_name -> loop.PluginArgs
	5,  // 2: loop.NewConfigProviderRequest.relayArgs:type_name -> loop.RelayArgs
	51, // 3: loop.LatestHeadReply.head:type_name -> loop.Head
	19, // 4: loop.GetChainStatusReply.chain:type_name -> loop.ChainStatus
	22, // 5: loop.ListNodeStatusesReply.nodes:type_name -> loop.NodeStatus
	52, // 6: loop.ReplayRequest.args:type_name -> google.protobuf.Struct
	47, // 7: loop.TransactionRequest.amount:type_name -> loop.BigInt
	25, // 8: loop.ConfigDigestRequest.contractConfig:type_name -> loop.ContractConfig
	25, // 9: loop.LatestConfigReply.contractConfig:type_name -> loop.ContractConfig
	36, // 10: loop.ReportContext.reportTimestamp:type_name -> loop.ReportTimestamp
	37, // 11: loop.TransmitRequest.reportContext:type_name -> loop.ReportContext
	38, // 12: loop.TransmitRequest.attributedOnchainSignatures:type_name -> loop.AttributedOnchainSignature
	50, // 13: loop.HealthReportReply.healthReport:type_name -> loop.HealthReportReply.HealthReportEntry
	47, // 14: loop.StarknetSignature.x:type_name -> loop.BigInt
	47, // 15: loop.StarknetSignature.y:type_name -> loop.BigInt
	47, // 16: loop.StarknetMessageHash.hash:type_name -> loop.BigInt
	0,  // 17: loop.PluginRelayer.NewRelayer:input_type -> loop.NewRelayerRequest
	53, // 18: loop.Keystore.Accounts:input_type -> google.protobuf.Empty
	3,  // 19: loop.Keystore.Sign:input_type -> loop.SignRequest
	7,  // 20: loop.Relayer.NewContractWriter:input_type -> loop.NewContractWriterRequest
	9,  // 21: loop.Relayer.NewContractReader:input_type -> loop.NewContractReaderRequest
	13, // 22: loop.Relayer.NewConfigProvider:input_type -> loop.NewConfigProviderRequest
	11, // 23: loop.Relayer.NewPluginProvider:input_type -> loop.NewPluginProviderRequest
	15, // 24: loop.Relayer.LatestHead:input_type -> loop.LatestHeadRequest
	17, // 25: loop.Relayer.GetChainStatus:input_type -> loop.GetChainStatusRequest
	20, // 26: loop.Relayer.ListNodeStatuses:input_type -> loop.ListNodeStatusesRequest
	24, // 27: loop.Relayer.Transact:input_type -> loop.TransactionRequest
	23, // 28: loop.Relayer.Replay:input_type -> loop.ReplayRequest
	26, // 29: loop.OffchainConfigDigester.ConfigDigest:input_type -> loop.ConfigDigestRequest
	28, // 30: loop.OffchainConfigDigester.ConfigDigestPrefix:input_type -> loop.ConfigDigestPrefixRequest
	30, // 31: loop.ContractConfigTracker.LatestConfigDetails:input_type -> loop.LatestConfigDetailsRequest
	32, // 32: loop.ContractConfigTracker.LatestConfig:input_type -> loop.LatestConfigRequest
	34, // 33: loop.ContractConfigTracker.LatestBlockHeight:input_type -> loop.LatestBlockHeightRequest
	39, // 34: loop.ContractTransmitter.Transmit:input_type -> loop.TransmitRequest
	41, // 35: loop.ContractTransmitter.LatestConfigDigestAndEpoch:input_type -> loop.LatestConfigDigestAndEpochRequest
	43, // 36: loop.ContractTransmitter.FromAccount:input_type -> loop.FromAccountRequest
	53, // 37: loop.Service.Name:input_type -> google.protobuf.Empty
	53, // 38: loop.Service.Close:input_type -> google.protobuf.Empty
	53, // 39: loop.Service.Ready:input_type -> google.protobuf.Empty
	53, // 40: loop.Service.HealthReport:input_type -> google.protobuf.Empty
	1,  // 41: loop.PluginRelayer.NewRelayer:output_type -> loop.NewRelayerReply
	2,  // 42: loop.Keystore.Accounts:output_type -> loop.AccountsReply
	4,  // 43: loop.Keystore.Sign:output_type -> loop.SignReply
	8,  // 44: loop.Relayer.NewContractWriter:output_type -> loop.NewContractWriterReply
	10, // 45: loop.Relayer.NewContractReader:output_type -> loop.NewContractReaderReply
	14, // 46: loop.Relayer.NewConfigProvider:output_type -> loop.NewConfigProviderReply
	12, // 47: loop.Relayer.NewPluginProvider:output_type -> loop.NewPluginProviderReply
	16, // 48: loop.Relayer.LatestHead:output_type -> loop.LatestHeadReply
	18, // 49: loop.Relayer.GetChainStatus:output_type -> loop.GetChainStatusReply
	21, // 50: loop.Relayer.ListNodeStatuses:output_type -> loop.ListNodeStatusesReply
	53, // 51: loop.Relayer.Transact:output_type -> google.protobuf.Empty
	53, // 52: loop.Relayer.Replay:output_type -> google.protobuf.Empty
	27, // 53: loop.OffchainConfigDigester.ConfigDigest:output_type -> loop.ConfigDigestReply
	29, // 54: loop.OffchainConfigDigester.ConfigDigestPrefix:output_type -> loop.ConfigDigestPrefixReply
	31, // 55: loop.ContractConfigTracker.LatestConfigDetails:output_type -> loop.LatestConfigDetailsReply
	33, // 56: loop.ContractConfigTracker.LatestConfig:output_type -> loop.LatestConfigReply
	35, // 57: loop.ContractConfigTracker.LatestBlockHeight:output_type -> loop.LatestBlockHeightReply
	40, // 58: loop.ContractTransmitter.Transmit:output_type -> loop.TransmitReply
	42, // 59: loop.ContractTransmitter.LatestConfigDigestAndEpoch:output_type -> loop.LatestConfigDigestAndEpochReply
	44, // 60: loop.ContractTransmitter.FromAccount:output_type -> loop.FromAccountReply
	45, // 61: loop.Service.Name:output_type -> loop.NameReply
	53, // 62: loop.Service.Close:output_type -> google.protobuf.Empty
	53, // 63: loop.Service.Ready:output_type -> google.protobuf.Empty
	46, // 64: loop.Service.HealthReport:output_type -> loop.HealthReportReply
	41, // [41:65] is the sub-list for method output_type
	17, // [17:41] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_relayer_proto_init() }
func file_relayer_proto_init() {
	if File_relayer_proto != nil {
		return
	}
	file_contract_reader_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_relayer_proto_rawDesc), len(file_relayer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   7,
		},
		GoTypes:           file_relayer_proto_goTypes,
		DependencyIndexes: file_relayer_proto_depIdxs,
		MessageInfos:      file_relayer_proto_msgTypes,
	}.Build()
	File_relayer_proto = out.File
	file_relayer_proto_goTypes = nil
	file_relayer_proto_depIdxs = nil
}
