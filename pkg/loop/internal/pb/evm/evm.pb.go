// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: evm.proto

package evmpb

import (
	pb "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ----- Message Types -----
// represents evm-style Address
// [20]byte fix-sized array
type Address struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       []byte                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Address) Reset() {
	*x = Address{}
	mi := &file_evm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{0}
}

func (x *Address) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

// represents evm-style hash
// [32]byte fix-sized array
type Hash struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Hash) Reset() {
	*x = Hash{}
	mi := &file_evm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hash) ProtoMessage() {}

func (x *Hash) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hash.ProtoReflect.Descriptor instead.
func (*Hash) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{1}
}

func (x *Hash) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// represents solidity-spec abi encoded bytes
type ABIPayload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Abi           []byte                 `protobuf:"bytes,1,opt,name=abi,proto3" json:"abi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ABIPayload) Reset() {
	*x = ABIPayload{}
	mi := &file_evm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ABIPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABIPayload) ProtoMessage() {}

func (x *ABIPayload) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABIPayload.ProtoReflect.Descriptor instead.
func (*ABIPayload) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{2}
}

func (x *ABIPayload) GetAbi() []byte {
	if x != nil {
		return x.Abi
	}
	return nil
}

// represents simplified evm-style CallMsg
type CallMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          *Address               `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"` // sender address, important for reads relied on msg.sender
	To            *Address               `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`     // contract address
	Data          *ABIPayload            `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` // abi encoded payload
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallMsg) Reset() {
	*x = CallMsg{}
	mi := &file_evm_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallMsg) ProtoMessage() {}

func (x *CallMsg) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallMsg.ProtoReflect.Descriptor instead.
func (*CallMsg) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{3}
}

func (x *CallMsg) GetFrom() *Address {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *CallMsg) GetTo() *Address {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *CallMsg) GetData() *ABIPayload {
	if x != nil {
		return x.Data
	}
	return nil
}

type Topics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         []*Hash                `protobuf:"bytes,1,rep,name=topic,proto3" json:"topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Topics) Reset() {
	*x = Topics{}
	mi := &file_evm_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Topics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topics) ProtoMessage() {}

func (x *Topics) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topics.ProtoReflect.Descriptor instead.
func (*Topics) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{4}
}

func (x *Topics) GetTopic() []*Hash {
	if x != nil {
		return x.Topic
	}
	return nil
}

// represents evm-style log
type Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       *Address               `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                            // address of the contract emitted the log
	Topics        []*Hash                `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`                              // indexed log fields
	TxHash        *Hash                  `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`                // hash of the transaction emmited the log
	BlockHash     *Hash                  `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`       // hash of the block containing the log
	Data          *ABIPayload            `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`                                  // encoded log Data
	EventSig      *Hash                  `protobuf:"bytes,6,opt,name=eventSig,proto3" json:"eventSig,omitempty"`                          // keccak256 of event signature
	BlockNumber   *pb.BigInt             `protobuf:"bytes,7,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"` // block number containing the log
	TxIndex       uint32                 `protobuf:"varint,8,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`            // index of transaction emmited the log
	Index         uint32                 `protobuf:"varint,9,opt,name=index,proto3" json:"index,omitempty"`                               // index of the Log within the intire block
	Removed       bool                   `protobuf:"varint,10,opt,name=removed,proto3" json:"removed,omitempty"`                          // flag if the log was removed during reorg
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_evm_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{5}
}

func (x *Log) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Log) GetTopics() []*Hash {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *Log) GetTxHash() *Hash {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *Log) GetBlockHash() *Hash {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *Log) GetData() *ABIPayload {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Log) GetEventSig() *Hash {
	if x != nil {
		return x.EventSig
	}
	return nil
}

func (x *Log) GetBlockNumber() *pb.BigInt {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

func (x *Log) GetTxIndex() uint32 {
	if x != nil {
		return x.TxIndex
	}
	return 0
}

func (x *Log) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Log) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

// represents evm-style filter query
type FilterQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockHash     *Hash                  `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"` // exact block (cant use from/to)
	FromBlock     *pb.BigInt             `protobuf:"bytes,2,opt,name=fromBlock,proto3" json:"fromBlock,omitempty"`                  // start block range
	ToBlock       *pb.BigInt             `protobuf:"bytes,3,opt,name=toBlock,proto3" json:"toBlock,omitempty"`                      // end block range
	Addresses     []*Address             `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`                  // contract(s) to filter logs from
	Topics        []*Topics              `protobuf:"bytes,5,rep,name=topics,proto3" json:"topics,omitempty"`                        // filter log by event signature and indexed args
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterQuery) Reset() {
	*x = FilterQuery{}
	mi := &file_evm_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterQuery) ProtoMessage() {}

func (x *FilterQuery) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterQuery.ProtoReflect.Descriptor instead.
func (*FilterQuery) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{6}
}

func (x *FilterQuery) GetBlockHash() *Hash {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *FilterQuery) GetFromBlock() *pb.BigInt {
	if x != nil {
		return x.FromBlock
	}
	return nil
}

func (x *FilterQuery) GetToBlock() *pb.BigInt {
	if x != nil {
		return x.ToBlock
	}
	return nil
}

func (x *FilterQuery) GetAddresses() []*Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *FilterQuery) GetTopics() []*Topics {
	if x != nil {
		return x.Topics
	}
	return nil
}

// represents evm-style transaction
type Transaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nonce         uint64                 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`                      // number of txs sent from sender
	Gas           uint64                 `protobuf:"varint,2,opt,name=gas,proto3" json:"gas,omitempty"`                          // max gas allowed per execution (in gas units)
	To            *Address               `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`                             // recipient address
	Data          *ABIPayload            `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                         // input data for function call payload
	Hash          *Hash                  `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`                         // derived from transaction structure hash
	Value         *pb.BigInt             `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`                       // amount of eth sent in wei
	GasPrice      *pb.BigInt             `protobuf:"bytes,7,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"` // price for a signle gas unit in wei
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_evm_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{7}
}

func (x *Transaction) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Transaction) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *Transaction) GetTo() *Address {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Transaction) GetData() *ABIPayload {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Transaction) GetHash() *Hash {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Transaction) GetValue() *pb.BigInt {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Transaction) GetGasPrice() *pb.BigInt {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

// represents evm-style receipt
type Receipt struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Status            uint64                 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                                                 // 1 for success 0 for failure
	GasUsed           uint64                 `protobuf:"varint,2,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`                                // gas used by this transaction (in gas units)
	TxIndex           uint64                 `protobuf:"varint,3,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`                                // index of the transaction inside of the block
	BlockHash         *Hash                  `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`                           // block hash containing the transaction
	Logs              []*Log                 `protobuf:"bytes,6,rep,name=logs,proto3" json:"logs,omitempty"`                                                      // logs emmited by this transaction
	TxHash            *Hash                  `protobuf:"bytes,7,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`                                    // hash of the transaction this receipt is for
	EffectiveGasPrice *pb.BigInt             `protobuf:"bytes,8,opt,name=effective_gas_price,json=effectiveGasPrice,proto3" json:"effective_gas_price,omitempty"` // actual gas price paid in wei (include after EIP-1559)
	BlockNumber       *pb.BigInt             `protobuf:"bytes,9,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`                     // block number containing the transaction
	ContractAddress   *Address               `protobuf:"bytes,10,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`        // address of the contract if this transaction created one
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Receipt) Reset() {
	*x = Receipt{}
	mi := &file_evm_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Receipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt) ProtoMessage() {}

func (x *Receipt) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt.ProtoReflect.Descriptor instead.
func (*Receipt) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{8}
}

func (x *Receipt) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Receipt) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *Receipt) GetTxIndex() uint64 {
	if x != nil {
		return x.TxIndex
	}
	return 0
}

func (x *Receipt) GetBlockHash() *Hash {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *Receipt) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Receipt) GetTxHash() *Hash {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *Receipt) GetEffectiveGasPrice() *pb.BigInt {
	if x != nil {
		return x.EffectiveGasPrice
	}
	return nil
}

func (x *Receipt) GetBlockNumber() *pb.BigInt {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

func (x *Receipt) GetContractAddress() *Address {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

// represents filter for polling and caching logs
type LPFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxLogsKept   uint64                 `protobuf:"varint,1,opt,name=max_logs_kept,json=maxLogsKept,proto3" json:"max_logs_kept,omitempty"`     // maximum number of logs to retain ( 0 = unlimited )
	RetentionTime int64                  `protobuf:"varint,2,opt,name=retention_time,json=retentionTime,proto3" json:"retention_time,omitempty"` // maximum amount of time to retain logs in seconds
	LogsPerBlock  uint64                 `protobuf:"varint,3,opt,name=logs_per_block,json=logsPerBlock,proto3" json:"logs_per_block,omitempty"`  // rate limit ( maximum # of logs per block, 0 = unlimited )
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                         // filter name, has to persist for removing filter
	Addresses     []*Address             `protobuf:"bytes,5,rep,name=addresses,proto3" json:"addresses,omitempty"`                               // list of addresses to include
	EventSigs     []*Hash                `protobuf:"bytes,6,rep,name=event_sigs,json=eventSigs,proto3" json:"event_sigs,omitempty"`              // list of possible signatures (aka topic1)
	Topic2        []*Hash                `protobuf:"bytes,7,rep,name=topic2,proto3" json:"topic2,omitempty"`                                     // list of possible values for topic2
	Topic3        []*Hash                `protobuf:"bytes,8,rep,name=topic3,proto3" json:"topic3,omitempty"`                                     // list of possible values for topic3
	Topic4        []*Hash                `protobuf:"bytes,9,rep,name=topic4,proto3" json:"topic4,omitempty"`                                     // list of possible values for topic4
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LPFilter) Reset() {
	*x = LPFilter{}
	mi := &file_evm_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LPFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LPFilter) ProtoMessage() {}

func (x *LPFilter) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LPFilter.ProtoReflect.Descriptor instead.
func (*LPFilter) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{9}
}

func (x *LPFilter) GetMaxLogsKept() uint64 {
	if x != nil {
		return x.MaxLogsKept
	}
	return 0
}

func (x *LPFilter) GetRetentionTime() int64 {
	if x != nil {
		return x.RetentionTime
	}
	return 0
}

func (x *LPFilter) GetLogsPerBlock() uint64 {
	if x != nil {
		return x.LogsPerBlock
	}
	return 0
}

func (x *LPFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LPFilter) GetAddresses() []*Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *LPFilter) GetEventSigs() []*Hash {
	if x != nil {
		return x.EventSigs
	}
	return nil
}

func (x *LPFilter) GetTopic2() []*Hash {
	if x != nil {
		return x.Topic2
	}
	return nil
}

func (x *LPFilter) GetTopic3() []*Hash {
	if x != nil {
		return x.Topic3
	}
	return nil
}

func (x *LPFilter) GetTopic4() []*Hash {
	if x != nil {
		return x.Topic4
	}
	return nil
}

type Head struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     uint64                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // unix timestamp
	BlockNumber   *pb.BigInt             `protobuf:"bytes,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	Hash          *Hash                  `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	ParentHash    *Hash                  `protobuf:"bytes,4,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Head) Reset() {
	*x = Head{}
	mi := &file_evm_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Head) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Head) ProtoMessage() {}

func (x *Head) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Head.ProtoReflect.Descriptor instead.
func (*Head) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{10}
}

func (x *Head) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Head) GetBlockNumber() *pb.BigInt {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

func (x *Head) GetHash() *Hash {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Head) GetParentHash() *Hash {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

// ----- Request/Reply Wrappers -----
type LatestAndFinalizedHeadReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latest        *Head                  `protobuf:"bytes,1,opt,name=latest,proto3" json:"latest,omitempty"`
	Finalized     *Head                  `protobuf:"bytes,2,opt,name=finalized,proto3" json:"finalized,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestAndFinalizedHeadReply) Reset() {
	*x = LatestAndFinalizedHeadReply{}
	mi := &file_evm_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestAndFinalizedHeadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestAndFinalizedHeadReply) ProtoMessage() {}

func (x *LatestAndFinalizedHeadReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestAndFinalizedHeadReply.ProtoReflect.Descriptor instead.
func (*LatestAndFinalizedHeadReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{11}
}

func (x *LatestAndFinalizedHeadReply) GetLatest() *Head {
	if x != nil {
		return x.Latest
	}
	return nil
}

func (x *LatestAndFinalizedHeadReply) GetFinalized() *Head {
	if x != nil {
		return x.Finalized
	}
	return nil
}

type CallContractRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Call          *CallMsg               `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	BlockNumber   *pb.BigInt             `protobuf:"bytes,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallContractRequest) Reset() {
	*x = CallContractRequest{}
	mi := &file_evm_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallContractRequest) ProtoMessage() {}

func (x *CallContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallContractRequest.ProtoReflect.Descriptor instead.
func (*CallContractRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{12}
}

func (x *CallContractRequest) GetCall() *CallMsg {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *CallContractRequest) GetBlockNumber() *pb.BigInt {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

type CallContractReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *ABIPayload            `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallContractReply) Reset() {
	*x = CallContractReply{}
	mi := &file_evm_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallContractReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallContractReply) ProtoMessage() {}

func (x *CallContractReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallContractReply.ProtoReflect.Descriptor instead.
func (*CallContractReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{13}
}

func (x *CallContractReply) GetData() *ABIPayload {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetTransactionFeeRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.EVMRElayer.GetTransactionFee].
type GetTransactionFeeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // idempotency key used when transaction was submitted
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionFeeRequest) Reset() {
	*x = GetTransactionFeeRequest{}
	mi := &file_evm_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionFeeRequest) ProtoMessage() {}

func (x *GetTransactionFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionFeeRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionFeeRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{14}
}

func (x *GetTransactionFeeRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

// GetTransactionFeeReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.EVMRElayer.GetTransactionFee].
type GetTransactionFeeReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransationFee *pb.BigInt             `protobuf:"bytes,1,opt,name=transation_fee,json=transationFee,proto3" json:"transation_fee,omitempty"` // transaction fee is the cost of transaction execution in Wei
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionFeeReply) Reset() {
	*x = GetTransactionFeeReply{}
	mi := &file_evm_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionFeeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionFeeReply) ProtoMessage() {}

func (x *GetTransactionFeeReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionFeeReply.ProtoReflect.Descriptor instead.
func (*GetTransactionFeeReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{15}
}

func (x *GetTransactionFeeReply) GetTransationFee() *pb.BigInt {
	if x != nil {
		return x.TransationFee
	}
	return nil
}

type FilterLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilterQuery   *FilterQuery           `protobuf:"bytes,1,opt,name=filter_query,json=filterQuery,proto3" json:"filter_query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterLogsRequest) Reset() {
	*x = FilterLogsRequest{}
	mi := &file_evm_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterLogsRequest) ProtoMessage() {}

func (x *FilterLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterLogsRequest.ProtoReflect.Descriptor instead.
func (*FilterLogsRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{16}
}

func (x *FilterLogsRequest) GetFilterQuery() *FilterQuery {
	if x != nil {
		return x.FilterQuery
	}
	return nil
}

type FilterLogsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*Log                 `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterLogsReply) Reset() {
	*x = FilterLogsReply{}
	mi := &file_evm_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterLogsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterLogsReply) ProtoMessage() {}

func (x *FilterLogsReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterLogsReply.ProtoReflect.Descriptor instead.
func (*FilterLogsReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{17}
}

func (x *FilterLogsReply) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

type BalanceAtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       *Address               `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	BlockNumber   *pb.BigInt             `protobuf:"bytes,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BalanceAtRequest) Reset() {
	*x = BalanceAtRequest{}
	mi := &file_evm_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceAtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceAtRequest) ProtoMessage() {}

func (x *BalanceAtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceAtRequest.ProtoReflect.Descriptor instead.
func (*BalanceAtRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{18}
}

func (x *BalanceAtRequest) GetAccount() *Address {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *BalanceAtRequest) GetBlockNumber() *pb.BigInt {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

type BalanceAtReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balance       *pb.BigInt             `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"` // Balance of the account in wei (10^-18 eth)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BalanceAtReply) Reset() {
	*x = BalanceAtReply{}
	mi := &file_evm_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceAtReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceAtReply) ProtoMessage() {}

func (x *BalanceAtReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceAtReply.ProtoReflect.Descriptor instead.
func (*BalanceAtReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{19}
}

func (x *BalanceAtReply) GetBalance() *pb.BigInt {
	if x != nil {
		return x.Balance
	}
	return nil
}

type EstimateGasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           *CallMsg               `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"` // simulates tx execution returns approximate amount of gas units needed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateGasRequest) Reset() {
	*x = EstimateGasRequest{}
	mi := &file_evm_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateGasRequest) ProtoMessage() {}

func (x *EstimateGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateGasRequest.ProtoReflect.Descriptor instead.
func (*EstimateGasRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{20}
}

func (x *EstimateGasRequest) GetMsg() *CallMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

type EstimateGasReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gas           uint64                 `protobuf:"varint,1,opt,name=gas,proto3" json:"gas,omitempty"` // estimated amount of gas in gas units, needed for tx execution
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateGasReply) Reset() {
	*x = EstimateGasReply{}
	mi := &file_evm_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateGasReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateGasReply) ProtoMessage() {}

func (x *EstimateGasReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateGasReply.ProtoReflect.Descriptor instead.
func (*EstimateGasReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{21}
}

func (x *EstimateGasReply) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

type GetTransactionByHashRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          *Hash                  `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionByHashRequest) Reset() {
	*x = GetTransactionByHashRequest{}
	mi := &file_evm_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionByHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByHashRequest) ProtoMessage() {}

func (x *GetTransactionByHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByHashRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionByHashRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{22}
}

func (x *GetTransactionByHashRequest) GetHash() *Hash {
	if x != nil {
		return x.Hash
	}
	return nil
}

type GetTransactionByHashReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transaction   *Transaction           `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionByHashReply) Reset() {
	*x = GetTransactionByHashReply{}
	mi := &file_evm_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionByHashReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByHashReply) ProtoMessage() {}

func (x *GetTransactionByHashReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByHashReply.ProtoReflect.Descriptor instead.
func (*GetTransactionByHashReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{23}
}

func (x *GetTransactionByHashReply) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type GetReceiptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          *Hash                  `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReceiptRequest) Reset() {
	*x = GetReceiptRequest{}
	mi := &file_evm_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReceiptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReceiptRequest) ProtoMessage() {}

func (x *GetReceiptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReceiptRequest.ProtoReflect.Descriptor instead.
func (*GetReceiptRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{24}
}

func (x *GetReceiptRequest) GetHash() *Hash {
	if x != nil {
		return x.Hash
	}
	return nil
}

type GetReceiptReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Receipt       *Receipt               `protobuf:"bytes,1,opt,name=receipt,proto3" json:"receipt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReceiptReply) Reset() {
	*x = GetReceiptReply{}
	mi := &file_evm_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReceiptReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReceiptReply) ProtoMessage() {}

func (x *GetReceiptReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReceiptReply.ProtoReflect.Descriptor instead.
func (*GetReceiptReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{25}
}

func (x *GetReceiptReply) GetReceipt() *Receipt {
	if x != nil {
		return x.Receipt
	}
	return nil
}

type RegisterLogTrackingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *LPFilter              `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterLogTrackingRequest) Reset() {
	*x = RegisterLogTrackingRequest{}
	mi := &file_evm_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterLogTrackingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterLogTrackingRequest) ProtoMessage() {}

func (x *RegisterLogTrackingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterLogTrackingRequest.ProtoReflect.Descriptor instead.
func (*RegisterLogTrackingRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{26}
}

func (x *RegisterLogTrackingRequest) GetFilter() *LPFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type UnregisterLogTrackingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilterName    string                 `protobuf:"bytes,1,opt,name=filter_name,json=filterName,proto3" json:"filter_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterLogTrackingRequest) Reset() {
	*x = UnregisterLogTrackingRequest{}
	mi := &file_evm_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterLogTrackingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterLogTrackingRequest) ProtoMessage() {}

func (x *UnregisterLogTrackingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterLogTrackingRequest.ProtoReflect.Descriptor instead.
func (*UnregisterLogTrackingRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{27}
}

func (x *UnregisterLogTrackingRequest) GetFilterName() string {
	if x != nil {
		return x.FilterName
	}
	return ""
}

type QueryTrackedLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Expression    []*pb.Expression       `protobuf:"bytes,1,rep,name=expression,proto3" json:"expression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTrackedLogsRequest) Reset() {
	*x = QueryTrackedLogsRequest{}
	mi := &file_evm_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTrackedLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTrackedLogsRequest) ProtoMessage() {}

func (x *QueryTrackedLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTrackedLogsRequest.ProtoReflect.Descriptor instead.
func (*QueryTrackedLogsRequest) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{28}
}

func (x *QueryTrackedLogsRequest) GetExpression() []*pb.Expression {
	if x != nil {
		return x.Expression
	}
	return nil
}

type QueryTrackedLogsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*Log                 `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTrackedLogsReply) Reset() {
	*x = QueryTrackedLogsReply{}
	mi := &file_evm_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTrackedLogsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTrackedLogsReply) ProtoMessage() {}

func (x *QueryTrackedLogsReply) ProtoReflect() protoreflect.Message {
	mi := &file_evm_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTrackedLogsReply.ProtoReflect.Descriptor instead.
func (*QueryTrackedLogsReply) Descriptor() ([]byte, []int) {
	return file_evm_proto_rawDescGZIP(), []int{29}
}

func (x *QueryTrackedLogsReply) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

var File_evm_proto protoreflect.FileDescriptor

const file_evm_proto_rawDesc = "" +
	"\n" +
	"\tevm.proto\x12\x14loop.internal.pb.evm\x1a\rrelayer.proto\x1a\x15contract_reader.proto\x1a\x15contract_writer.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\"#\n" +
	"\aAddress\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\"\x1a\n" +
	"\x04Hash\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\"\x1e\n" +
	"\n" +
	"ABIPayload\x12\x10\n" +
	"\x03abi\x18\x01 \x01(\fR\x03abi\"\xa1\x01\n" +
	"\aCallMsg\x121\n" +
	"\x04from\x18\x01 \x01(\v2\x1d.loop.internal.pb.evm.AddressR\x04from\x12-\n" +
	"\x02to\x18\x02 \x01(\v2\x1d.loop.internal.pb.evm.AddressR\x02to\x124\n" +
	"\x04data\x18\x03 \x01(\v2 .loop.internal.pb.evm.ABIPayloadR\x04data\":\n" +
	"\x06Topics\x120\n" +
	"\x05topic\x18\x01 \x03(\v2\x1a.loop.internal.pb.evm.HashR\x05topic\"\xcc\x03\n" +
	"\x03Log\x127\n" +
	"\aaddress\x18\x01 \x01(\v2\x1d.loop.internal.pb.evm.AddressR\aaddress\x122\n" +
	"\x06topics\x18\x02 \x03(\v2\x1a.loop.internal.pb.evm.HashR\x06topics\x123\n" +
	"\atx_hash\x18\x03 \x01(\v2\x1a.loop.internal.pb.evm.HashR\x06txHash\x129\n" +
	"\n" +
	"block_hash\x18\x04 \x01(\v2\x1a.loop.internal.pb.evm.HashR\tblockHash\x124\n" +
	"\x04data\x18\x05 \x01(\v2 .loop.internal.pb.evm.ABIPayloadR\x04data\x126\n" +
	"\beventSig\x18\x06 \x01(\v2\x1a.loop.internal.pb.evm.HashR\beventSig\x12/\n" +
	"\fblock_number\x18\a \x01(\v2\f.loop.BigIntR\vblockNumber\x12\x19\n" +
	"\btx_index\x18\b \x01(\rR\atxIndex\x12\x14\n" +
	"\x05index\x18\t \x01(\rR\x05index\x12\x18\n" +
	"\aremoved\x18\n" +
	" \x01(\bR\aremoved\"\x8f\x02\n" +
	"\vFilterQuery\x129\n" +
	"\n" +
	"block_hash\x18\x01 \x01(\v2\x1a.loop.internal.pb.evm.HashR\tblockHash\x12*\n" +
	"\tfromBlock\x18\x02 \x01(\v2\f.loop.BigIntR\tfromBlock\x12&\n" +
	"\atoBlock\x18\x03 \x01(\v2\f.loop.BigIntR\atoBlock\x12;\n" +
	"\taddresses\x18\x04 \x03(\v2\x1d.loop.internal.pb.evm.AddressR\taddresses\x124\n" +
	"\x06topics\x18\x05 \x03(\v2\x1c.loop.internal.pb.evm.TopicsR\x06topics\"\x99\x02\n" +
	"\vTransaction\x12\x14\n" +
	"\x05nonce\x18\x01 \x01(\x04R\x05nonce\x12\x10\n" +
	"\x03gas\x18\x02 \x01(\x04R\x03gas\x12-\n" +
	"\x02to\x18\x03 \x01(\v2\x1d.loop.internal.pb.evm.AddressR\x02to\x124\n" +
	"\x04data\x18\x04 \x01(\v2 .loop.internal.pb.evm.ABIPayloadR\x04data\x12.\n" +
	"\x04hash\x18\x05 \x01(\v2\x1a.loop.internal.pb.evm.HashR\x04hash\x12\"\n" +
	"\x05value\x18\x06 \x01(\v2\f.loop.BigIntR\x05value\x12)\n" +
	"\tgas_price\x18\a \x01(\v2\f.loop.BigIntR\bgasPrice\"\xaf\x03\n" +
	"\aReceipt\x12\x16\n" +
	"\x06status\x18\x01 \x01(\x04R\x06status\x12\x19\n" +
	"\bgas_used\x18\x02 \x01(\x04R\agasUsed\x12\x19\n" +
	"\btx_index\x18\x03 \x01(\x04R\atxIndex\x129\n" +
	"\n" +
	"block_hash\x18\x04 \x01(\v2\x1a.loop.internal.pb.evm.HashR\tblockHash\x12-\n" +
	"\x04logs\x18\x06 \x03(\v2\x19.loop.internal.pb.evm.LogR\x04logs\x123\n" +
	"\atx_hash\x18\a \x01(\v2\x1a.loop.internal.pb.evm.HashR\x06txHash\x12<\n" +
	"\x13effective_gas_price\x18\b \x01(\v2\f.loop.BigIntR\x11effectiveGasPrice\x12/\n" +
	"\fblock_number\x18\t \x01(\v2\f.loop.BigIntR\vblockNumber\x12H\n" +
	"\x10contract_address\x18\n" +
	" \x01(\v2\x1d.loop.internal.pb.evm.AddressR\x0fcontractAddress\"\xa3\x03\n" +
	"\bLPFilter\x12\"\n" +
	"\rmax_logs_kept\x18\x01 \x01(\x04R\vmaxLogsKept\x12%\n" +
	"\x0eretention_time\x18\x02 \x01(\x03R\rretentionTime\x12$\n" +
	"\x0elogs_per_block\x18\x03 \x01(\x04R\flogsPerBlock\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12;\n" +
	"\taddresses\x18\x05 \x03(\v2\x1d.loop.internal.pb.evm.AddressR\taddresses\x129\n" +
	"\n" +
	"event_sigs\x18\x06 \x03(\v2\x1a.loop.internal.pb.evm.HashR\teventSigs\x122\n" +
	"\x06topic2\x18\a \x03(\v2\x1a.loop.internal.pb.evm.HashR\x06topic2\x122\n" +
	"\x06topic3\x18\b \x03(\v2\x1a.loop.internal.pb.evm.HashR\x06topic3\x122\n" +
	"\x06topic4\x18\t \x03(\v2\x1a.loop.internal.pb.evm.HashR\x06topic4\"\xc2\x01\n" +
	"\x04Head\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x04R\ttimestamp\x12/\n" +
	"\fblock_number\x18\x02 \x01(\v2\f.loop.BigIntR\vblockNumber\x12.\n" +
	"\x04hash\x18\x03 \x01(\v2\x1a.loop.internal.pb.evm.HashR\x04hash\x12;\n" +
	"\vparent_hash\x18\x04 \x01(\v2\x1a.loop.internal.pb.evm.HashR\n" +
	"parentHash\"\x8b\x01\n" +
	"\x1bLatestAndFinalizedHeadReply\x122\n" +
	"\x06latest\x18\x01 \x01(\v2\x1a.loop.internal.pb.evm.HeadR\x06latest\x128\n" +
	"\tfinalized\x18\x02 \x01(\v2\x1a.loop.internal.pb.evm.HeadR\tfinalized\"y\n" +
	"\x13CallContractRequest\x121\n" +
	"\x04call\x18\x01 \x01(\v2\x1d.loop.internal.pb.evm.CallMsgR\x04call\x12/\n" +
	"\fblock_number\x18\x02 \x01(\v2\f.loop.BigIntR\vblockNumber\"I\n" +
	"\x11CallContractReply\x124\n" +
	"\x04data\x18\x01 \x01(\v2 .loop.internal.pb.evm.ABIPayloadR\x04data\"A\n" +
	"\x18GetTransactionFeeRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\"M\n" +
	"\x16GetTransactionFeeReply\x123\n" +
	"\x0etransation_fee\x18\x01 \x01(\v2\f.loop.BigIntR\rtransationFee\"Y\n" +
	"\x11FilterLogsRequest\x12D\n" +
	"\ffilter_query\x18\x01 \x01(\v2!.loop.internal.pb.evm.FilterQueryR\vfilterQuery\"@\n" +
	"\x0fFilterLogsReply\x12-\n" +
	"\x04logs\x18\x01 \x03(\v2\x19.loop.internal.pb.evm.LogR\x04logs\"|\n" +
	"\x10BalanceAtRequest\x127\n" +
	"\aaccount\x18\x01 \x01(\v2\x1d.loop.internal.pb.evm.AddressR\aaccount\x12/\n" +
	"\fblock_number\x18\x02 \x01(\v2\f.loop.BigIntR\vblockNumber\"8\n" +
	"\x0eBalanceAtReply\x12&\n" +
	"\abalance\x18\x01 \x01(\v2\f.loop.BigIntR\abalance\"E\n" +
	"\x12EstimateGasRequest\x12/\n" +
	"\x03msg\x18\x01 \x01(\v2\x1d.loop.internal.pb.evm.CallMsgR\x03msg\"$\n" +
	"\x10EstimateGasReply\x12\x10\n" +
	"\x03gas\x18\x01 \x01(\x04R\x03gas\"M\n" +
	"\x1bGetTransactionByHashRequest\x12.\n" +
	"\x04hash\x18\x01 \x01(\v2\x1a.loop.internal.pb.evm.HashR\x04hash\"`\n" +
	"\x19GetTransactionByHashReply\x12C\n" +
	"\vtransaction\x18\x01 \x01(\v2!.loop.internal.pb.evm.TransactionR\vtransaction\"C\n" +
	"\x11GetReceiptRequest\x12.\n" +
	"\x04hash\x18\x01 \x01(\v2\x1a.loop.internal.pb.evm.HashR\x04hash\"J\n" +
	"\x0fGetReceiptReply\x127\n" +
	"\areceipt\x18\x01 \x01(\v2\x1d.loop.internal.pb.evm.ReceiptR\areceipt\"T\n" +
	"\x1aRegisterLogTrackingRequest\x126\n" +
	"\x06filter\x18\x01 \x01(\v2\x1e.loop.internal.pb.evm.LPFilterR\x06filter\"?\n" +
	"\x1cUnregisterLogTrackingRequest\x12\x1f\n" +
	"\vfilter_name\x18\x01 \x01(\tR\n" +
	"filterName\"K\n" +
	"\x17QueryTrackedLogsRequest\x120\n" +
	"\n" +
	"expression\x18\x01 \x03(\v2\x10.loop.ExpressionR\n" +
	"expression\"F\n" +
	"\x15QueryTrackedLogsReply\x12-\n" +
	"\x04logs\x18\x01 \x03(\v2\x19.loop.internal.pb.evm.LogR\x04logs2\xd4\t\n" +
	"\x03EVM\x12s\n" +
	"\x11GetTransactionFee\x12..loop.internal.pb.evm.GetTransactionFeeRequest\x1a,.loop.internal.pb.evm.GetTransactionFeeReply\"\x00\x12b\n" +
	"\fCallContract\x12).loop.internal.pb.evm.CallContractRequest\x1a'.loop.internal.pb.evm.CallContractReply\x12\\\n" +
	"\n" +
	"FilterLogs\x12'.loop.internal.pb.evm.FilterLogsRequest\x1a%.loop.internal.pb.evm.FilterLogsReply\x12Y\n" +
	"\tBalanceAt\x12&.loop.internal.pb.evm.BalanceAtRequest\x1a$.loop.internal.pb.evm.BalanceAtReply\x12_\n" +
	"\vEstimateGas\x12(.loop.internal.pb.evm.EstimateGasRequest\x1a&.loop.internal.pb.evm.EstimateGasReply\x12z\n" +
	"\x14GetTransactionByHash\x121.loop.internal.pb.evm.GetTransactionByHashRequest\x1a/.loop.internal.pb.evm.GetTransactionByHashReply\x12g\n" +
	"\x15GetTransactionReceipt\x12'.loop.internal.pb.evm.GetReceiptRequest\x1a%.loop.internal.pb.evm.GetReceiptReply\x12c\n" +
	"\x16LatestAndFinalizedHead\x12\x16.google.protobuf.Empty\x1a1.loop.internal.pb.evm.LatestAndFinalizedHeadReply\x12n\n" +
	"\x10QueryTrackedLogs\x12-.loop.internal.pb.evm.QueryTrackedLogsRequest\x1a+.loop.internal.pb.evm.QueryTrackedLogsReply\x12_\n" +
	"\x13RegisterLogTracking\x120.loop.internal.pb.evm.RegisterLogTrackingRequest\x1a\x16.google.protobuf.Empty\x12c\n" +
	"\x15UnregisterLogTracking\x122.loop.internal.pb.evm.UnregisterLogTrackingRequest\x1a\x16.google.protobuf.Empty\x12Z\n" +
	"\x14GetTransactionStatus\x12!.loop.GetTransactionStatusRequest\x1a\x1f.loop.GetTransactionStatusReplyBMZKgithub.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/evm;evmpbb\x06proto3"

var (
	file_evm_proto_rawDescOnce sync.Once
	file_evm_proto_rawDescData []byte
)

func file_evm_proto_rawDescGZIP() []byte {
	file_evm_proto_rawDescOnce.Do(func() {
		file_evm_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_evm_proto_rawDesc), len(file_evm_proto_rawDesc)))
	})
	return file_evm_proto_rawDescData
}

var file_evm_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_evm_proto_goTypes = []any{
	(*Address)(nil),                        // 0: loop.internal.pb.evm.Address
	(*Hash)(nil),                           // 1: loop.internal.pb.evm.Hash
	(*ABIPayload)(nil),                     // 2: loop.internal.pb.evm.ABIPayload
	(*CallMsg)(nil),                        // 3: loop.internal.pb.evm.CallMsg
	(*Topics)(nil),                         // 4: loop.internal.pb.evm.Topics
	(*Log)(nil),                            // 5: loop.internal.pb.evm.Log
	(*FilterQuery)(nil),                    // 6: loop.internal.pb.evm.FilterQuery
	(*Transaction)(nil),                    // 7: loop.internal.pb.evm.Transaction
	(*Receipt)(nil),                        // 8: loop.internal.pb.evm.Receipt
	(*LPFilter)(nil),                       // 9: loop.internal.pb.evm.LPFilter
	(*Head)(nil),                           // 10: loop.internal.pb.evm.Head
	(*LatestAndFinalizedHeadReply)(nil),    // 11: loop.internal.pb.evm.LatestAndFinalizedHeadReply
	(*CallContractRequest)(nil),            // 12: loop.internal.pb.evm.CallContractRequest
	(*CallContractReply)(nil),              // 13: loop.internal.pb.evm.CallContractReply
	(*GetTransactionFeeRequest)(nil),       // 14: loop.internal.pb.evm.GetTransactionFeeRequest
	(*GetTransactionFeeReply)(nil),         // 15: loop.internal.pb.evm.GetTransactionFeeReply
	(*FilterLogsRequest)(nil),              // 16: loop.internal.pb.evm.FilterLogsRequest
	(*FilterLogsReply)(nil),                // 17: loop.internal.pb.evm.FilterLogsReply
	(*BalanceAtRequest)(nil),               // 18: loop.internal.pb.evm.BalanceAtRequest
	(*BalanceAtReply)(nil),                 // 19: loop.internal.pb.evm.BalanceAtReply
	(*EstimateGasRequest)(nil),             // 20: loop.internal.pb.evm.EstimateGasRequest
	(*EstimateGasReply)(nil),               // 21: loop.internal.pb.evm.EstimateGasReply
	(*GetTransactionByHashRequest)(nil),    // 22: loop.internal.pb.evm.GetTransactionByHashRequest
	(*GetTransactionByHashReply)(nil),      // 23: loop.internal.pb.evm.GetTransactionByHashReply
	(*GetReceiptRequest)(nil),              // 24: loop.internal.pb.evm.GetReceiptRequest
	(*GetReceiptReply)(nil),                // 25: loop.internal.pb.evm.GetReceiptReply
	(*RegisterLogTrackingRequest)(nil),     // 26: loop.internal.pb.evm.RegisterLogTrackingRequest
	(*UnregisterLogTrackingRequest)(nil),   // 27: loop.internal.pb.evm.UnregisterLogTrackingRequest
	(*QueryTrackedLogsRequest)(nil),        // 28: loop.internal.pb.evm.QueryTrackedLogsRequest
	(*QueryTrackedLogsReply)(nil),          // 29: loop.internal.pb.evm.QueryTrackedLogsReply
	(*pb.BigInt)(nil),                      // 30: loop.BigInt
	(*pb.Expression)(nil),                  // 31: loop.Expression
	(*emptypb.Empty)(nil),                  // 32: google.protobuf.Empty
	(*pb.GetTransactionStatusRequest)(nil), // 33: loop.GetTransactionStatusRequest
	(*pb.GetTransactionStatusReply)(nil),   // 34: loop.GetTransactionStatusReply
}
var file_evm_proto_depIdxs = []int32{
	0,  // 0: loop.internal.pb.evm.CallMsg.from:type_name -> loop.internal.pb.evm.Address
	0,  // 1: loop.internal.pb.evm.CallMsg.to:type_name -> loop.internal.pb.evm.Address
	2,  // 2: loop.internal.pb.evm.CallMsg.data:type_name -> loop.internal.pb.evm.ABIPayload
	1,  // 3: loop.internal.pb.evm.Topics.topic:type_name -> loop.internal.pb.evm.Hash
	0,  // 4: loop.internal.pb.evm.Log.address:type_name -> loop.internal.pb.evm.Address
	1,  // 5: loop.internal.pb.evm.Log.topics:type_name -> loop.internal.pb.evm.Hash
	1,  // 6: loop.internal.pb.evm.Log.tx_hash:type_name -> loop.internal.pb.evm.Hash
	1,  // 7: loop.internal.pb.evm.Log.block_hash:type_name -> loop.internal.pb.evm.Hash
	2,  // 8: loop.internal.pb.evm.Log.data:type_name -> loop.internal.pb.evm.ABIPayload
	1,  // 9: loop.internal.pb.evm.Log.eventSig:type_name -> loop.internal.pb.evm.Hash
	30, // 10: loop.internal.pb.evm.Log.block_number:type_name -> loop.BigInt
	1,  // 11: loop.internal.pb.evm.FilterQuery.block_hash:type_name -> loop.internal.pb.evm.Hash
	30, // 12: loop.internal.pb.evm.FilterQuery.fromBlock:type_name -> loop.BigInt
	30, // 13: loop.internal.pb.evm.FilterQuery.toBlock:type_name -> loop.BigInt
	0,  // 14: loop.internal.pb.evm.FilterQuery.addresses:type_name -> loop.internal.pb.evm.Address
	4,  // 15: loop.internal.pb.evm.FilterQuery.topics:type_name -> loop.internal.pb.evm.Topics
	0,  // 16: loop.internal.pb.evm.Transaction.to:type_name -> loop.internal.pb.evm.Address
	2,  // 17: loop.internal.pb.evm.Transaction.data:type_name -> loop.internal.pb.evm.ABIPayload
	1,  // 18: loop.internal.pb.evm.Transaction.hash:type_name -> loop.internal.pb.evm.Hash
	30, // 19: loop.internal.pb.evm.Transaction.value:type_name -> loop.BigInt
	30, // 20: loop.internal.pb.evm.Transaction.gas_price:type_name -> loop.BigInt
	1,  // 21: loop.internal.pb.evm.Receipt.block_hash:type_name -> loop.internal.pb.evm.Hash
	5,  // 22: loop.internal.pb.evm.Receipt.logs:type_name -> loop.internal.pb.evm.Log
	1,  // 23: loop.internal.pb.evm.Receipt.tx_hash:type_name -> loop.internal.pb.evm.Hash
	30, // 24: loop.internal.pb.evm.Receipt.effective_gas_price:type_name -> loop.BigInt
	30, // 25: loop.internal.pb.evm.Receipt.block_number:type_name -> loop.BigInt
	0,  // 26: loop.internal.pb.evm.Receipt.contract_address:type_name -> loop.internal.pb.evm.Address
	0,  // 27: loop.internal.pb.evm.LPFilter.addresses:type_name -> loop.internal.pb.evm.Address
	1,  // 28: loop.internal.pb.evm.LPFilter.event_sigs:type_name -> loop.internal.pb.evm.Hash
	1,  // 29: loop.internal.pb.evm.LPFilter.topic2:type_name -> loop.internal.pb.evm.Hash
	1,  // 30: loop.internal.pb.evm.LPFilter.topic3:type_name -> loop.internal.pb.evm.Hash
	1,  // 31: loop.internal.pb.evm.LPFilter.topic4:type_name -> loop.internal.pb.evm.Hash
	30, // 32: loop.internal.pb.evm.Head.block_number:type_name -> loop.BigInt
	1,  // 33: loop.internal.pb.evm.Head.hash:type_name -> loop.internal.pb.evm.Hash
	1,  // 34: loop.internal.pb.evm.Head.parent_hash:type_name -> loop.internal.pb.evm.Hash
	10, // 35: loop.internal.pb.evm.LatestAndFinalizedHeadReply.latest:type_name -> loop.internal.pb.evm.Head
	10, // 36: loop.internal.pb.evm.LatestAndFinalizedHeadReply.finalized:type_name -> loop.internal.pb.evm.Head
	3,  // 37: loop.internal.pb.evm.CallContractRequest.call:type_name -> loop.internal.pb.evm.CallMsg
	30, // 38: loop.internal.pb.evm.CallContractRequest.block_number:type_name -> loop.BigInt
	2,  // 39: loop.internal.pb.evm.CallContractReply.data:type_name -> loop.internal.pb.evm.ABIPayload
	30, // 40: loop.internal.pb.evm.GetTransactionFeeReply.transation_fee:type_name -> loop.BigInt
	6,  // 41: loop.internal.pb.evm.FilterLogsRequest.filter_query:type_name -> loop.internal.pb.evm.FilterQuery
	5,  // 42: loop.internal.pb.evm.FilterLogsReply.logs:type_name -> loop.internal.pb.evm.Log
	0,  // 43: loop.internal.pb.evm.BalanceAtRequest.account:type_name -> loop.internal.pb.evm.Address
	30, // 44: loop.internal.pb.evm.BalanceAtRequest.block_number:type_name -> loop.BigInt
	30, // 45: loop.internal.pb.evm.BalanceAtReply.balance:type_name -> loop.BigInt
	3,  // 46: loop.internal.pb.evm.EstimateGasRequest.msg:type_name -> loop.internal.pb.evm.CallMsg
	1,  // 47: loop.internal.pb.evm.GetTransactionByHashRequest.hash:type_name -> loop.internal.pb.evm.Hash
	7,  // 48: loop.internal.pb.evm.GetTransactionByHashReply.transaction:type_name -> loop.internal.pb.evm.Transaction
	1,  // 49: loop.internal.pb.evm.GetReceiptRequest.hash:type_name -> loop.internal.pb.evm.Hash
	8,  // 50: loop.internal.pb.evm.GetReceiptReply.receipt:type_name -> loop.internal.pb.evm.Receipt
	9,  // 51: loop.internal.pb.evm.RegisterLogTrackingRequest.filter:type_name -> loop.internal.pb.evm.LPFilter
	31, // 52: loop.internal.pb.evm.QueryTrackedLogsRequest.expression:type_name -> loop.Expression
	5,  // 53: loop.internal.pb.evm.QueryTrackedLogsReply.logs:type_name -> loop.internal.pb.evm.Log
	14, // 54: loop.internal.pb.evm.EVM.GetTransactionFee:input_type -> loop.internal.pb.evm.GetTransactionFeeRequest
	12, // 55: loop.internal.pb.evm.EVM.CallContract:input_type -> loop.internal.pb.evm.CallContractRequest
	16, // 56: loop.internal.pb.evm.EVM.FilterLogs:input_type -> loop.internal.pb.evm.FilterLogsRequest
	18, // 57: loop.internal.pb.evm.EVM.BalanceAt:input_type -> loop.internal.pb.evm.BalanceAtRequest
	20, // 58: loop.internal.pb.evm.EVM.EstimateGas:input_type -> loop.internal.pb.evm.EstimateGasRequest
	22, // 59: loop.internal.pb.evm.EVM.GetTransactionByHash:input_type -> loop.internal.pb.evm.GetTransactionByHashRequest
	24, // 60: loop.internal.pb.evm.EVM.GetTransactionReceipt:input_type -> loop.internal.pb.evm.GetReceiptRequest
	32, // 61: loop.internal.pb.evm.EVM.LatestAndFinalizedHead:input_type -> google.protobuf.Empty
	28, // 62: loop.internal.pb.evm.EVM.QueryTrackedLogs:input_type -> loop.internal.pb.evm.QueryTrackedLogsRequest
	26, // 63: loop.internal.pb.evm.EVM.RegisterLogTracking:input_type -> loop.internal.pb.evm.RegisterLogTrackingRequest
	27, // 64: loop.internal.pb.evm.EVM.UnregisterLogTracking:input_type -> loop.internal.pb.evm.UnregisterLogTrackingRequest
	33, // 65: loop.internal.pb.evm.EVM.GetTransactionStatus:input_type -> loop.GetTransactionStatusRequest
	15, // 66: loop.internal.pb.evm.EVM.GetTransactionFee:output_type -> loop.internal.pb.evm.GetTransactionFeeReply
	13, // 67: loop.internal.pb.evm.EVM.CallContract:output_type -> loop.internal.pb.evm.CallContractReply
	17, // 68: loop.internal.pb.evm.EVM.FilterLogs:output_type -> loop.internal.pb.evm.FilterLogsReply
	19, // 69: loop.internal.pb.evm.EVM.BalanceAt:output_type -> loop.internal.pb.evm.BalanceAtReply
	21, // 70: loop.internal.pb.evm.EVM.EstimateGas:output_type -> loop.internal.pb.evm.EstimateGasReply
	23, // 71: loop.internal.pb.evm.EVM.GetTransactionByHash:output_type -> loop.internal.pb.evm.GetTransactionByHashReply
	25, // 72: loop.internal.pb.evm.EVM.GetTransactionReceipt:output_type -> loop.internal.pb.evm.GetReceiptReply
	11, // 73: loop.internal.pb.evm.EVM.LatestAndFinalizedHead:output_type -> loop.internal.pb.evm.LatestAndFinalizedHeadReply
	29, // 74: loop.internal.pb.evm.EVM.QueryTrackedLogs:output_type -> loop.internal.pb.evm.QueryTrackedLogsReply
	32, // 75: loop.internal.pb.evm.EVM.RegisterLogTracking:output_type -> google.protobuf.Empty
	32, // 76: loop.internal.pb.evm.EVM.UnregisterLogTracking:output_type -> google.protobuf.Empty
	34, // 77: loop.internal.pb.evm.EVM.GetTransactionStatus:output_type -> loop.GetTransactionStatusReply
	66, // [66:78] is the sub-list for method output_type
	54, // [54:66] is the sub-list for method input_type
	54, // [54:54] is the sub-list for extension type_name
	54, // [54:54] is the sub-list for extension extendee
	0,  // [0:54] is the sub-list for field type_name
}

func init() { file_evm_proto_init() }
func file_evm_proto_init() {
	if File_evm_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_evm_proto_rawDesc), len(file_evm_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_evm_proto_goTypes,
		DependencyIndexes: file_evm_proto_depIdxs,
		MessageInfos:      file_evm_proto_msgTypes,
	}.Build()
	File_evm_proto = out.File
	file_evm_proto_goTypes = nil
	file_evm_proto_depIdxs = nil
}
