// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: mercury_loop.proto

// note: the generate.go file in this dir specifies the import path of the relative proto files

package mercurypb

import (
	pb "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb"
	v1 "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/mercury/v1"
	v2 "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/mercury/v2"
	v3 "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/mercury/v3"
	v4 "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/mercury/v4"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NewMercuryV4FactoryRequest is a grpc wrapper for the input to  [github.com/smartcontractkit/chainlink-data-streams/mercury/v4/NewFactory].
type NewMercuryV4FactoryRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MercuryProviderID uint32                 `protobuf:"varint,1,opt,name=mercuryProviderID,proto3" json:"mercuryProviderID,omitempty"`
	DataSourceV4ID    uint32                 `protobuf:"varint,2,opt,name=dataSourceV4ID,proto3" json:"dataSourceV4ID,omitempty"` // id of the data source server for this factory instance
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NewMercuryV4FactoryRequest) Reset() {
	*x = NewMercuryV4FactoryRequest{}
	mi := &file_mercury_loop_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMercuryV4FactoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMercuryV4FactoryRequest) ProtoMessage() {}

func (x *NewMercuryV4FactoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMercuryV4FactoryRequest.ProtoReflect.Descriptor instead.
func (*NewMercuryV4FactoryRequest) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{0}
}

func (x *NewMercuryV4FactoryRequest) GetMercuryProviderID() uint32 {
	if x != nil {
		return x.MercuryProviderID
	}
	return 0
}

func (x *NewMercuryV4FactoryRequest) GetDataSourceV4ID() uint32 {
	if x != nil {
		return x.DataSourceV4ID
	}
	return 0
}

// NewMercuryV4FactoryReply tracks the factory identifier used for brokering connecitons.
type NewMercuryV4FactoryReply struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MercuryV4FactoryID uint32                 `protobuf:"varint,1,opt,name=mercuryV4FactoryID,proto3" json:"mercuryV4FactoryID,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NewMercuryV4FactoryReply) Reset() {
	*x = NewMercuryV4FactoryReply{}
	mi := &file_mercury_loop_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMercuryV4FactoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMercuryV4FactoryReply) ProtoMessage() {}

func (x *NewMercuryV4FactoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMercuryV4FactoryReply.ProtoReflect.Descriptor instead.
func (*NewMercuryV4FactoryReply) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{1}
}

func (x *NewMercuryV4FactoryReply) GetMercuryV4FactoryID() uint32 {
	if x != nil {
		return x.MercuryV4FactoryID
	}
	return 0
}

// NewMercuryV3FactoryRequest is a grpc wrapper for the input to  [github.com/smartcontractkit/chainlink-data-streams/mercury/v3/NewFactory].
type NewMercuryV3FactoryRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MercuryProviderID uint32                 `protobuf:"varint,1,opt,name=mercuryProviderID,proto3" json:"mercuryProviderID,omitempty"`
	DataSourceV3ID    uint32                 `protobuf:"varint,2,opt,name=dataSourceV3ID,proto3" json:"dataSourceV3ID,omitempty"` // id of the data source server for this factory instance
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NewMercuryV3FactoryRequest) Reset() {
	*x = NewMercuryV3FactoryRequest{}
	mi := &file_mercury_loop_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMercuryV3FactoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMercuryV3FactoryRequest) ProtoMessage() {}

func (x *NewMercuryV3FactoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMercuryV3FactoryRequest.ProtoReflect.Descriptor instead.
func (*NewMercuryV3FactoryRequest) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{2}
}

func (x *NewMercuryV3FactoryRequest) GetMercuryProviderID() uint32 {
	if x != nil {
		return x.MercuryProviderID
	}
	return 0
}

func (x *NewMercuryV3FactoryRequest) GetDataSourceV3ID() uint32 {
	if x != nil {
		return x.DataSourceV3ID
	}
	return 0
}

// NewMercuryV3FactoryReply tracks the factory identifier used for brokering connecitons.
type NewMercuryV3FactoryReply struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MercuryV3FactoryID uint32                 `protobuf:"varint,1,opt,name=mercuryV3FactoryID,proto3" json:"mercuryV3FactoryID,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NewMercuryV3FactoryReply) Reset() {
	*x = NewMercuryV3FactoryReply{}
	mi := &file_mercury_loop_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMercuryV3FactoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMercuryV3FactoryReply) ProtoMessage() {}

func (x *NewMercuryV3FactoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMercuryV3FactoryReply.ProtoReflect.Descriptor instead.
func (*NewMercuryV3FactoryReply) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{3}
}

func (x *NewMercuryV3FactoryReply) GetMercuryV3FactoryID() uint32 {
	if x != nil {
		return x.MercuryV3FactoryID
	}
	return 0
}

// NewMercuryV1FactoryRequest is a grpc wrapper for the input to  [github.com/smartcontractkit/chainlink-data-streams/mercury/v1/NewFactory].
type NewMercuryV1FactoryRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MercuryProviderID uint32                 `protobuf:"varint,1,opt,name=mercuryProviderID,proto3" json:"mercuryProviderID,omitempty"`
	DataSourceV1ID    uint32                 `protobuf:"varint,2,opt,name=dataSourceV1ID,proto3" json:"dataSourceV1ID,omitempty"` // id of the data source server for this factory instance
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NewMercuryV1FactoryRequest) Reset() {
	*x = NewMercuryV1FactoryRequest{}
	mi := &file_mercury_loop_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMercuryV1FactoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMercuryV1FactoryRequest) ProtoMessage() {}

func (x *NewMercuryV1FactoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMercuryV1FactoryRequest.ProtoReflect.Descriptor instead.
func (*NewMercuryV1FactoryRequest) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{4}
}

func (x *NewMercuryV1FactoryRequest) GetMercuryProviderID() uint32 {
	if x != nil {
		return x.MercuryProviderID
	}
	return 0
}

func (x *NewMercuryV1FactoryRequest) GetDataSourceV1ID() uint32 {
	if x != nil {
		return x.DataSourceV1ID
	}
	return 0
}

// NewMercuryV1FactoryReply tracks the factory identifier used for brokering connecitons.
type NewMercuryV1FactoryReply struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MercuryV1FactoryID uint32                 `protobuf:"varint,1,opt,name=mercuryV1FactoryID,proto3" json:"mercuryV1FactoryID,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NewMercuryV1FactoryReply) Reset() {
	*x = NewMercuryV1FactoryReply{}
	mi := &file_mercury_loop_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMercuryV1FactoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMercuryV1FactoryReply) ProtoMessage() {}

func (x *NewMercuryV1FactoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMercuryV1FactoryReply.ProtoReflect.Descriptor instead.
func (*NewMercuryV1FactoryReply) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{5}
}

func (x *NewMercuryV1FactoryReply) GetMercuryV1FactoryID() uint32 {
	if x != nil {
		return x.MercuryV1FactoryID
	}
	return 0
}

// NewMercuryV2FactoryRequest is a grpc wrapper for the input to  [github.com/smartcontractkit/chainlink-data-streams/mercury/v2/NewFactory].
type NewMercuryV2FactoryRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MercuryProviderID uint32                 `protobuf:"varint,1,opt,name=mercuryProviderID,proto3" json:"mercuryProviderID,omitempty"`
	DataSourceV2ID    uint32                 `protobuf:"varint,2,opt,name=dataSourceV2ID,proto3" json:"dataSourceV2ID,omitempty"` // id of the data source server for this factory instance
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NewMercuryV2FactoryRequest) Reset() {
	*x = NewMercuryV2FactoryRequest{}
	mi := &file_mercury_loop_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMercuryV2FactoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMercuryV2FactoryRequest) ProtoMessage() {}

func (x *NewMercuryV2FactoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMercuryV2FactoryRequest.ProtoReflect.Descriptor instead.
func (*NewMercuryV2FactoryRequest) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{6}
}

func (x *NewMercuryV2FactoryRequest) GetMercuryProviderID() uint32 {
	if x != nil {
		return x.MercuryProviderID
	}
	return 0
}

func (x *NewMercuryV2FactoryRequest) GetDataSourceV2ID() uint32 {
	if x != nil {
		return x.DataSourceV2ID
	}
	return 0
}

// NewMercuryV2FactoryReply tracks the factory identifier used for brokering connecitons.
type NewMercuryV2FactoryReply struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MercuryV2FactoryID uint32                 `protobuf:"varint,1,opt,name=mercuryV2FactoryID,proto3" json:"mercuryV2FactoryID,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NewMercuryV2FactoryReply) Reset() {
	*x = NewMercuryV2FactoryReply{}
	mi := &file_mercury_loop_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewMercuryV2FactoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMercuryV2FactoryReply) ProtoMessage() {}

func (x *NewMercuryV2FactoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMercuryV2FactoryReply.ProtoReflect.Descriptor instead.
func (*NewMercuryV2FactoryReply) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{7}
}

func (x *NewMercuryV2FactoryReply) GetMercuryV2FactoryID() uint32 {
	if x != nil {
		return x.MercuryV2FactoryID
	}
	return 0
}

// OnchainConfig is a gRPC adapter for the OnchainConfig struct [pkg/types/mercury/OnchainConfig].
type OnchainConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Min           *pb.BigInt             `protobuf:"bytes,1,opt,name=min,proto3" json:"min,omitempty"`
	Max           *pb.BigInt             `protobuf:"bytes,2,opt,name=max,proto3" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnchainConfig) Reset() {
	*x = OnchainConfig{}
	mi := &file_mercury_loop_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnchainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnchainConfig) ProtoMessage() {}

func (x *OnchainConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnchainConfig.ProtoReflect.Descriptor instead.
func (*OnchainConfig) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{8}
}

func (x *OnchainConfig) GetMin() *pb.BigInt {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *OnchainConfig) GetMax() *pb.BigInt {
	if x != nil {
		return x.Max
	}
	return nil
}

// EncodeOnchainConfigRequest is gRPC adapter for the inputs arguments of [pkg/types/mercury/OnchainConfig.Encode].
type EncodeOnchainConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OnchainConfig *OnchainConfig         `protobuf:"bytes,1,opt,name=onchainConfig,proto3" json:"onchainConfig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncodeOnchainConfigRequest) Reset() {
	*x = EncodeOnchainConfigRequest{}
	mi := &file_mercury_loop_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncodeOnchainConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeOnchainConfigRequest) ProtoMessage() {}

func (x *EncodeOnchainConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeOnchainConfigRequest.ProtoReflect.Descriptor instead.
func (*EncodeOnchainConfigRequest) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{9}
}

func (x *EncodeOnchainConfigRequest) GetOnchainConfig() *OnchainConfig {
	if x != nil {
		return x.OnchainConfig
	}
	return nil
}

// EncodeOnchainConfigReply is gRPC adapter for the return values of [pkg/types/mercury/OnchainConfig.Encode].
type EncodeOnchainConfigReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OnchainConfig []byte                 `protobuf:"bytes,1,opt,name=onchainConfig,proto3" json:"onchainConfig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncodeOnchainConfigReply) Reset() {
	*x = EncodeOnchainConfigReply{}
	mi := &file_mercury_loop_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncodeOnchainConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodeOnchainConfigReply) ProtoMessage() {}

func (x *EncodeOnchainConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodeOnchainConfigReply.ProtoReflect.Descriptor instead.
func (*EncodeOnchainConfigReply) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{10}
}

func (x *EncodeOnchainConfigReply) GetOnchainConfig() []byte {
	if x != nil {
		return x.OnchainConfig
	}
	return nil
}

// DecodeOnchainConfigRequest is gRPC adapter for the inputs arguments of [pkg/types/mercury/OnchainConfig.Decode].
type DecodeOnchainConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OnchainConfig []byte                 `protobuf:"bytes,1,opt,name=onchainConfig,proto3" json:"onchainConfig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodeOnchainConfigRequest) Reset() {
	*x = DecodeOnchainConfigRequest{}
	mi := &file_mercury_loop_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodeOnchainConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeOnchainConfigRequest) ProtoMessage() {}

func (x *DecodeOnchainConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeOnchainConfigRequest.ProtoReflect.Descriptor instead.
func (*DecodeOnchainConfigRequest) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{11}
}

func (x *DecodeOnchainConfigRequest) GetOnchainConfig() []byte {
	if x != nil {
		return x.OnchainConfig
	}
	return nil
}

// DecodeOnchainConfigReply has is gRPC adapter for the return values of [pkg/types/mercury/OnchainConfig.Decode].
type DecodeOnchainConfigReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OnchainConfig *OnchainConfig         `protobuf:"bytes,1,opt,name=onchainConfig,proto3" json:"onchainConfig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecodeOnchainConfigReply) Reset() {
	*x = DecodeOnchainConfigReply{}
	mi := &file_mercury_loop_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecodeOnchainConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecodeOnchainConfigReply) ProtoMessage() {}

func (x *DecodeOnchainConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecodeOnchainConfigReply.ProtoReflect.Descriptor instead.
func (*DecodeOnchainConfigReply) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{12}
}

func (x *DecodeOnchainConfigReply) GetOnchainConfig() *OnchainConfig {
	if x != nil {
		return x.OnchainConfig
	}
	return nil
}

// FetchInitialMaxFinalizedBlockNumberRequest is gRPC adapter for [pkg/types/mercury/ServerFetcher.FetchInitialMaxFinalizedBlockNumber].
type FetchInitialMaxFinalizedBlockNumberRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchInitialMaxFinalizedBlockNumberRequest) Reset() {
	*x = FetchInitialMaxFinalizedBlockNumberRequest{}
	mi := &file_mercury_loop_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchInitialMaxFinalizedBlockNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchInitialMaxFinalizedBlockNumberRequest) ProtoMessage() {}

func (x *FetchInitialMaxFinalizedBlockNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchInitialMaxFinalizedBlockNumberRequest.ProtoReflect.Descriptor instead.
func (*FetchInitialMaxFinalizedBlockNumberRequest) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{13}
}

// FetchInitialMaxFinalizedBlockNumberReply is gRPC adapter for [pkg/types/mercury/ServerFetcher.FetchInitialMaxFinalizedBlockNumber].
type FetchInitialMaxFinalizedBlockNumberReply struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	InitialMaxFinalizedBlockNumber int64                  `protobuf:"varint,1,opt,name=initialMaxFinalizedBlockNumber,proto3" json:"initialMaxFinalizedBlockNumber,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *FetchInitialMaxFinalizedBlockNumberReply) Reset() {
	*x = FetchInitialMaxFinalizedBlockNumberReply{}
	mi := &file_mercury_loop_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchInitialMaxFinalizedBlockNumberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchInitialMaxFinalizedBlockNumberReply) ProtoMessage() {}

func (x *FetchInitialMaxFinalizedBlockNumberReply) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchInitialMaxFinalizedBlockNumberReply.ProtoReflect.Descriptor instead.
func (*FetchInitialMaxFinalizedBlockNumberReply) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{14}
}

func (x *FetchInitialMaxFinalizedBlockNumberReply) GetInitialMaxFinalizedBlockNumber() int64 {
	if x != nil {
		return x.InitialMaxFinalizedBlockNumber
	}
	return 0
}

// LatestPriceRequest is gRPC adapter for [pkg/types/mercury/ServerFetcher.LatestPrice].
type LatestPriceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FeedID        []byte                 `protobuf:"bytes,1,opt,name=feedID,proto3" json:"feedID,omitempty"` // WARNING: this must be [32]byte in ServerFetcher interface
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestPriceRequest) Reset() {
	*x = LatestPriceRequest{}
	mi := &file_mercury_loop_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestPriceRequest) ProtoMessage() {}

func (x *LatestPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestPriceRequest.ProtoReflect.Descriptor instead.
func (*LatestPriceRequest) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{15}
}

func (x *LatestPriceRequest) GetFeedID() []byte {
	if x != nil {
		return x.FeedID
	}
	return nil
}

// LatestPriceReply is gRPC adapter for [pkg/types/mercury/ServerFetcher.LatestPrice].
type LatestPriceReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LatestPrice   *pb.BigInt             `protobuf:"bytes,1,opt,name=latestPrice,proto3" json:"latestPrice,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestPriceReply) Reset() {
	*x = LatestPriceReply{}
	mi := &file_mercury_loop_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestPriceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestPriceReply) ProtoMessage() {}

func (x *LatestPriceReply) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestPriceReply.ProtoReflect.Descriptor instead.
func (*LatestPriceReply) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{16}
}

func (x *LatestPriceReply) GetLatestPrice() *pb.BigInt {
	if x != nil {
		return x.LatestPrice
	}
	return nil
}

// LatestTimestampRequest is gRPC adapter for [pkg/types/mercury/ServerFetcher.LatestTimestamp].
type LatestTimestampRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestTimestampRequest) Reset() {
	*x = LatestTimestampRequest{}
	mi := &file_mercury_loop_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestTimestampRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestTimestampRequest) ProtoMessage() {}

func (x *LatestTimestampRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestTimestampRequest.ProtoReflect.Descriptor instead.
func (*LatestTimestampRequest) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{17}
}

// LatestTimestampReply is gRPC adapter for [pkg/types/mercury/ServerFetcher.LatestTimestamp].
type LatestTimestampReply struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	LatestTimestamp int64                  `protobuf:"varint,1,opt,name=latestTimestamp,proto3" json:"latestTimestamp,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LatestTimestampReply) Reset() {
	*x = LatestTimestampReply{}
	mi := &file_mercury_loop_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestTimestampReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestTimestampReply) ProtoMessage() {}

func (x *LatestTimestampReply) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestTimestampReply.ProtoReflect.Descriptor instead.
func (*LatestTimestampReply) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{18}
}

func (x *LatestTimestampReply) GetLatestTimestamp() int64 {
	if x != nil {
		return x.LatestTimestamp
	}
	return 0
}

// Head is gRPC adapter for the Head struct [pkg/types/mercury/MercuryChainReader].
type Head struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Number        uint64                 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Hash          []byte                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Timestamp     uint64                 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Head) Reset() {
	*x = Head{}
	mi := &file_mercury_loop_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Head) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Head) ProtoMessage() {}

func (x *Head) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Head.ProtoReflect.Descriptor instead.
func (*Head) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{19}
}

func (x *Head) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Head) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Head) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// LatestHeadsRequest is gRPC adapter for input arguments to [pkg/types/mercury/MercuryChainReader.LatestHeads].
type LatestHeadsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumHeads      int64                  `protobuf:"varint,1,opt,name=numHeads,proto3" json:"numHeads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestHeadsRequest) Reset() {
	*x = LatestHeadsRequest{}
	mi := &file_mercury_loop_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestHeadsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestHeadsRequest) ProtoMessage() {}

func (x *LatestHeadsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestHeadsRequest.ProtoReflect.Descriptor instead.
func (*LatestHeadsRequest) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{20}
}

func (x *LatestHeadsRequest) GetNumHeads() int64 {
	if x != nil {
		return x.NumHeads
	}
	return 0
}

// LatestHeadsReply is gRPC adapter for return arguments to [pkg/types/mercury/MercuryChainReader.LatestHeads].
type LatestHeadsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Heads         []*Head                `protobuf:"bytes,1,rep,name=heads,proto3" json:"heads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatestHeadsReply) Reset() {
	*x = LatestHeadsReply{}
	mi := &file_mercury_loop_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatestHeadsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestHeadsReply) ProtoMessage() {}

func (x *LatestHeadsReply) ProtoReflect() protoreflect.Message {
	mi := &file_mercury_loop_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestHeadsReply.ProtoReflect.Descriptor instead.
func (*LatestHeadsReply) Descriptor() ([]byte, []int) {
	return file_mercury_loop_proto_rawDescGZIP(), []int{21}
}

func (x *LatestHeadsReply) GetHeads() []*Head {
	if x != nil {
		return x.Heads
	}
	return nil
}

var File_mercury_loop_proto protoreflect.FileDescriptor

const file_mercury_loop_proto_rawDesc = "" +
	"\n" +
	"\x12mercury_loop.proto\x12\x18loop.internal.pb.mercury\x1a\rrelayer.proto\x1a\x17v1/reportcodec_v1.proto\x1a\x17v2/reportcodec_v2.proto\x1a\x17v3/reportcodec_v3.proto\x1a\x17v4/reportcodec_v4.proto\"r\n" +
	"\x1aNewMercuryV4FactoryRequest\x12,\n" +
	"\x11mercuryProviderID\x18\x01 \x01(\rR\x11mercuryProviderID\x12&\n" +
	"\x0edataSourceV4ID\x18\x02 \x01(\rR\x0edataSourceV4ID\"J\n" +
	"\x18NewMercuryV4FactoryReply\x12.\n" +
	"\x12mercuryV4FactoryID\x18\x01 \x01(\rR\x12mercuryV4FactoryID\"r\n" +
	"\x1aNewMercuryV3FactoryRequest\x12,\n" +
	"\x11mercuryProviderID\x18\x01 \x01(\rR\x11mercuryProviderID\x12&\n" +
	"\x0edataSourceV3ID\x18\x02 \x01(\rR\x0edataSourceV3ID\"J\n" +
	"\x18NewMercuryV3FactoryReply\x12.\n" +
	"\x12mercuryV3FactoryID\x18\x01 \x01(\rR\x12mercuryV3FactoryID\"r\n" +
	"\x1aNewMercuryV1FactoryRequest\x12,\n" +
	"\x11mercuryProviderID\x18\x01 \x01(\rR\x11mercuryProviderID\x12&\n" +
	"\x0edataSourceV1ID\x18\x02 \x01(\rR\x0edataSourceV1ID\"J\n" +
	"\x18NewMercuryV1FactoryReply\x12.\n" +
	"\x12mercuryV1FactoryID\x18\x01 \x01(\rR\x12mercuryV1FactoryID\"r\n" +
	"\x1aNewMercuryV2FactoryRequest\x12,\n" +
	"\x11mercuryProviderID\x18\x01 \x01(\rR\x11mercuryProviderID\x12&\n" +
	"\x0edataSourceV2ID\x18\x02 \x01(\rR\x0edataSourceV2ID\"J\n" +
	"\x18NewMercuryV2FactoryReply\x12.\n" +
	"\x12mercuryV2FactoryID\x18\x01 \x01(\rR\x12mercuryV2FactoryID\"O\n" +
	"\rOnchainConfig\x12\x1e\n" +
	"\x03min\x18\x01 \x01(\v2\f.loop.BigIntR\x03min\x12\x1e\n" +
	"\x03max\x18\x02 \x01(\v2\f.loop.BigIntR\x03max\"k\n" +
	"\x1aEncodeOnchainConfigRequest\x12M\n" +
	"\ronchainConfig\x18\x01 \x01(\v2'.loop.internal.pb.mercury.OnchainConfigR\ronchainConfig\"@\n" +
	"\x18EncodeOnchainConfigReply\x12$\n" +
	"\ronchainConfig\x18\x01 \x01(\fR\ronchainConfig\"B\n" +
	"\x1aDecodeOnchainConfigRequest\x12$\n" +
	"\ronchainConfig\x18\x01 \x01(\fR\ronchainConfig\"i\n" +
	"\x18DecodeOnchainConfigReply\x12M\n" +
	"\ronchainConfig\x18\x01 \x01(\v2'.loop.internal.pb.mercury.OnchainConfigR\ronchainConfig\",\n" +
	"*FetchInitialMaxFinalizedBlockNumberRequest\"r\n" +
	"(FetchInitialMaxFinalizedBlockNumberReply\x12F\n" +
	"\x1einitialMaxFinalizedBlockNumber\x18\x01 \x01(\x03R\x1einitialMaxFinalizedBlockNumber\",\n" +
	"\x12LatestPriceRequest\x12\x16\n" +
	"\x06feedID\x18\x01 \x01(\fR\x06feedID\"B\n" +
	"\x10LatestPriceReply\x12.\n" +
	"\vlatestPrice\x18\x01 \x01(\v2\f.loop.BigIntR\vlatestPrice\"\x18\n" +
	"\x16LatestTimestampRequest\"@\n" +
	"\x14LatestTimestampReply\x12(\n" +
	"\x0flatestTimestamp\x18\x01 \x01(\x03R\x0flatestTimestamp\"P\n" +
	"\x04Head\x12\x16\n" +
	"\x06number\x18\x01 \x01(\x04R\x06number\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\fR\x04hash\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp\"0\n" +
	"\x12LatestHeadsRequest\x12\x1a\n" +
	"\bnumHeads\x18\x01 \x01(\x03R\bnumHeads\"H\n" +
	"\x10LatestHeadsReply\x124\n" +
	"\x05heads\x18\x01 \x03(\v2\x1e.loop.internal.pb.mercury.HeadR\x05heads2\xa0\x04\n" +
	"\x0eMercuryAdapter\x12\x81\x01\n" +
	"\x13NewMercuryV1Factory\x124.loop.internal.pb.mercury.NewMercuryV1FactoryRequest\x1a2.loop.internal.pb.mercury.NewMercuryV1FactoryReply\"\x00\x12\x81\x01\n" +
	"\x13NewMercuryV2Factory\x124.loop.internal.pb.mercury.NewMercuryV2FactoryRequest\x1a2.loop.internal.pb.mercury.NewMercuryV2FactoryReply\"\x00\x12\x81\x01\n" +
	"\x13NewMercuryV3Factory\x124.loop.internal.pb.mercury.NewMercuryV3FactoryRequest\x1a2.loop.internal.pb.mercury.NewMercuryV3FactoryReply\"\x00\x12\x81\x01\n" +
	"\x13NewMercuryV4Factory\x124.loop.internal.pb.mercury.NewMercuryV4FactoryRequest\x1a2.loop.internal.pb.mercury.NewMercuryV4FactoryReply\"\x002\x80\x02\n" +
	"\x12OnchainConfigCodec\x12t\n" +
	"\x06Encode\x124.loop.internal.pb.mercury.EncodeOnchainConfigRequest\x1a2.loop.internal.pb.mercury.EncodeOnchainConfigReply\"\x00\x12t\n" +
	"\x06Decode\x124.loop.internal.pb.mercury.DecodeOnchainConfigRequest\x1a2.loop.internal.pb.mercury.DecodeOnchainConfigReply\"\x002\xa8\x03\n" +
	"\rReportCodecV4\x12o\n" +
	"\vBuildReport\x12/.loop.internal.pb.mercury.v4.BuildReportRequest\x1a-.loop.internal.pb.mercury.v4.BuildReportReply\"\x00\x12{\n" +
	"\x0fMaxReportLength\x123.loop.internal.pb.mercury.v4.MaxReportLengthRequest\x1a1.loop.internal.pb.mercury.v4.MaxReportLengthReply\"\x00\x12\xa8\x01\n" +
	"\x1eObservationTimestampFromReport\x12B.loop.internal.pb.mercury.v4.ObservationTimestampFromReportRequest\x1a@.loop.internal.pb.mercury.v4.ObservationTimestampFromReportReply\"\x002\xa8\x03\n" +
	"\rReportCodecV3\x12o\n" +
	"\vBuildReport\x12/.loop.internal.pb.mercury.v3.BuildReportRequest\x1a-.loop.internal.pb.mercury.v3.BuildReportReply\"\x00\x12{\n" +
	"\x0fMaxReportLength\x123.loop.internal.pb.mercury.v3.MaxReportLengthRequest\x1a1.loop.internal.pb.mercury.v3.MaxReportLengthReply\"\x00\x12\xa8\x01\n" +
	"\x1eObservationTimestampFromReport\x12B.loop.internal.pb.mercury.v3.ObservationTimestampFromReportRequest\x1a@.loop.internal.pb.mercury.v3.ObservationTimestampFromReportReply\"\x002\x9c\x03\n" +
	"\rReportCodecV1\x12o\n" +
	"\vBuildReport\x12/.loop.internal.pb.mercury.v1.BuildReportRequest\x1a-.loop.internal.pb.mercury.v1.BuildReportReply\"\x00\x12{\n" +
	"\x0fMaxReportLength\x123.loop.internal.pb.mercury.v1.MaxReportLengthRequest\x1a1.loop.internal.pb.mercury.v1.MaxReportLengthReply\"\x00\x12\x9c\x01\n" +
	"\x19CurrentBlockNumFromReport\x12=.loop.internal.pb.mercury.v1.CurrentBlockNumFromReportRequest\x1a>.loop.internal.pb.mercury.v1.CurrentBlockNumFromReportResponse\"\x002\xa8\x03\n" +
	"\rReportCodecV2\x12o\n" +
	"\vBuildReport\x12/.loop.internal.pb.mercury.v2.BuildReportRequest\x1a-.loop.internal.pb.mercury.v2.BuildReportReply\"\x00\x12{\n" +
	"\x0fMaxReportLength\x123.loop.internal.pb.mercury.v2.MaxReportLengthRequest\x1a1.loop.internal.pb.mercury.v2.MaxReportLengthReply\"\x00\x12\xa8\x01\n" +
	"\x1eObservationTimestampFromReport\x12B.loop.internal.pb.mercury.v2.ObservationTimestampFromReportRequest\x1a@.loop.internal.pb.mercury.v2.ObservationTimestampFromReportReply\"\x002\xa5\x03\n" +
	"\rServerFetcher\x12\xb1\x01\n" +
	"#FetchInitialMaxFinalizedBlockNumber\x12D.loop.internal.pb.mercury.FetchInitialMaxFinalizedBlockNumberRequest\x1aB.loop.internal.pb.mercury.FetchInitialMaxFinalizedBlockNumberReply\"\x00\x12i\n" +
	"\vLatestPrice\x12,.loop.internal.pb.mercury.LatestPriceRequest\x1a*.loop.internal.pb.mercury.LatestPriceReply\"\x00\x12u\n" +
	"\x0fLatestTimestamp\x120.loop.internal.pb.mercury.LatestTimestampRequest\x1a..loop.internal.pb.mercury.LatestTimestampReply\"\x002\x7f\n" +
	"\x12MercuryChainReader\x12i\n" +
	"\vLatestHeads\x12,.loop.internal.pb.mercury.LatestHeadsRequest\x1a*.loop.internal.pb.mercury.LatestHeadsReply\"\x00BUZSgithub.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/mercury;mercurypbb\x06proto3"

var (
	file_mercury_loop_proto_rawDescOnce sync.Once
	file_mercury_loop_proto_rawDescData []byte
)

func file_mercury_loop_proto_rawDescGZIP() []byte {
	file_mercury_loop_proto_rawDescOnce.Do(func() {
		file_mercury_loop_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mercury_loop_proto_rawDesc), len(file_mercury_loop_proto_rawDesc)))
	})
	return file_mercury_loop_proto_rawDescData
}

var file_mercury_loop_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_mercury_loop_proto_goTypes = []any{
	(*NewMercuryV4FactoryRequest)(nil),                 // 0: loop.internal.pb.mercury.NewMercuryV4FactoryRequest
	(*NewMercuryV4FactoryReply)(nil),                   // 1: loop.internal.pb.mercury.NewMercuryV4FactoryReply
	(*NewMercuryV3FactoryRequest)(nil),                 // 2: loop.internal.pb.mercury.NewMercuryV3FactoryRequest
	(*NewMercuryV3FactoryReply)(nil),                   // 3: loop.internal.pb.mercury.NewMercuryV3FactoryReply
	(*NewMercuryV1FactoryRequest)(nil),                 // 4: loop.internal.pb.mercury.NewMercuryV1FactoryRequest
	(*NewMercuryV1FactoryReply)(nil),                   // 5: loop.internal.pb.mercury.NewMercuryV1FactoryReply
	(*NewMercuryV2FactoryRequest)(nil),                 // 6: loop.internal.pb.mercury.NewMercuryV2FactoryRequest
	(*NewMercuryV2FactoryReply)(nil),                   // 7: loop.internal.pb.mercury.NewMercuryV2FactoryReply
	(*OnchainConfig)(nil),                              // 8: loop.internal.pb.mercury.OnchainConfig
	(*EncodeOnchainConfigRequest)(nil),                 // 9: loop.internal.pb.mercury.EncodeOnchainConfigRequest
	(*EncodeOnchainConfigReply)(nil),                   // 10: loop.internal.pb.mercury.EncodeOnchainConfigReply
	(*DecodeOnchainConfigRequest)(nil),                 // 11: loop.internal.pb.mercury.DecodeOnchainConfigRequest
	(*DecodeOnchainConfigReply)(nil),                   // 12: loop.internal.pb.mercury.DecodeOnchainConfigReply
	(*FetchInitialMaxFinalizedBlockNumberRequest)(nil), // 13: loop.internal.pb.mercury.FetchInitialMaxFinalizedBlockNumberRequest
	(*FetchInitialMaxFinalizedBlockNumberReply)(nil),   // 14: loop.internal.pb.mercury.FetchInitialMaxFinalizedBlockNumberReply
	(*LatestPriceRequest)(nil),                         // 15: loop.internal.pb.mercury.LatestPriceRequest
	(*LatestPriceReply)(nil),                           // 16: loop.internal.pb.mercury.LatestPriceReply
	(*LatestTimestampRequest)(nil),                     // 17: loop.internal.pb.mercury.LatestTimestampRequest
	(*LatestTimestampReply)(nil),                       // 18: loop.internal.pb.mercury.LatestTimestampReply
	(*Head)(nil),                                       // 19: loop.internal.pb.mercury.Head
	(*LatestHeadsRequest)(nil),                         // 20: loop.internal.pb.mercury.LatestHeadsRequest
	(*LatestHeadsReply)(nil),                           // 21: loop.internal.pb.mercury.LatestHeadsReply
	(*pb.BigInt)(nil),                                  // 22: loop.BigInt
	(*v4.BuildReportRequest)(nil),                      // 23: loop.internal.pb.mercury.v4.BuildReportRequest
	(*v4.MaxReportLengthRequest)(nil),                  // 24: loop.internal.pb.mercury.v4.MaxReportLengthRequest
	(*v4.ObservationTimestampFromReportRequest)(nil),   // 25: loop.internal.pb.mercury.v4.ObservationTimestampFromReportRequest
	(*v3.BuildReportRequest)(nil),                      // 26: loop.internal.pb.mercury.v3.BuildReportRequest
	(*v3.MaxReportLengthRequest)(nil),                  // 27: loop.internal.pb.mercury.v3.MaxReportLengthRequest
	(*v3.ObservationTimestampFromReportRequest)(nil),   // 28: loop.internal.pb.mercury.v3.ObservationTimestampFromReportRequest
	(*v1.BuildReportRequest)(nil),                      // 29: loop.internal.pb.mercury.v1.BuildReportRequest
	(*v1.MaxReportLengthRequest)(nil),                  // 30: loop.internal.pb.mercury.v1.MaxReportLengthRequest
	(*v1.CurrentBlockNumFromReportRequest)(nil),        // 31: loop.internal.pb.mercury.v1.CurrentBlockNumFromReportRequest
	(*v2.BuildReportRequest)(nil),                      // 32: loop.internal.pb.mercury.v2.BuildReportRequest
	(*v2.MaxReportLengthRequest)(nil),                  // 33: loop.internal.pb.mercury.v2.MaxReportLengthRequest
	(*v2.ObservationTimestampFromReportRequest)(nil),   // 34: loop.internal.pb.mercury.v2.ObservationTimestampFromReportRequest
	(*v4.BuildReportReply)(nil),                        // 35: loop.internal.pb.mercury.v4.BuildReportReply
	(*v4.MaxReportLengthReply)(nil),                    // 36: loop.internal.pb.mercury.v4.MaxReportLengthReply
	(*v4.ObservationTimestampFromReportReply)(nil),     // 37: loop.internal.pb.mercury.v4.ObservationTimestampFromReportReply
	(*v3.BuildReportReply)(nil),                        // 38: loop.internal.pb.mercury.v3.BuildReportReply
	(*v3.MaxReportLengthReply)(nil),                    // 39: loop.internal.pb.mercury.v3.MaxReportLengthReply
	(*v3.ObservationTimestampFromReportReply)(nil),     // 40: loop.internal.pb.mercury.v3.ObservationTimestampFromReportReply
	(*v1.BuildReportReply)(nil),                        // 41: loop.internal.pb.mercury.v1.BuildReportReply
	(*v1.MaxReportLengthReply)(nil),                    // 42: loop.internal.pb.mercury.v1.MaxReportLengthReply
	(*v1.CurrentBlockNumFromReportResponse)(nil),       // 43: loop.internal.pb.mercury.v1.CurrentBlockNumFromReportResponse
	(*v2.BuildReportReply)(nil),                        // 44: loop.internal.pb.mercury.v2.BuildReportReply
	(*v2.MaxReportLengthReply)(nil),                    // 45: loop.internal.pb.mercury.v2.MaxReportLengthReply
	(*v2.ObservationTimestampFromReportReply)(nil),     // 46: loop.internal.pb.mercury.v2.ObservationTimestampFromReportReply
}
var file_mercury_loop_proto_depIdxs = []int32{
	22, // 0: loop.internal.pb.mercury.OnchainConfig.min:type_name -> loop.BigInt
	22, // 1: loop.internal.pb.mercury.OnchainConfig.max:type_name -> loop.BigInt
	8,  // 2: loop.internal.pb.mercury.EncodeOnchainConfigRequest.onchainConfig:type_name -> loop.internal.pb.mercury.OnchainConfig
	8,  // 3: loop.internal.pb.mercury.DecodeOnchainConfigReply.onchainConfig:type_name -> loop.internal.pb.mercury.OnchainConfig
	22, // 4: loop.internal.pb.mercury.LatestPriceReply.latestPrice:type_name -> loop.BigInt
	19, // 5: loop.internal.pb.mercury.LatestHeadsReply.heads:type_name -> loop.internal.pb.mercury.Head
	4,  // 6: loop.internal.pb.mercury.MercuryAdapter.NewMercuryV1Factory:input_type -> loop.internal.pb.mercury.NewMercuryV1FactoryRequest
	6,  // 7: loop.internal.pb.mercury.MercuryAdapter.NewMercuryV2Factory:input_type -> loop.internal.pb.mercury.NewMercuryV2FactoryRequest
	2,  // 8: loop.internal.pb.mercury.MercuryAdapter.NewMercuryV3Factory:input_type -> loop.internal.pb.mercury.NewMercuryV3FactoryRequest
	0,  // 9: loop.internal.pb.mercury.MercuryAdapter.NewMercuryV4Factory:input_type -> loop.internal.pb.mercury.NewMercuryV4FactoryRequest
	9,  // 10: loop.internal.pb.mercury.OnchainConfigCodec.Encode:input_type -> loop.internal.pb.mercury.EncodeOnchainConfigRequest
	11, // 11: loop.internal.pb.mercury.OnchainConfigCodec.Decode:input_type -> loop.internal.pb.mercury.DecodeOnchainConfigRequest
	23, // 12: loop.internal.pb.mercury.ReportCodecV4.BuildReport:input_type -> loop.internal.pb.mercury.v4.BuildReportRequest
	24, // 13: loop.internal.pb.mercury.ReportCodecV4.MaxReportLength:input_type -> loop.internal.pb.mercury.v4.MaxReportLengthRequest
	25, // 14: loop.internal.pb.mercury.ReportCodecV4.ObservationTimestampFromReport:input_type -> loop.internal.pb.mercury.v4.ObservationTimestampFromReportRequest
	26, // 15: loop.internal.pb.mercury.ReportCodecV3.BuildReport:input_type -> loop.internal.pb.mercury.v3.BuildReportRequest
	27, // 16: loop.internal.pb.mercury.ReportCodecV3.MaxReportLength:input_type -> loop.internal.pb.mercury.v3.MaxReportLengthRequest
	28, // 17: loop.internal.pb.mercury.ReportCodecV3.ObservationTimestampFromReport:input_type -> loop.internal.pb.mercury.v3.ObservationTimestampFromReportRequest
	29, // 18: loop.internal.pb.mercury.ReportCodecV1.BuildReport:input_type -> loop.internal.pb.mercury.v1.BuildReportRequest
	30, // 19: loop.internal.pb.mercury.ReportCodecV1.MaxReportLength:input_type -> loop.internal.pb.mercury.v1.MaxReportLengthRequest
	31, // 20: loop.internal.pb.mercury.ReportCodecV1.CurrentBlockNumFromReport:input_type -> loop.internal.pb.mercury.v1.CurrentBlockNumFromReportRequest
	32, // 21: loop.internal.pb.mercury.ReportCodecV2.BuildReport:input_type -> loop.internal.pb.mercury.v2.BuildReportRequest
	33, // 22: loop.internal.pb.mercury.ReportCodecV2.MaxReportLength:input_type -> loop.internal.pb.mercury.v2.MaxReportLengthRequest
	34, // 23: loop.internal.pb.mercury.ReportCodecV2.ObservationTimestampFromReport:input_type -> loop.internal.pb.mercury.v2.ObservationTimestampFromReportRequest
	13, // 24: loop.internal.pb.mercury.ServerFetcher.FetchInitialMaxFinalizedBlockNumber:input_type -> loop.internal.pb.mercury.FetchInitialMaxFinalizedBlockNumberRequest
	15, // 25: loop.internal.pb.mercury.ServerFetcher.LatestPrice:input_type -> loop.internal.pb.mercury.LatestPriceRequest
	17, // 26: loop.internal.pb.mercury.ServerFetcher.LatestTimestamp:input_type -> loop.internal.pb.mercury.LatestTimestampRequest
	20, // 27: loop.internal.pb.mercury.MercuryChainReader.LatestHeads:input_type -> loop.internal.pb.mercury.LatestHeadsRequest
	5,  // 28: loop.internal.pb.mercury.MercuryAdapter.NewMercuryV1Factory:output_type -> loop.internal.pb.mercury.NewMercuryV1FactoryReply
	7,  // 29: loop.internal.pb.mercury.MercuryAdapter.NewMercuryV2Factory:output_type -> loop.internal.pb.mercury.NewMercuryV2FactoryReply
	3,  // 30: loop.internal.pb.mercury.MercuryAdapter.NewMercuryV3Factory:output_type -> loop.internal.pb.mercury.NewMercuryV3FactoryReply
	1,  // 31: loop.internal.pb.mercury.MercuryAdapter.NewMercuryV4Factory:output_type -> loop.internal.pb.mercury.NewMercuryV4FactoryReply
	10, // 32: loop.internal.pb.mercury.OnchainConfigCodec.Encode:output_type -> loop.internal.pb.mercury.EncodeOnchainConfigReply
	12, // 33: loop.internal.pb.mercury.OnchainConfigCodec.Decode:output_type -> loop.internal.pb.mercury.DecodeOnchainConfigReply
	35, // 34: loop.internal.pb.mercury.ReportCodecV4.BuildReport:output_type -> loop.internal.pb.mercury.v4.BuildReportReply
	36, // 35: loop.internal.pb.mercury.ReportCodecV4.MaxReportLength:output_type -> loop.internal.pb.mercury.v4.MaxReportLengthReply
	37, // 36: loop.internal.pb.mercury.ReportCodecV4.ObservationTimestampFromReport:output_type -> loop.internal.pb.mercury.v4.ObservationTimestampFromReportReply
	38, // 37: loop.internal.pb.mercury.ReportCodecV3.BuildReport:output_type -> loop.internal.pb.mercury.v3.BuildReportReply
	39, // 38: loop.internal.pb.mercury.ReportCodecV3.MaxReportLength:output_type -> loop.internal.pb.mercury.v3.MaxReportLengthReply
	40, // 39: loop.internal.pb.mercury.ReportCodecV3.ObservationTimestampFromReport:output_type -> loop.internal.pb.mercury.v3.ObservationTimestampFromReportReply
	41, // 40: loop.internal.pb.mercury.ReportCodecV1.BuildReport:output_type -> loop.internal.pb.mercury.v1.BuildReportReply
	42, // 41: loop.internal.pb.mercury.ReportCodecV1.MaxReportLength:output_type -> loop.internal.pb.mercury.v1.MaxReportLengthReply
	43, // 42: loop.internal.pb.mercury.ReportCodecV1.CurrentBlockNumFromReport:output_type -> loop.internal.pb.mercury.v1.CurrentBlockNumFromReportResponse
	44, // 43: loop.internal.pb.mercury.ReportCodecV2.BuildReport:output_type -> loop.internal.pb.mercury.v2.BuildReportReply
	45, // 44: loop.internal.pb.mercury.ReportCodecV2.MaxReportLength:output_type -> loop.internal.pb.mercury.v2.MaxReportLengthReply
	46, // 45: loop.internal.pb.mercury.ReportCodecV2.ObservationTimestampFromReport:output_type -> loop.internal.pb.mercury.v2.ObservationTimestampFromReportReply
	14, // 46: loop.internal.pb.mercury.ServerFetcher.FetchInitialMaxFinalizedBlockNumber:output_type -> loop.internal.pb.mercury.FetchInitialMaxFinalizedBlockNumberReply
	16, // 47: loop.internal.pb.mercury.ServerFetcher.LatestPrice:output_type -> loop.internal.pb.mercury.LatestPriceReply
	18, // 48: loop.internal.pb.mercury.ServerFetcher.LatestTimestamp:output_type -> loop.internal.pb.mercury.LatestTimestampReply
	21, // 49: loop.internal.pb.mercury.MercuryChainReader.LatestHeads:output_type -> loop.internal.pb.mercury.LatestHeadsReply
	28, // [28:50] is the sub-list for method output_type
	6,  // [6:28] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_mercury_loop_proto_init() }
func file_mercury_loop_proto_init() {
	if File_mercury_loop_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mercury_loop_proto_rawDesc), len(file_mercury_loop_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   8,
		},
		GoTypes:           file_mercury_loop_proto_goTypes,
		DependencyIndexes: file_mercury_loop_proto_depIdxs,
		MessageInfos:      file_mercury_loop_proto_msgTypes,
	}.Build()
	File_mercury_loop_proto = out.File
	file_mercury_loop_proto_goTypes = nil
	file_mercury_loop_proto_depIdxs = nil
}
