# Builds external repositories that use this so we can create tickets to update them before their ci pipelines break.
# NOTE: This is not a required check to merge, merely a check so you know to create tickets to update the products that rely on this.
name: Build External Repositories
on:
  pull_request:

# Only run 1 of this workflow at a time per PR
concurrency:
  group: integration-build-check-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-chainlink:
    environment: integration
    permissions:
      id-token: write
      contents: read
    name: Build Chainlink Image
    runs-on: ubuntu-latest
    steps:
      - name: Get core ref from PR body
        if: github.event_name == 'pull_request'
        id: get-core-ref
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          comment=$(gh pr view https://github.com/${GITHUB_REPOSITORY}/pull/${PR_NUMBER} --json body -q '.body')
          core_ref=$(echo $comment | grep -oP 'core ref: \K\S+' || true)
          if [ ! -z "$core_ref" ]; then
            echo "core-ref=${core_ref}" | tee -a "$GITHUB_OUTPUT"
          else
            echo "core-ref=develop" | tee -a "$GITHUB_OUTPUT"
          fi

      - name: Checkout chainlink-common repo
        uses: actions/checkout@v4
        with:
          path: chainlink-common

      - name: Checkout chainlink repo
        uses: actions/checkout@v4
        with:
          path: chainlink
          repository: smartcontractkit/chainlink
          ref: ${{ steps.get-core-ref.outputs.core-ref }}

      - name: Setup Go
        uses: ./chainlink-common/.github/actions/setup-go
        with:
          go-version-file: "chainlink/go.mod"
          only-modules: "true"

      - name: Build /chainlink
        shell: bash
        env:
          COMMON_SHA: ${{ github.event.pull_request.head.sha }}
        working-directory: chainlink
        run: |
          go get github.com/smartcontractkit/chainlink-common@${COMMON_SHA}
          go mod tidy
          make install-chainlink

  solana-build-relay:
    environment: integration
    permissions:
      id-token: write
      contents: read
    name: Solana Build Relay
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - name: Get solana ref from PR body
        if: github.event_name == 'pull_request'
        run: |
          comment=$(gh pr view https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }} --json body -q '.body')
          solana_ref=$(echo $comment | grep -oP 'solana ref: \K\S+' || true)
          if [ ! -z "$solana_ref" ]; then
            echo "CUSTOM_SOLANA_REF=${solana_ref}" >> "${GITHUB_ENV}"
          else
            echo "CUSTOM_SOLANA_REF=develop" >> "${GITHUB_ENV}"
          fi

      - name: Checkout the solana repo
        uses: actions/checkout@v4
        with:
          repository: smartcontractkit/chainlink-solana
          ref: ${{ env.CUSTOM_SOLANA_REF }}

      - name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: "go.mod"

      - name: Replace chainlink-common deps
        run: |
          go get github.com/smartcontractkit/chainlink-common@${{ github.event.pull_request.head.sha }}
          go mod tidy

      - name: Install Solana CLI
        run: ./scripts/install-solana-ci.sh

      - name: Build & Test
        run: make test_relay_unit

  starknet-build-relay:
    environment: integration
    permissions:
      id-token: write
      contents: read
    name: Starknet Build Relay
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - name: Get starknet ref from PR body
        if: github.event_name == 'pull_request'
        run: |
          comment=$(gh pr view https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }} --json body -q '.body')
          starknet_ref=$(echo $comment | grep -oP 'starknet ref: \K\S+' || true)
          if [ ! -z "$starknet_ref" ]; then
            echo "CUSTOM_STARKNET_REF=${starknet_ref}" >> "${GITHUB_ENV}"
          else
            echo "CUSTOM_STARKNET_REF=develop" >> "${GITHUB_ENV}"
          fi

      - name: Checkout the starknet repo
        uses: actions/checkout@v4
        with:
          repository: smartcontractkit/chainlink-starknet
          ref: ${{ env.CUSTOM_STARKNET_REF }}

      - name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: ./relayer/go.mod

      - name: Replace chainlink-common deps
        run: |
            cd relayer
            go get github.com/smartcontractkit/chainlink-common@${{ github.event.pull_request.head.sha }}
            go mod tidy

      - name: Install Nix
        uses: cachix/install-nix-action@8887e596b4ee1134dae06b98d573bd674693f47c # v26
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Build
        run: nix develop -c make build-go-relayer

      - name: Test
        run: nix develop -c make test-unit-go

  # terra-build-relay:
  #   environment: integration
  #   permissions:
  #     id-token: write
  #     contents: read
  #   name: Terra Build Relay
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout the terra repo
  #       uses: actions/checkout@v4
  #       with:
  #         repository: smartcontractkit/chainlink-terra
  #     - name: Setup Go
  #       uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
  #       with:
  #         go-version-file: "go.mod"
  #     - name: Replace chainlink-common deps
  #       run: |
  #         go get github.com/smartcontractkit/chainlink-common@${{ github.event.pull_request.head.sha }}
  #         go mod tidy
  #     - name: Install Nix
  #       uses: cachix/install-nix-action@v14
  #       with:
  #         install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
  #         install_options: "--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve"
  #         extra_nix_config: |
  #           experimental-features = nix-command flakes
  #           access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
  #     - name: Compile relay
  #       run: nix develop -c go build -v ./pkg/terra/...
  #     - name: Run unit tests
  #       run: nix develop -c go test -v ./pkg/terra/...
