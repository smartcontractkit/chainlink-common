syntax = "proto3";

option go_package = "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb";

package loop;

import "codec.proto";
import "relayer.proto";
import "google/protobuf/empty.proto";

service ContractWriter {
    rpc SubmitTransaction(SubmitTransactionRequest) returns (google.protobuf.Empty) {}
    rpc GetTransactionStatus(GetTransactionStatusRequest) returns (GetTransactionStatusReply) {}
    rpc GetFeeComponents(google.protobuf.Empty) returns (GetFeeComponentsReply) {}
}

message SubmitTransactionRequest {
    string contract_name = 1;
    string method = 2;
    VersionedBytes params = 3;
    string transaction_id = 4;
    string to_address = 5;
    TransactionMeta meta = 6;
    BigInt value = 7;
}

message TransactionMeta {
    string workflow_execution_id = 1;
    BigInt gas_limit = 2;
}

// GetTransactionStatusRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractWriter.GetTransactionStatus].
message GetTransactionStatusRequest {
    string transaction_id = 1;
}

// TransactionStatus is an enum for the status of a transaction.
// This should always be a 1-1 mapping to: [github.com/smartcontractkit/chainlink-common/pkg/types.TransactionStatus].
enum TransactionStatus {
    TRANSACTION_STATUS_UNKNOWN = 0;
    TRANSACTION_STATUS_PENDING = 1;
    TRANSACTION_STATUS_UNCONFIRMED = 2;
    TRANSACTION_STATUS_FINALIZED = 3;
    TRANSACTION_STATUS_FAILED = 4;
    TRANSACTION_STATUS_FATAL = 5;
}

// GetTransactionStatusReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractWriter.GetTransactionStatus].
message GetTransactionStatusReply {
    TransactionStatus transaction_status = 1;
}

// GetFeeComponentsReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractWriter.GetFeeComponents].
message GetFeeComponentsReply {
    BigInt execution_fee = 1;
    BigInt data_availability_fee = 2;
}
