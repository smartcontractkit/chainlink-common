// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: capabilities/blockchain/evm/v1alpha/client.proto

package evm

import (
	pb "github.com/smartcontractkit/chainlink-common/pkg/values/pb"
	pb1 "github.com/smartcontractkit/chainlink-common/pkg/workflows/sdk/v2/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfidenceLevel int32

const (
	ConfidenceLevel_CONFIDENCE_LEVEL_SAFE      ConfidenceLevel = 0
	ConfidenceLevel_CONFIDENCE_LEVEL_LATEST    ConfidenceLevel = 1
	ConfidenceLevel_CONFIDENCE_LEVEL_FINALIZED ConfidenceLevel = 2
)

// Enum value maps for ConfidenceLevel.
var (
	ConfidenceLevel_name = map[int32]string{
		0: "CONFIDENCE_LEVEL_SAFE",
		1: "CONFIDENCE_LEVEL_LATEST",
		2: "CONFIDENCE_LEVEL_FINALIZED",
	}
	ConfidenceLevel_value = map[string]int32{
		"CONFIDENCE_LEVEL_SAFE":      0,
		"CONFIDENCE_LEVEL_LATEST":    1,
		"CONFIDENCE_LEVEL_FINALIZED": 2,
	}
)

func (x ConfidenceLevel) Enum() *ConfidenceLevel {
	p := new(ConfidenceLevel)
	*p = x
	return p
}

func (x ConfidenceLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfidenceLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_enumTypes[0].Descriptor()
}

func (ConfidenceLevel) Type() protoreflect.EnumType {
	return &file_capabilities_blockchain_evm_v1alpha_client_proto_enumTypes[0]
}

func (x ConfidenceLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfidenceLevel.Descriptor instead.
func (ConfidenceLevel) EnumDescriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{0}
}

type ReceiverContractExecutionStatus int32

const (
	ReceiverContractExecutionStatus_RECEIVER_CONTRACT_EXECUTION_STATUS_SUCCESS  ReceiverContractExecutionStatus = 0
	ReceiverContractExecutionStatus_RECEIVER_CONTRACT_EXECUTION_STATUS_REVERTED ReceiverContractExecutionStatus = 1
)

// Enum value maps for ReceiverContractExecutionStatus.
var (
	ReceiverContractExecutionStatus_name = map[int32]string{
		0: "RECEIVER_CONTRACT_EXECUTION_STATUS_SUCCESS",
		1: "RECEIVER_CONTRACT_EXECUTION_STATUS_REVERTED",
	}
	ReceiverContractExecutionStatus_value = map[string]int32{
		"RECEIVER_CONTRACT_EXECUTION_STATUS_SUCCESS":  0,
		"RECEIVER_CONTRACT_EXECUTION_STATUS_REVERTED": 1,
	}
)

func (x ReceiverContractExecutionStatus) Enum() *ReceiverContractExecutionStatus {
	p := new(ReceiverContractExecutionStatus)
	*p = x
	return p
}

func (x ReceiverContractExecutionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReceiverContractExecutionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_enumTypes[1].Descriptor()
}

func (ReceiverContractExecutionStatus) Type() protoreflect.EnumType {
	return &file_capabilities_blockchain_evm_v1alpha_client_proto_enumTypes[1]
}

func (x ReceiverContractExecutionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReceiverContractExecutionStatus.Descriptor instead.
func (ReceiverContractExecutionStatus) EnumDescriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{1}
}

type TxStatus int32

const (
	TxStatus_TX_STATUS_FATAL    TxStatus = 0
	TxStatus_TX_STATUS_REVERTED TxStatus = 1
	TxStatus_TX_STATUS_SUCCESS  TxStatus = 2
)

// Enum value maps for TxStatus.
var (
	TxStatus_name = map[int32]string{
		0: "TX_STATUS_FATAL",
		1: "TX_STATUS_REVERTED",
		2: "TX_STATUS_SUCCESS",
	}
	TxStatus_value = map[string]int32{
		"TX_STATUS_FATAL":    0,
		"TX_STATUS_REVERTED": 1,
		"TX_STATUS_SUCCESS":  2,
	}
)

func (x TxStatus) Enum() *TxStatus {
	p := new(TxStatus)
	*p = x
	return p
}

func (x TxStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_enumTypes[2].Descriptor()
}

func (TxStatus) Type() protoreflect.EnumType {
	return &file_capabilities_blockchain_evm_v1alpha_client_proto_enumTypes[2]
}

func (x TxStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxStatus.Descriptor instead.
func (TxStatus) EnumDescriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{2}
}

type TopicValues struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        [][]byte               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"` // list of possible values for any topic, in [32]byte fix-sized array format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopicValues) Reset() {
	*x = TopicValues{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopicValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicValues) ProtoMessage() {}

func (x *TopicValues) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicValues.ProtoReflect.Descriptor instead.
func (*TopicValues) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{0}
}

func (x *TopicValues) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type FilterLogTriggerRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Addresses [][]byte               `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"` // list of addresses to include in evm address [20]byte fix-sized array format, at least one address is required
	// TopicValues is a fixed 4 length array of possible values for any topic where:
	// a) the first element is an array of the event signatures (keccak256 of the event name and indexed args types), it has to have at least one value
	// b) the second element is an array of possible values for the first indexed argument, can be empty
	// c) the third element is an array of possible values for the second indexed argument, can be empty
	// d) the fourth element is an array of possible values for the third indexed argument, can be empty
	Topics        []*TopicValues  `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	Confidence    ConfidenceLevel `protobuf:"varint,3,opt,name=confidence,proto3,enum=capabilities.blockchain.evm.v1alpha.ConfidenceLevel" json:"confidence,omitempty"` // optional, defaults to "SAFE"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterLogTriggerRequest) Reset() {
	*x = FilterLogTriggerRequest{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterLogTriggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterLogTriggerRequest) ProtoMessage() {}

func (x *FilterLogTriggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterLogTriggerRequest.ProtoReflect.Descriptor instead.
func (*FilterLogTriggerRequest) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{1}
}

func (x *FilterLogTriggerRequest) GetAddresses() [][]byte {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *FilterLogTriggerRequest) GetTopics() []*TopicValues {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *FilterLogTriggerRequest) GetConfidence() ConfidenceLevel {
	if x != nil {
		return x.Confidence
	}
	return ConfidenceLevel_CONFIDENCE_LEVEL_SAFE
}

// CallContractRequest has arguments for reading a contract as specified in the call message at a block height defined by blockNumber where:
// blockNumber :
//
//	nil (default) or (-2) → use the latest mined block (“latest”)
//	FinalizedBlockNumber(-3) → last finalized block (“finalized”)
//
// Any positive value is treated as an explicit block height.
type CallContractRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Call          *CallMsg               `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
	BlockNumber   *pb.BigInt             `protobuf:"bytes,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallContractRequest) Reset() {
	*x = CallContractRequest{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallContractRequest) ProtoMessage() {}

func (x *CallContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallContractRequest.ProtoReflect.Descriptor instead.
func (*CallContractRequest) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{2}
}

func (x *CallContractRequest) GetCall() *CallMsg {
	if x != nil {
		return x.Call
	}
	return nil
}

func (x *CallContractRequest) GetBlockNumber() *pb.BigInt {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

type CallContractReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // solidity-spec abi encoded bytes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallContractReply) Reset() {
	*x = CallContractReply{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallContractReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallContractReply) ProtoMessage() {}

func (x *CallContractReply) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallContractReply.ProtoReflect.Descriptor instead.
func (*CallContractReply) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{3}
}

func (x *CallContractReply) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type FilterLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilterQuery   *FilterQuery           `protobuf:"bytes,1,opt,name=filter_query,json=filterQuery,proto3" json:"filter_query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterLogsRequest) Reset() {
	*x = FilterLogsRequest{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterLogsRequest) ProtoMessage() {}

func (x *FilterLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterLogsRequest.ProtoReflect.Descriptor instead.
func (*FilterLogsRequest) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{4}
}

func (x *FilterLogsRequest) GetFilterQuery() *FilterQuery {
	if x != nil {
		return x.FilterQuery
	}
	return nil
}

type FilterLogsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*Log                 `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterLogsReply) Reset() {
	*x = FilterLogsReply{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterLogsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterLogsReply) ProtoMessage() {}

func (x *FilterLogsReply) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterLogsReply.ProtoReflect.Descriptor instead.
func (*FilterLogsReply) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{5}
}

func (x *FilterLogsReply) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

// represents evm-style log
type Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       []byte                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                            // address of the contract emitted the log in evm address [20]byte fix-sized array format
	Topics        [][]byte               `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`                              // indexed log fields, in [32]byte fix-sized array format
	TxHash        []byte                 `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`                // hash of the transaction containing the log, in [32]byte fix-sized array format
	BlockHash     []byte                 `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`       // hash of the block containing the log, in [32]byte fix-sized array format
	Data          []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`                                  // solidity-spec abi encoded log Data
	EventSig      []byte                 `protobuf:"bytes,6,opt,name=event_sig,json=eventSig,proto3" json:"event_sig,omitempty"`          // keccak256 of event signature, in [32]byte fix-sized array format
	BlockNumber   *pb.BigInt             `protobuf:"bytes,7,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"` // block number containing the log
	TxIndex       uint32                 `protobuf:"varint,8,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`            // index of transaction emmited the log
	Index         uint32                 `protobuf:"varint,9,opt,name=index,proto3" json:"index,omitempty"`                               // index of the Log within the intire block
	Removed       bool                   `protobuf:"varint,10,opt,name=removed,proto3" json:"removed,omitempty"`                          // flag if the log was removed during reorg
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{6}
}

func (x *Log) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Log) GetTopics() [][]byte {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *Log) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *Log) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *Log) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Log) GetEventSig() []byte {
	if x != nil {
		return x.EventSig
	}
	return nil
}

func (x *Log) GetBlockNumber() *pb.BigInt {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

func (x *Log) GetTxIndex() uint32 {
	if x != nil {
		return x.TxIndex
	}
	return 0
}

func (x *Log) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Log) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

// represents simplified evm-style CallMsg
type CallMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          []byte                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"` // sender address in evm address [20]byte fix-sized array format
	To            []byte                 `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`     // contract address in evm address [20]byte fix-sized array format
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` // solidity-spec abi encoded bytes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallMsg) Reset() {
	*x = CallMsg{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallMsg) ProtoMessage() {}

func (x *CallMsg) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallMsg.ProtoReflect.Descriptor instead.
func (*CallMsg) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{7}
}

func (x *CallMsg) GetFrom() []byte {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *CallMsg) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *CallMsg) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// represents evm-style filter query
type FilterQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockHash     []byte                 `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"` // exact block (cant use from/to), in [32]byte fix-sized array format
	FromBlock     *pb.BigInt             `protobuf:"bytes,2,opt,name=from_block,json=fromBlock,proto3" json:"from_block,omitempty"` // start block range
	ToBlock       *pb.BigInt             `protobuf:"bytes,3,opt,name=to_block,json=toBlock,proto3" json:"to_block,omitempty"`       // end block range
	Addresses     [][]byte               `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`                  // contract(s) to filter logs from in evm address [20]byte fix-sized array format
	Topics        []*Topics              `protobuf:"bytes,5,rep,name=topics,proto3" json:"topics,omitempty"`                        // filter log by event signature and indexed args
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterQuery) Reset() {
	*x = FilterQuery{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterQuery) ProtoMessage() {}

func (x *FilterQuery) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterQuery.ProtoReflect.Descriptor instead.
func (*FilterQuery) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{8}
}

func (x *FilterQuery) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *FilterQuery) GetFromBlock() *pb.BigInt {
	if x != nil {
		return x.FromBlock
	}
	return nil
}

func (x *FilterQuery) GetToBlock() *pb.BigInt {
	if x != nil {
		return x.ToBlock
	}
	return nil
}

func (x *FilterQuery) GetAddresses() [][]byte {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *FilterQuery) GetTopics() []*Topics {
	if x != nil {
		return x.Topics
	}
	return nil
}

type Topics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         [][]byte               `protobuf:"bytes,1,rep,name=topic,proto3" json:"topic,omitempty"` // in [32]byte fix-sized array format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Topics) Reset() {
	*x = Topics{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Topics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topics) ProtoMessage() {}

func (x *Topics) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topics.ProtoReflect.Descriptor instead.
func (*Topics) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{9}
}

func (x *Topics) GetTopic() [][]byte {
	if x != nil {
		return x.Topic
	}
	return nil
}

type BalanceAtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       []byte                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"` // in evm address [20]byte fix-sized array format
	BlockNumber   *pb.BigInt             `protobuf:"bytes,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BalanceAtRequest) Reset() {
	*x = BalanceAtRequest{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceAtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceAtRequest) ProtoMessage() {}

func (x *BalanceAtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceAtRequest.ProtoReflect.Descriptor instead.
func (*BalanceAtRequest) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{10}
}

func (x *BalanceAtRequest) GetAccount() []byte {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *BalanceAtRequest) GetBlockNumber() *pb.BigInt {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

type BalanceAtReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balance       *pb.BigInt             `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"` // Balance of the account in wei (10^-18 eth)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BalanceAtReply) Reset() {
	*x = BalanceAtReply{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BalanceAtReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceAtReply) ProtoMessage() {}

func (x *BalanceAtReply) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceAtReply.ProtoReflect.Descriptor instead.
func (*BalanceAtReply) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{11}
}

func (x *BalanceAtReply) GetBalance() *pb.BigInt {
	if x != nil {
		return x.Balance
	}
	return nil
}

type EstimateGasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           *CallMsg               `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"` // simulates tx execution returns approximate amount of gas units needed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateGasRequest) Reset() {
	*x = EstimateGasRequest{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateGasRequest) ProtoMessage() {}

func (x *EstimateGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateGasRequest.ProtoReflect.Descriptor instead.
func (*EstimateGasRequest) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{12}
}

func (x *EstimateGasRequest) GetMsg() *CallMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

type EstimateGasReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gas           uint64                 `protobuf:"varint,1,opt,name=gas,proto3" json:"gas,omitempty"` // estimated amount of gas in gas units, needed for tx execution
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateGasReply) Reset() {
	*x = EstimateGasReply{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateGasReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateGasReply) ProtoMessage() {}

func (x *EstimateGasReply) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateGasReply.ProtoReflect.Descriptor instead.
func (*EstimateGasReply) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{13}
}

func (x *EstimateGasReply) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

type GetTransactionByHashRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"` // in [32]byte fix-sized array format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionByHashRequest) Reset() {
	*x = GetTransactionByHashRequest{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionByHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByHashRequest) ProtoMessage() {}

func (x *GetTransactionByHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByHashRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionByHashRequest) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{14}
}

func (x *GetTransactionByHashRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type GetTransactionByHashReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transaction   *Transaction           `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionByHashReply) Reset() {
	*x = GetTransactionByHashReply{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionByHashReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByHashReply) ProtoMessage() {}

func (x *GetTransactionByHashReply) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByHashReply.ProtoReflect.Descriptor instead.
func (*GetTransactionByHashReply) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{15}
}

func (x *GetTransactionByHashReply) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

// represents evm-style transaction
type Transaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nonce         uint64                 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`                      // number of txs sent from sender
	Gas           uint64                 `protobuf:"varint,2,opt,name=gas,proto3" json:"gas,omitempty"`                          // max gas allowed per execution (in gas units)
	To            []byte                 `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`                             // recipient address in evm address [20]byte fix-sized array format
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                         // solidity-spec abi encoded input data for function call payload
	Hash          []byte                 `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`                         // transaction hash, in [32]byte fix-sized array format
	Value         *pb.BigInt             `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`                       // amount of eth sent in wei
	GasPrice      *pb.BigInt             `protobuf:"bytes,7,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"` // price for a single gas unit in wei
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{16}
}

func (x *Transaction) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Transaction) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *Transaction) GetTo() []byte {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Transaction) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Transaction) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Transaction) GetValue() *pb.BigInt {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Transaction) GetGasPrice() *pb.BigInt {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

type GetTransactionReceiptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"` // in [32]byte fix-sized array format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionReceiptRequest) Reset() {
	*x = GetTransactionReceiptRequest{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionReceiptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionReceiptRequest) ProtoMessage() {}

func (x *GetTransactionReceiptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionReceiptRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionReceiptRequest) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{17}
}

func (x *GetTransactionReceiptRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type GetTransactionReceiptReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Receipt       *Receipt               `protobuf:"bytes,1,opt,name=receipt,proto3" json:"receipt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionReceiptReply) Reset() {
	*x = GetTransactionReceiptReply{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionReceiptReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionReceiptReply) ProtoMessage() {}

func (x *GetTransactionReceiptReply) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionReceiptReply.ProtoReflect.Descriptor instead.
func (*GetTransactionReceiptReply) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{18}
}

func (x *GetTransactionReceiptReply) GetReceipt() *Receipt {
	if x != nil {
		return x.Receipt
	}
	return nil
}

// represents evm-style receipt
type Receipt struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Status            uint64                 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                                                 // 1 for success 0 for failure
	GasUsed           uint64                 `protobuf:"varint,2,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`                                // gas used by this transaction (in gas units)
	TxIndex           uint64                 `protobuf:"varint,3,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`                                // index of the transaction inside of the block
	BlockHash         []byte                 `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`                           // block hash containing the transaction
	Logs              []*Log                 `protobuf:"bytes,6,rep,name=logs,proto3" json:"logs,omitempty"`                                                      // logs emitted by this transaction
	TxHash            []byte                 `protobuf:"bytes,7,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`                                    // hash of the transaction this receipt is for, in [32]byte fix-sized array format
	EffectiveGasPrice *pb.BigInt             `protobuf:"bytes,8,opt,name=effective_gas_price,json=effectiveGasPrice,proto3" json:"effective_gas_price,omitempty"` // actual gas price paid in wei (include after EIP-1559)
	BlockNumber       *pb.BigInt             `protobuf:"bytes,9,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`                     // block number containing the transaction
	ContractAddress   []byte                 `protobuf:"bytes,10,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`        // address of the contract if this transaction created one in evm address [20]byte fix-sized array format
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Receipt) Reset() {
	*x = Receipt{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Receipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt) ProtoMessage() {}

func (x *Receipt) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt.ProtoReflect.Descriptor instead.
func (*Receipt) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{19}
}

func (x *Receipt) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Receipt) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *Receipt) GetTxIndex() uint64 {
	if x != nil {
		return x.TxIndex
	}
	return 0
}

func (x *Receipt) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *Receipt) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Receipt) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *Receipt) GetEffectiveGasPrice() *pb.BigInt {
	if x != nil {
		return x.EffectiveGasPrice
	}
	return nil
}

func (x *Receipt) GetBlockNumber() *pb.BigInt {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

func (x *Receipt) GetContractAddress() []byte {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

// ----- Request/Reply Wrappers -----
type HeaderByNumberRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockNumber   *pb.BigInt             `protobuf:"bytes,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderByNumberRequest) Reset() {
	*x = HeaderByNumberRequest{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderByNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderByNumberRequest) ProtoMessage() {}

func (x *HeaderByNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderByNumberRequest.ProtoReflect.Descriptor instead.
func (*HeaderByNumberRequest) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{20}
}

func (x *HeaderByNumberRequest) GetBlockNumber() *pb.BigInt {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

type HeaderByNumberReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *Header                `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderByNumberReply) Reset() {
	*x = HeaderByNumberReply{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderByNumberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderByNumberReply) ProtoMessage() {}

func (x *HeaderByNumberReply) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderByNumberReply.ProtoReflect.Descriptor instead.
func (*HeaderByNumberReply) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{21}
}

func (x *HeaderByNumberReply) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

type Header struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     uint64                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // unix timestamp
	BlockNumber   *pb.BigInt             `protobuf:"bytes,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	Hash          []byte                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`                               // in [32]byte fix-sized array format
	ParentHash    []byte                 `protobuf:"bytes,4,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"` // in [32]byte fix-sized array format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Header) Reset() {
	*x = Header{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{22}
}

func (x *Header) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Header) GetBlockNumber() *pb.BigInt {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

func (x *Header) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Header) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

type RegisterLogTrackingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *LPFilter              `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterLogTrackingRequest) Reset() {
	*x = RegisterLogTrackingRequest{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterLogTrackingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterLogTrackingRequest) ProtoMessage() {}

func (x *RegisterLogTrackingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterLogTrackingRequest.ProtoReflect.Descriptor instead.
func (*RegisterLogTrackingRequest) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{23}
}

func (x *RegisterLogTrackingRequest) GetFilter() *LPFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type LPFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxLogsKept   uint64                 `protobuf:"varint,1,opt,name=max_logs_kept,json=maxLogsKept,proto3" json:"max_logs_kept,omitempty"`     // maximum number of logs to retain ( 0 = unlimited )
	RetentionTime int64                  `protobuf:"varint,2,opt,name=retention_time,json=retentionTime,proto3" json:"retention_time,omitempty"` // maximum amount of time to retain logs in seconds
	LogsPerBlock  uint64                 `protobuf:"varint,3,opt,name=logs_per_block,json=logsPerBlock,proto3" json:"logs_per_block,omitempty"`  // rate limit ( maximum # of logs per block, 0 = unlimited )
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                         // filter name, has to persist for removing filter
	Addresses     [][]byte               `protobuf:"bytes,5,rep,name=addresses,proto3" json:"addresses,omitempty"`                               // list of addresses to include in evm address [20]byte fix-sized array format
	EventSigs     [][]byte               `protobuf:"bytes,6,rep,name=event_sigs,json=eventSigs,proto3" json:"event_sigs,omitempty"`              // list of possible signatures (aka topic1), in [32]byte fix-sized array format
	Topic2        [][]byte               `protobuf:"bytes,7,rep,name=topic2,proto3" json:"topic2,omitempty"`                                     // list of possible values for topic2, in [32]byte fix-sized array format
	Topic3        [][]byte               `protobuf:"bytes,8,rep,name=topic3,proto3" json:"topic3,omitempty"`                                     // list of possible values for topic3, in [32]byte fix-sized array format
	Topic4        [][]byte               `protobuf:"bytes,9,rep,name=topic4,proto3" json:"topic4,omitempty"`                                     // list of possible values for topic4, in [32]byte fix-sized array format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LPFilter) Reset() {
	*x = LPFilter{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LPFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LPFilter) ProtoMessage() {}

func (x *LPFilter) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LPFilter.ProtoReflect.Descriptor instead.
func (*LPFilter) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{24}
}

func (x *LPFilter) GetMaxLogsKept() uint64 {
	if x != nil {
		return x.MaxLogsKept
	}
	return 0
}

func (x *LPFilter) GetRetentionTime() int64 {
	if x != nil {
		return x.RetentionTime
	}
	return 0
}

func (x *LPFilter) GetLogsPerBlock() uint64 {
	if x != nil {
		return x.LogsPerBlock
	}
	return 0
}

func (x *LPFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LPFilter) GetAddresses() [][]byte {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *LPFilter) GetEventSigs() [][]byte {
	if x != nil {
		return x.EventSigs
	}
	return nil
}

func (x *LPFilter) GetTopic2() [][]byte {
	if x != nil {
		return x.Topic2
	}
	return nil
}

func (x *LPFilter) GetTopic3() [][]byte {
	if x != nil {
		return x.Topic3
	}
	return nil
}

func (x *LPFilter) GetTopic4() [][]byte {
	if x != nil {
		return x.Topic4
	}
	return nil
}

type UnregisterLogTrackingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilterName    string                 `protobuf:"bytes,1,opt,name=filter_name,json=filterName,proto3" json:"filter_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterLogTrackingRequest) Reset() {
	*x = UnregisterLogTrackingRequest{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterLogTrackingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterLogTrackingRequest) ProtoMessage() {}

func (x *UnregisterLogTrackingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterLogTrackingRequest.ProtoReflect.Descriptor instead.
func (*UnregisterLogTrackingRequest) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{25}
}

func (x *UnregisterLogTrackingRequest) GetFilterName() string {
	if x != nil {
		return x.FilterName
	}
	return ""
}

type WriteReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Receiver      []byte                 `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Report        *pb1.ReportResponse    `protobuf:"bytes,2,opt,name=report,proto3" json:"report,omitempty"`
	GasConfig     *GasConfig             `protobuf:"bytes,3,opt,name=gas_config,json=gasConfig,proto3,oneof" json:"gas_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteReportRequest) Reset() {
	*x = WriteReportRequest{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteReportRequest) ProtoMessage() {}

func (x *WriteReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteReportRequest.ProtoReflect.Descriptor instead.
func (*WriteReportRequest) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{26}
}

func (x *WriteReportRequest) GetReceiver() []byte {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *WriteReportRequest) GetReport() *pb1.ReportResponse {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *WriteReportRequest) GetGasConfig() *GasConfig {
	if x != nil {
		return x.GasConfig
	}
	return nil
}

type GasConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GasLimit      uint64                 `protobuf:"varint,1,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GasConfig) Reset() {
	*x = GasConfig{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GasConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasConfig) ProtoMessage() {}

func (x *GasConfig) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasConfig.ProtoReflect.Descriptor instead.
func (*GasConfig) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{27}
}

func (x *GasConfig) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

type WriteReportReply struct {
	state                           protoimpl.MessageState           `protogen:"open.v1"`
	TxStatus                        TxStatus                         `protobuf:"varint,1,opt,name=tx_status,json=txStatus,proto3,enum=capabilities.blockchain.evm.v1alpha.TxStatus" json:"tx_status,omitempty"`
	ReceiverContractExecutionStatus *ReceiverContractExecutionStatus `protobuf:"varint,2,opt,name=receiver_contract_execution_status,json=receiverContractExecutionStatus,proto3,enum=capabilities.blockchain.evm.v1alpha.ReceiverContractExecutionStatus,oneof" json:"receiver_contract_execution_status,omitempty"`
	TxHash                          []byte                           `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3,oneof" json:"tx_hash,omitempty"`
	TransactionFee                  *pb.BigInt                       `protobuf:"bytes,4,opt,name=transaction_fee,json=transactionFee,proto3,oneof" json:"transaction_fee,omitempty"`
	ErrorMessage                    *string                          `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *WriteReportReply) Reset() {
	*x = WriteReportReply{}
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteReportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteReportReply) ProtoMessage() {}

func (x *WriteReportReply) ProtoReflect() protoreflect.Message {
	mi := &file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteReportReply.ProtoReflect.Descriptor instead.
func (*WriteReportReply) Descriptor() ([]byte, []int) {
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP(), []int{28}
}

func (x *WriteReportReply) GetTxStatus() TxStatus {
	if x != nil {
		return x.TxStatus
	}
	return TxStatus_TX_STATUS_FATAL
}

func (x *WriteReportReply) GetReceiverContractExecutionStatus() ReceiverContractExecutionStatus {
	if x != nil && x.ReceiverContractExecutionStatus != nil {
		return *x.ReceiverContractExecutionStatus
	}
	return ReceiverContractExecutionStatus_RECEIVER_CONTRACT_EXECUTION_STATUS_SUCCESS
}

func (x *WriteReportReply) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *WriteReportReply) GetTransactionFee() *pb.BigInt {
	if x != nil {
		return x.TransactionFee
	}
	return nil
}

func (x *WriteReportReply) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

var File_capabilities_blockchain_evm_v1alpha_client_proto protoreflect.FileDescriptor

const file_capabilities_blockchain_evm_v1alpha_client_proto_rawDesc = "" +
	"\n" +
	"0capabilities/blockchain/evm/v1alpha/client.proto\x12#capabilities.blockchain.evm.v1alpha\x1a\x1bgoogle/protobuf/empty.proto\x1a\x15sdk/v1alpha/sdk.proto\x1a*tools/generator/v1alpha/cre_metadata.proto\x1a\x16values/v1/values.proto\"%\n" +
	"\vTopicValues\x12\x16\n" +
	"\x06values\x18\x01 \x03(\fR\x06values\"\xd7\x01\n" +
	"\x17FilterLogTriggerRequest\x12\x1c\n" +
	"\taddresses\x18\x01 \x03(\fR\taddresses\x12H\n" +
	"\x06topics\x18\x02 \x03(\v20.capabilities.blockchain.evm.v1alpha.TopicValuesR\x06topics\x12T\n" +
	"\n" +
	"confidence\x18\x03 \x01(\x0e24.capabilities.blockchain.evm.v1alpha.ConfidenceLevelR\n" +
	"confidence\"\x8d\x01\n" +
	"\x13CallContractRequest\x12@\n" +
	"\x04call\x18\x01 \x01(\v2,.capabilities.blockchain.evm.v1alpha.CallMsgR\x04call\x124\n" +
	"\fblock_number\x18\x02 \x01(\v2\x11.values.v1.BigIntR\vblockNumber\"'\n" +
	"\x11CallContractReply\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"h\n" +
	"\x11FilterLogsRequest\x12S\n" +
	"\ffilter_query\x18\x01 \x01(\v20.capabilities.blockchain.evm.v1alpha.FilterQueryR\vfilterQuery\"O\n" +
	"\x0fFilterLogsReply\x12<\n" +
	"\x04logs\x18\x01 \x03(\v2(.capabilities.blockchain.evm.v1alpha.LogR\x04logs\"\xa1\x02\n" +
	"\x03Log\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\fR\aaddress\x12\x16\n" +
	"\x06topics\x18\x02 \x03(\fR\x06topics\x12\x17\n" +
	"\atx_hash\x18\x03 \x01(\fR\x06txHash\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x04 \x01(\fR\tblockHash\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\x12\x1b\n" +
	"\tevent_sig\x18\x06 \x01(\fR\beventSig\x124\n" +
	"\fblock_number\x18\a \x01(\v2\x11.values.v1.BigIntR\vblockNumber\x12\x19\n" +
	"\btx_index\x18\b \x01(\rR\atxIndex\x12\x14\n" +
	"\x05index\x18\t \x01(\rR\x05index\x12\x18\n" +
	"\aremoved\x18\n" +
	" \x01(\bR\aremoved\"A\n" +
	"\aCallMsg\x12\x12\n" +
	"\x04from\x18\x01 \x01(\fR\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\fR\x02to\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\"\xef\x01\n" +
	"\vFilterQuery\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x01 \x01(\fR\tblockHash\x120\n" +
	"\n" +
	"from_block\x18\x02 \x01(\v2\x11.values.v1.BigIntR\tfromBlock\x12,\n" +
	"\bto_block\x18\x03 \x01(\v2\x11.values.v1.BigIntR\atoBlock\x12\x1c\n" +
	"\taddresses\x18\x04 \x03(\fR\taddresses\x12C\n" +
	"\x06topics\x18\x05 \x03(\v2+.capabilities.blockchain.evm.v1alpha.TopicsR\x06topics\"\x1e\n" +
	"\x06Topics\x12\x14\n" +
	"\x05topic\x18\x01 \x03(\fR\x05topic\"b\n" +
	"\x10BalanceAtRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\fR\aaccount\x124\n" +
	"\fblock_number\x18\x02 \x01(\v2\x11.values.v1.BigIntR\vblockNumber\"=\n" +
	"\x0eBalanceAtReply\x12+\n" +
	"\abalance\x18\x01 \x01(\v2\x11.values.v1.BigIntR\abalance\"T\n" +
	"\x12EstimateGasRequest\x12>\n" +
	"\x03msg\x18\x01 \x01(\v2,.capabilities.blockchain.evm.v1alpha.CallMsgR\x03msg\"$\n" +
	"\x10EstimateGasReply\x12\x10\n" +
	"\x03gas\x18\x01 \x01(\x04R\x03gas\"1\n" +
	"\x1bGetTransactionByHashRequest\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\"o\n" +
	"\x19GetTransactionByHashReply\x12R\n" +
	"\vtransaction\x18\x01 \x01(\v20.capabilities.blockchain.evm.v1alpha.TransactionR\vtransaction\"\xc6\x01\n" +
	"\vTransaction\x12\x14\n" +
	"\x05nonce\x18\x01 \x01(\x04R\x05nonce\x12\x10\n" +
	"\x03gas\x18\x02 \x01(\x04R\x03gas\x12\x0e\n" +
	"\x02to\x18\x03 \x01(\fR\x02to\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x12\x12\n" +
	"\x04hash\x18\x05 \x01(\fR\x04hash\x12'\n" +
	"\x05value\x18\x06 \x01(\v2\x11.values.v1.BigIntR\x05value\x12.\n" +
	"\tgas_price\x18\a \x01(\v2\x11.values.v1.BigIntR\bgasPrice\"2\n" +
	"\x1cGetTransactionReceiptRequest\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\"d\n" +
	"\x1aGetTransactionReceiptReply\x12F\n" +
	"\areceipt\x18\x01 \x01(\v2,.capabilities.blockchain.evm.v1alpha.ReceiptR\areceipt\"\xf1\x02\n" +
	"\aReceipt\x12\x16\n" +
	"\x06status\x18\x01 \x01(\x04R\x06status\x12\x19\n" +
	"\bgas_used\x18\x02 \x01(\x04R\agasUsed\x12\x19\n" +
	"\btx_index\x18\x03 \x01(\x04R\atxIndex\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x04 \x01(\fR\tblockHash\x12<\n" +
	"\x04logs\x18\x06 \x03(\v2(.capabilities.blockchain.evm.v1alpha.LogR\x04logs\x12\x17\n" +
	"\atx_hash\x18\a \x01(\fR\x06txHash\x12A\n" +
	"\x13effective_gas_price\x18\b \x01(\v2\x11.values.v1.BigIntR\x11effectiveGasPrice\x124\n" +
	"\fblock_number\x18\t \x01(\v2\x11.values.v1.BigIntR\vblockNumber\x12)\n" +
	"\x10contract_address\x18\n" +
	" \x01(\fR\x0fcontractAddress\"M\n" +
	"\x15HeaderByNumberRequest\x124\n" +
	"\fblock_number\x18\x01 \x01(\v2\x11.values.v1.BigIntR\vblockNumber\"Z\n" +
	"\x13HeaderByNumberReply\x12C\n" +
	"\x06header\x18\x01 \x01(\v2+.capabilities.blockchain.evm.v1alpha.HeaderR\x06header\"\x91\x01\n" +
	"\x06Header\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x04R\ttimestamp\x124\n" +
	"\fblock_number\x18\x02 \x01(\v2\x11.values.v1.BigIntR\vblockNumber\x12\x12\n" +
	"\x04hash\x18\x03 \x01(\fR\x04hash\x12\x1f\n" +
	"\vparent_hash\x18\x04 \x01(\fR\n" +
	"parentHash\"c\n" +
	"\x1aRegisterLogTrackingRequest\x12E\n" +
	"\x06filter\x18\x01 \x01(\v2-.capabilities.blockchain.evm.v1alpha.LPFilterR\x06filter\"\x94\x02\n" +
	"\bLPFilter\x12\"\n" +
	"\rmax_logs_kept\x18\x01 \x01(\x04R\vmaxLogsKept\x12%\n" +
	"\x0eretention_time\x18\x02 \x01(\x03R\rretentionTime\x12$\n" +
	"\x0elogs_per_block\x18\x03 \x01(\x04R\flogsPerBlock\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x1c\n" +
	"\taddresses\x18\x05 \x03(\fR\taddresses\x12\x1d\n" +
	"\n" +
	"event_sigs\x18\x06 \x03(\fR\teventSigs\x12\x16\n" +
	"\x06topic2\x18\a \x03(\fR\x06topic2\x12\x16\n" +
	"\x06topic3\x18\b \x03(\fR\x06topic3\x12\x16\n" +
	"\x06topic4\x18\t \x03(\fR\x06topic4\"?\n" +
	"\x1cUnregisterLogTrackingRequest\x12\x1f\n" +
	"\vfilter_name\x18\x01 \x01(\tR\n" +
	"filterName\"\xc8\x01\n" +
	"\x12WriteReportRequest\x12\x1a\n" +
	"\breceiver\x18\x01 \x01(\fR\breceiver\x123\n" +
	"\x06report\x18\x02 \x01(\v2\x1b.sdk.v1alpha.ReportResponseR\x06report\x12R\n" +
	"\n" +
	"gas_config\x18\x03 \x01(\v2..capabilities.blockchain.evm.v1alpha.GasConfigH\x00R\tgasConfig\x88\x01\x01B\r\n" +
	"\v_gas_config\"(\n" +
	"\tGasConfig\x12\x1b\n" +
	"\tgas_limit\x18\x01 \x01(\x04R\bgasLimit\"\xd9\x03\n" +
	"\x10WriteReportReply\x12J\n" +
	"\ttx_status\x18\x01 \x01(\x0e2-.capabilities.blockchain.evm.v1alpha.TxStatusR\btxStatus\x12\x96\x01\n" +
	"\"receiver_contract_execution_status\x18\x02 \x01(\x0e2D.capabilities.blockchain.evm.v1alpha.ReceiverContractExecutionStatusH\x00R\x1freceiverContractExecutionStatus\x88\x01\x01\x12\x1c\n" +
	"\atx_hash\x18\x03 \x01(\fH\x01R\x06txHash\x88\x01\x01\x12?\n" +
	"\x0ftransaction_fee\x18\x04 \x01(\v2\x11.values.v1.BigIntH\x02R\x0etransactionFee\x88\x01\x01\x12(\n" +
	"\rerror_message\x18\x05 \x01(\tH\x03R\ferrorMessage\x88\x01\x01B%\n" +
	"#_receiver_contract_execution_statusB\n" +
	"\n" +
	"\b_tx_hashB\x12\n" +
	"\x10_transaction_feeB\x10\n" +
	"\x0e_error_message*i\n" +
	"\x0fConfidenceLevel\x12\x19\n" +
	"\x15CONFIDENCE_LEVEL_SAFE\x10\x00\x12\x1b\n" +
	"\x17CONFIDENCE_LEVEL_LATEST\x10\x01\x12\x1e\n" +
	"\x1aCONFIDENCE_LEVEL_FINALIZED\x10\x02*\x82\x01\n" +
	"\x1fReceiverContractExecutionStatus\x12.\n" +
	"*RECEIVER_CONTRACT_EXECUTION_STATUS_SUCCESS\x10\x00\x12/\n" +
	"+RECEIVER_CONTRACT_EXECUTION_STATUS_REVERTED\x10\x01*N\n" +
	"\bTxStatus\x12\x13\n" +
	"\x0fTX_STATUS_FATAL\x10\x00\x12\x16\n" +
	"\x12TX_STATUS_REVERTED\x10\x01\x12\x15\n" +
	"\x11TX_STATUS_SUCCESS\x10\x022\xd7\x0f\n" +
	"\x06Client\x12\x80\x01\n" +
	"\fCallContract\x128.capabilities.blockchain.evm.v1alpha.CallContractRequest\x1a6.capabilities.blockchain.evm.v1alpha.CallContractReply\x12z\n" +
	"\n" +
	"FilterLogs\x126.capabilities.blockchain.evm.v1alpha.FilterLogsRequest\x1a4.capabilities.blockchain.evm.v1alpha.FilterLogsReply\x12w\n" +
	"\tBalanceAt\x125.capabilities.blockchain.evm.v1alpha.BalanceAtRequest\x1a3.capabilities.blockchain.evm.v1alpha.BalanceAtReply\x12}\n" +
	"\vEstimateGas\x127.capabilities.blockchain.evm.v1alpha.EstimateGasRequest\x1a5.capabilities.blockchain.evm.v1alpha.EstimateGasReply\x12\x98\x01\n" +
	"\x14GetTransactionByHash\x12@.capabilities.blockchain.evm.v1alpha.GetTransactionByHashRequest\x1a>.capabilities.blockchain.evm.v1alpha.GetTransactionByHashReply\x12\x9b\x01\n" +
	"\x15GetTransactionReceipt\x12A.capabilities.blockchain.evm.v1alpha.GetTransactionReceiptRequest\x1a?.capabilities.blockchain.evm.v1alpha.GetTransactionReceiptReply\x12\x86\x01\n" +
	"\x0eHeaderByNumber\x12:.capabilities.blockchain.evm.v1alpha.HeaderByNumberRequest\x1a8.capabilities.blockchain.evm.v1alpha.HeaderByNumberReply\x12n\n" +
	"\x13RegisterLogTracking\x12?.capabilities.blockchain.evm.v1alpha.RegisterLogTrackingRequest\x1a\x16.google.protobuf.Empty\x12r\n" +
	"\x15UnregisterLogTracking\x12A.capabilities.blockchain.evm.v1alpha.UnregisterLogTrackingRequest\x1a\x16.google.protobuf.Empty\x12v\n" +
	"\n" +
	"LogTrigger\x12<.capabilities.blockchain.evm.v1alpha.FilterLogTriggerRequest\x1a(.capabilities.blockchain.evm.v1alpha.Log0\x01\x12}\n" +
	"\vWriteReport\x127.capabilities.blockchain.evm.v1alpha.WriteReportRequest\x1a5.capabilities.blockchain.evm.v1alpha.WriteReportReply\x1a\xb8\x04\x82\xb5\x18\xb3\x04\b\x01\x12\tevm@1.0.0\x1a\xa3\x04\n" +
	"\rChainSelector\x12\x91\x04\x12\x8e\x04\n" +
	"\x1d\n" +
	"\x11avalanche-mainnet\x10\xd5\xe7\x8a\xc0\xe1\u0558\xa4Y\n" +
	"#\n" +
	"\x16avalanche-testnet-fuji\x10\x9b\xf9\xfc\x90\xa2\xe3\xa8\xf8\xcc\x01\n" +
	"/\n" +
	"#binance_smart_chain-mainnet-opbnb-1\x10\x89\xad\x8f\xef\x93\xc6\u05fb\x06\n" +
	"0\n" +
	"#binance_smart_chain-testnet-opbnb-1\x10\x8e\xf5\x85\x91\xc1\x83\x8f\x9c\xb8\x01\n" +
	"\x1c\n" +
	"\x10ethereum-mainnet\x10\x95\xf6\xf1\xe4ϲ\xa6\xc2E\n" +
	"'\n" +
	"\x1bethereum-mainnet-arbitrum-1\x10\xc4\xe8\x8d͎\x9b\xa1\xd7D\n" +
	"'\n" +
	"\x1bethereum-mainnet-optimism-1\x10\xb8\x95\x8f\xc3\xf7\xfe\xd0\xe93\n" +
	"%\n" +
	"\x18ethereum-testnet-sepolia\x10ٵ\xe4\xce\xfc\xc9\xee\xa0\xde\x01\n" +
	"/\n" +
	"#ethereum-testnet-sepolia-arbitrum-1\x10\xea\xce\xee\xff궄\xa30\n" +
	",\n" +
	"\x1fethereum-testnet-sepolia-base-1\x10\xb8ʹ\xef\xf6\x90\xaeȏ\x01\n" +
	"/\n" +
	"#ethereum-testnet-sepolia-optimism-1\x10\x9f\x86š\xbe\xd8\xc3\xc0H\n" +
	"\x1b\n" +
	"\x0fpolygon-mainnet\x10\xb1\xab\xe4\U0001a486\x9d8\n" +
	"!\n" +
	"\x14polygon-testnet-amoy\x10͏\xd6\xdf\xf1ǐ\xfa\xe1\x01b\x06proto3"

var (
	file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescOnce sync.Once
	file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescData []byte
)

func file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescGZIP() []byte {
	file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescOnce.Do(func() {
		file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_capabilities_blockchain_evm_v1alpha_client_proto_rawDesc), len(file_capabilities_blockchain_evm_v1alpha_client_proto_rawDesc)))
	})
	return file_capabilities_blockchain_evm_v1alpha_client_proto_rawDescData
}

var file_capabilities_blockchain_evm_v1alpha_client_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_capabilities_blockchain_evm_v1alpha_client_proto_goTypes = []any{
	(ConfidenceLevel)(0),                 // 0: capabilities.blockchain.evm.v1alpha.ConfidenceLevel
	(ReceiverContractExecutionStatus)(0), // 1: capabilities.blockchain.evm.v1alpha.ReceiverContractExecutionStatus
	(TxStatus)(0),                        // 2: capabilities.blockchain.evm.v1alpha.TxStatus
	(*TopicValues)(nil),                  // 3: capabilities.blockchain.evm.v1alpha.TopicValues
	(*FilterLogTriggerRequest)(nil),      // 4: capabilities.blockchain.evm.v1alpha.FilterLogTriggerRequest
	(*CallContractRequest)(nil),          // 5: capabilities.blockchain.evm.v1alpha.CallContractRequest
	(*CallContractReply)(nil),            // 6: capabilities.blockchain.evm.v1alpha.CallContractReply
	(*FilterLogsRequest)(nil),            // 7: capabilities.blockchain.evm.v1alpha.FilterLogsRequest
	(*FilterLogsReply)(nil),              // 8: capabilities.blockchain.evm.v1alpha.FilterLogsReply
	(*Log)(nil),                          // 9: capabilities.blockchain.evm.v1alpha.Log
	(*CallMsg)(nil),                      // 10: capabilities.blockchain.evm.v1alpha.CallMsg
	(*FilterQuery)(nil),                  // 11: capabilities.blockchain.evm.v1alpha.FilterQuery
	(*Topics)(nil),                       // 12: capabilities.blockchain.evm.v1alpha.Topics
	(*BalanceAtRequest)(nil),             // 13: capabilities.blockchain.evm.v1alpha.BalanceAtRequest
	(*BalanceAtReply)(nil),               // 14: capabilities.blockchain.evm.v1alpha.BalanceAtReply
	(*EstimateGasRequest)(nil),           // 15: capabilities.blockchain.evm.v1alpha.EstimateGasRequest
	(*EstimateGasReply)(nil),             // 16: capabilities.blockchain.evm.v1alpha.EstimateGasReply
	(*GetTransactionByHashRequest)(nil),  // 17: capabilities.blockchain.evm.v1alpha.GetTransactionByHashRequest
	(*GetTransactionByHashReply)(nil),    // 18: capabilities.blockchain.evm.v1alpha.GetTransactionByHashReply
	(*Transaction)(nil),                  // 19: capabilities.blockchain.evm.v1alpha.Transaction
	(*GetTransactionReceiptRequest)(nil), // 20: capabilities.blockchain.evm.v1alpha.GetTransactionReceiptRequest
	(*GetTransactionReceiptReply)(nil),   // 21: capabilities.blockchain.evm.v1alpha.GetTransactionReceiptReply
	(*Receipt)(nil),                      // 22: capabilities.blockchain.evm.v1alpha.Receipt
	(*HeaderByNumberRequest)(nil),        // 23: capabilities.blockchain.evm.v1alpha.HeaderByNumberRequest
	(*HeaderByNumberReply)(nil),          // 24: capabilities.blockchain.evm.v1alpha.HeaderByNumberReply
	(*Header)(nil),                       // 25: capabilities.blockchain.evm.v1alpha.Header
	(*RegisterLogTrackingRequest)(nil),   // 26: capabilities.blockchain.evm.v1alpha.RegisterLogTrackingRequest
	(*LPFilter)(nil),                     // 27: capabilities.blockchain.evm.v1alpha.LPFilter
	(*UnregisterLogTrackingRequest)(nil), // 28: capabilities.blockchain.evm.v1alpha.UnregisterLogTrackingRequest
	(*WriteReportRequest)(nil),           // 29: capabilities.blockchain.evm.v1alpha.WriteReportRequest
	(*GasConfig)(nil),                    // 30: capabilities.blockchain.evm.v1alpha.GasConfig
	(*WriteReportReply)(nil),             // 31: capabilities.blockchain.evm.v1alpha.WriteReportReply
	(*pb.BigInt)(nil),                    // 32: values.v1.BigInt
	(*pb1.ReportResponse)(nil),           // 33: sdk.v1alpha.ReportResponse
	(*emptypb.Empty)(nil),                // 34: google.protobuf.Empty
}
var file_capabilities_blockchain_evm_v1alpha_client_proto_depIdxs = []int32{
	3,  // 0: capabilities.blockchain.evm.v1alpha.FilterLogTriggerRequest.topics:type_name -> capabilities.blockchain.evm.v1alpha.TopicValues
	0,  // 1: capabilities.blockchain.evm.v1alpha.FilterLogTriggerRequest.confidence:type_name -> capabilities.blockchain.evm.v1alpha.ConfidenceLevel
	10, // 2: capabilities.blockchain.evm.v1alpha.CallContractRequest.call:type_name -> capabilities.blockchain.evm.v1alpha.CallMsg
	32, // 3: capabilities.blockchain.evm.v1alpha.CallContractRequest.block_number:type_name -> values.v1.BigInt
	11, // 4: capabilities.blockchain.evm.v1alpha.FilterLogsRequest.filter_query:type_name -> capabilities.blockchain.evm.v1alpha.FilterQuery
	9,  // 5: capabilities.blockchain.evm.v1alpha.FilterLogsReply.logs:type_name -> capabilities.blockchain.evm.v1alpha.Log
	32, // 6: capabilities.blockchain.evm.v1alpha.Log.block_number:type_name -> values.v1.BigInt
	32, // 7: capabilities.blockchain.evm.v1alpha.FilterQuery.from_block:type_name -> values.v1.BigInt
	32, // 8: capabilities.blockchain.evm.v1alpha.FilterQuery.to_block:type_name -> values.v1.BigInt
	12, // 9: capabilities.blockchain.evm.v1alpha.FilterQuery.topics:type_name -> capabilities.blockchain.evm.v1alpha.Topics
	32, // 10: capabilities.blockchain.evm.v1alpha.BalanceAtRequest.block_number:type_name -> values.v1.BigInt
	32, // 11: capabilities.blockchain.evm.v1alpha.BalanceAtReply.balance:type_name -> values.v1.BigInt
	10, // 12: capabilities.blockchain.evm.v1alpha.EstimateGasRequest.msg:type_name -> capabilities.blockchain.evm.v1alpha.CallMsg
	19, // 13: capabilities.blockchain.evm.v1alpha.GetTransactionByHashReply.transaction:type_name -> capabilities.blockchain.evm.v1alpha.Transaction
	32, // 14: capabilities.blockchain.evm.v1alpha.Transaction.value:type_name -> values.v1.BigInt
	32, // 15: capabilities.blockchain.evm.v1alpha.Transaction.gas_price:type_name -> values.v1.BigInt
	22, // 16: capabilities.blockchain.evm.v1alpha.GetTransactionReceiptReply.receipt:type_name -> capabilities.blockchain.evm.v1alpha.Receipt
	9,  // 17: capabilities.blockchain.evm.v1alpha.Receipt.logs:type_name -> capabilities.blockchain.evm.v1alpha.Log
	32, // 18: capabilities.blockchain.evm.v1alpha.Receipt.effective_gas_price:type_name -> values.v1.BigInt
	32, // 19: capabilities.blockchain.evm.v1alpha.Receipt.block_number:type_name -> values.v1.BigInt
	32, // 20: capabilities.blockchain.evm.v1alpha.HeaderByNumberRequest.block_number:type_name -> values.v1.BigInt
	25, // 21: capabilities.blockchain.evm.v1alpha.HeaderByNumberReply.header:type_name -> capabilities.blockchain.evm.v1alpha.Header
	32, // 22: capabilities.blockchain.evm.v1alpha.Header.block_number:type_name -> values.v1.BigInt
	27, // 23: capabilities.blockchain.evm.v1alpha.RegisterLogTrackingRequest.filter:type_name -> capabilities.blockchain.evm.v1alpha.LPFilter
	33, // 24: capabilities.blockchain.evm.v1alpha.WriteReportRequest.report:type_name -> sdk.v1alpha.ReportResponse
	30, // 25: capabilities.blockchain.evm.v1alpha.WriteReportRequest.gas_config:type_name -> capabilities.blockchain.evm.v1alpha.GasConfig
	2,  // 26: capabilities.blockchain.evm.v1alpha.WriteReportReply.tx_status:type_name -> capabilities.blockchain.evm.v1alpha.TxStatus
	1,  // 27: capabilities.blockchain.evm.v1alpha.WriteReportReply.receiver_contract_execution_status:type_name -> capabilities.blockchain.evm.v1alpha.ReceiverContractExecutionStatus
	32, // 28: capabilities.blockchain.evm.v1alpha.WriteReportReply.transaction_fee:type_name -> values.v1.BigInt
	5,  // 29: capabilities.blockchain.evm.v1alpha.Client.CallContract:input_type -> capabilities.blockchain.evm.v1alpha.CallContractRequest
	7,  // 30: capabilities.blockchain.evm.v1alpha.Client.FilterLogs:input_type -> capabilities.blockchain.evm.v1alpha.FilterLogsRequest
	13, // 31: capabilities.blockchain.evm.v1alpha.Client.BalanceAt:input_type -> capabilities.blockchain.evm.v1alpha.BalanceAtRequest
	15, // 32: capabilities.blockchain.evm.v1alpha.Client.EstimateGas:input_type -> capabilities.blockchain.evm.v1alpha.EstimateGasRequest
	17, // 33: capabilities.blockchain.evm.v1alpha.Client.GetTransactionByHash:input_type -> capabilities.blockchain.evm.v1alpha.GetTransactionByHashRequest
	20, // 34: capabilities.blockchain.evm.v1alpha.Client.GetTransactionReceipt:input_type -> capabilities.blockchain.evm.v1alpha.GetTransactionReceiptRequest
	23, // 35: capabilities.blockchain.evm.v1alpha.Client.HeaderByNumber:input_type -> capabilities.blockchain.evm.v1alpha.HeaderByNumberRequest
	26, // 36: capabilities.blockchain.evm.v1alpha.Client.RegisterLogTracking:input_type -> capabilities.blockchain.evm.v1alpha.RegisterLogTrackingRequest
	28, // 37: capabilities.blockchain.evm.v1alpha.Client.UnregisterLogTracking:input_type -> capabilities.blockchain.evm.v1alpha.UnregisterLogTrackingRequest
	4,  // 38: capabilities.blockchain.evm.v1alpha.Client.LogTrigger:input_type -> capabilities.blockchain.evm.v1alpha.FilterLogTriggerRequest
	29, // 39: capabilities.blockchain.evm.v1alpha.Client.WriteReport:input_type -> capabilities.blockchain.evm.v1alpha.WriteReportRequest
	6,  // 40: capabilities.blockchain.evm.v1alpha.Client.CallContract:output_type -> capabilities.blockchain.evm.v1alpha.CallContractReply
	8,  // 41: capabilities.blockchain.evm.v1alpha.Client.FilterLogs:output_type -> capabilities.blockchain.evm.v1alpha.FilterLogsReply
	14, // 42: capabilities.blockchain.evm.v1alpha.Client.BalanceAt:output_type -> capabilities.blockchain.evm.v1alpha.BalanceAtReply
	16, // 43: capabilities.blockchain.evm.v1alpha.Client.EstimateGas:output_type -> capabilities.blockchain.evm.v1alpha.EstimateGasReply
	18, // 44: capabilities.blockchain.evm.v1alpha.Client.GetTransactionByHash:output_type -> capabilities.blockchain.evm.v1alpha.GetTransactionByHashReply
	21, // 45: capabilities.blockchain.evm.v1alpha.Client.GetTransactionReceipt:output_type -> capabilities.blockchain.evm.v1alpha.GetTransactionReceiptReply
	24, // 46: capabilities.blockchain.evm.v1alpha.Client.HeaderByNumber:output_type -> capabilities.blockchain.evm.v1alpha.HeaderByNumberReply
	34, // 47: capabilities.blockchain.evm.v1alpha.Client.RegisterLogTracking:output_type -> google.protobuf.Empty
	34, // 48: capabilities.blockchain.evm.v1alpha.Client.UnregisterLogTracking:output_type -> google.protobuf.Empty
	9,  // 49: capabilities.blockchain.evm.v1alpha.Client.LogTrigger:output_type -> capabilities.blockchain.evm.v1alpha.Log
	31, // 50: capabilities.blockchain.evm.v1alpha.Client.WriteReport:output_type -> capabilities.blockchain.evm.v1alpha.WriteReportReply
	40, // [40:51] is the sub-list for method output_type
	29, // [29:40] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_capabilities_blockchain_evm_v1alpha_client_proto_init() }
func file_capabilities_blockchain_evm_v1alpha_client_proto_init() {
	if File_capabilities_blockchain_evm_v1alpha_client_proto != nil {
		return
	}
	file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[26].OneofWrappers = []any{}
	file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes[28].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_capabilities_blockchain_evm_v1alpha_client_proto_rawDesc), len(file_capabilities_blockchain_evm_v1alpha_client_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_capabilities_blockchain_evm_v1alpha_client_proto_goTypes,
		DependencyIndexes: file_capabilities_blockchain_evm_v1alpha_client_proto_depIdxs,
		EnumInfos:         file_capabilities_blockchain_evm_v1alpha_client_proto_enumTypes,
		MessageInfos:      file_capabilities_blockchain_evm_v1alpha_client_proto_msgTypes,
	}.Build()
	File_capabilities_blockchain_evm_v1alpha_client_proto = out.File
	file_capabilities_blockchain_evm_v1alpha_client_proto_goTypes = nil
	file_capabilities_blockchain_evm_v1alpha_client_proto_depIdxs = nil
}
