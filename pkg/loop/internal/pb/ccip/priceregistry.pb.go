// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: priceregistry.proto

package ccippb

import (
	pb "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// / GetTokenPriceUpdatesCreatedAfter is a gRPC adapter for the input arguments of
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/PriceRegistryReader.GetTokenPriceUpdatesCreatedAfter]
type GetTokenPriceUpdatesCreatedAfterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedAfter  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_after,json=createdAfter,proto3" json:"created_after,omitempty"`
	Confirmations uint64                 `protobuf:"varint,2,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenPriceUpdatesCreatedAfterRequest) Reset() {
	*x = GetTokenPriceUpdatesCreatedAfterRequest{}
	mi := &file_priceregistry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenPriceUpdatesCreatedAfterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPriceUpdatesCreatedAfterRequest) ProtoMessage() {}

func (x *GetTokenPriceUpdatesCreatedAfterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPriceUpdatesCreatedAfterRequest.ProtoReflect.Descriptor instead.
func (*GetTokenPriceUpdatesCreatedAfterRequest) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{0}
}

func (x *GetTokenPriceUpdatesCreatedAfterRequest) GetCreatedAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAfter
	}
	return nil
}

func (x *GetTokenPriceUpdatesCreatedAfterRequest) GetConfirmations() uint64 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

// / GetTokenPriceUpdatesCreatedAfterResponse is a gRPC adapter for the return values of
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/PriceRegistryReader.GetTokenPriceUpdatesCreatedAfter]
type GetTokenPriceUpdatesCreatedAfterResponse struct {
	state             protoimpl.MessageState        `protogen:"open.v1"`
	TokenPriceUpdates []*TokenPriceUpdateWithTxMeta `protobuf:"bytes,1,rep,name=token_price_updates,json=tokenPriceUpdates,proto3" json:"token_price_updates,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetTokenPriceUpdatesCreatedAfterResponse) Reset() {
	*x = GetTokenPriceUpdatesCreatedAfterResponse{}
	mi := &file_priceregistry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenPriceUpdatesCreatedAfterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPriceUpdatesCreatedAfterResponse) ProtoMessage() {}

func (x *GetTokenPriceUpdatesCreatedAfterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPriceUpdatesCreatedAfterResponse.ProtoReflect.Descriptor instead.
func (*GetTokenPriceUpdatesCreatedAfterResponse) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{1}
}

func (x *GetTokenPriceUpdatesCreatedAfterResponse) GetTokenPriceUpdates() []*TokenPriceUpdateWithTxMeta {
	if x != nil {
		return x.TokenPriceUpdates
	}
	return nil
}

// GetGasPriceUpdatesCreatedAfterRequest is a gRPC adapter for the input arguments of
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/PriceRegistryReader.GetGasPriceUpdatesCreatedAfter]
type GetGasPriceUpdatesCreatedAfterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainSelector uint64                 `protobuf:"varint,1,opt,name=chain_selector,json=chainSelector,proto3" json:"chain_selector,omitempty"`
	CreatedAfter  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_after,json=createdAfter,proto3" json:"created_after,omitempty"`
	Confirmations uint64                 `protobuf:"varint,3,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGasPriceUpdatesCreatedAfterRequest) Reset() {
	*x = GetGasPriceUpdatesCreatedAfterRequest{}
	mi := &file_priceregistry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGasPriceUpdatesCreatedAfterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGasPriceUpdatesCreatedAfterRequest) ProtoMessage() {}

func (x *GetGasPriceUpdatesCreatedAfterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGasPriceUpdatesCreatedAfterRequest.ProtoReflect.Descriptor instead.
func (*GetGasPriceUpdatesCreatedAfterRequest) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{2}
}

func (x *GetGasPriceUpdatesCreatedAfterRequest) GetChainSelector() uint64 {
	if x != nil {
		return x.ChainSelector
	}
	return 0
}

func (x *GetGasPriceUpdatesCreatedAfterRequest) GetCreatedAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAfter
	}
	return nil
}

func (x *GetGasPriceUpdatesCreatedAfterRequest) GetConfirmations() uint64 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

// GetGasPriceUpdatesCreatedAfterResponse is a gRPC adapter for the return values of
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/PriceRegistryReader.GetGasPriceUpdatesCreatedAfter]
type GetGasPriceUpdatesCreatedAfterResponse struct {
	state           protoimpl.MessageState      `protogen:"open.v1"`
	GasPriceUpdates []*GasPriceUpdateWithTxMeta `protobuf:"bytes,1,rep,name=gas_price_updates,json=gasPriceUpdates,proto3" json:"gas_price_updates,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetGasPriceUpdatesCreatedAfterResponse) Reset() {
	*x = GetGasPriceUpdatesCreatedAfterResponse{}
	mi := &file_priceregistry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGasPriceUpdatesCreatedAfterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGasPriceUpdatesCreatedAfterResponse) ProtoMessage() {}

func (x *GetGasPriceUpdatesCreatedAfterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGasPriceUpdatesCreatedAfterResponse.ProtoReflect.Descriptor instead.
func (*GetGasPriceUpdatesCreatedAfterResponse) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{3}
}

func (x *GetGasPriceUpdatesCreatedAfterResponse) GetGasPriceUpdates() []*GasPriceUpdateWithTxMeta {
	if x != nil {
		return x.GasPriceUpdates
	}
	return nil
}

// GetAllGasPriceUpdatesCreatedAfterRequest is a gRPC adapter for the input arguments of
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/PriceRegistryReader.GetAllGasPriceUpdatesCreatedAfter]
type GetAllGasPriceUpdatesCreatedAfterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedAfter  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_after,json=createdAfter,proto3" json:"created_after,omitempty"`
	Confirmations uint64                 `protobuf:"varint,2,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllGasPriceUpdatesCreatedAfterRequest) Reset() {
	*x = GetAllGasPriceUpdatesCreatedAfterRequest{}
	mi := &file_priceregistry_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllGasPriceUpdatesCreatedAfterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGasPriceUpdatesCreatedAfterRequest) ProtoMessage() {}

func (x *GetAllGasPriceUpdatesCreatedAfterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGasPriceUpdatesCreatedAfterRequest.ProtoReflect.Descriptor instead.
func (*GetAllGasPriceUpdatesCreatedAfterRequest) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{4}
}

func (x *GetAllGasPriceUpdatesCreatedAfterRequest) GetCreatedAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAfter
	}
	return nil
}

func (x *GetAllGasPriceUpdatesCreatedAfterRequest) GetConfirmations() uint64 {
	if x != nil {
		return x.Confirmations
	}
	return 0
}

// GetAllGasPriceUpdatesCreatedAfterResponse is a gRPC adapter for the return values of
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/PriceRegistryReader.GetAllGasPriceUpdatesCreatedAfter]
type GetAllGasPriceUpdatesCreatedAfterResponse struct {
	state           protoimpl.MessageState      `protogen:"open.v1"`
	GasPriceUpdates []*GasPriceUpdateWithTxMeta `protobuf:"bytes,1,rep,name=gas_price_updates,json=gasPriceUpdates,proto3" json:"gas_price_updates,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetAllGasPriceUpdatesCreatedAfterResponse) Reset() {
	*x = GetAllGasPriceUpdatesCreatedAfterResponse{}
	mi := &file_priceregistry_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllGasPriceUpdatesCreatedAfterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllGasPriceUpdatesCreatedAfterResponse) ProtoMessage() {}

func (x *GetAllGasPriceUpdatesCreatedAfterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllGasPriceUpdatesCreatedAfterResponse.ProtoReflect.Descriptor instead.
func (*GetAllGasPriceUpdatesCreatedAfterResponse) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllGasPriceUpdatesCreatedAfterResponse) GetGasPriceUpdates() []*GasPriceUpdateWithTxMeta {
	if x != nil {
		return x.GasPriceUpdates
	}
	return nil
}

// GetPriceRegistryAddressResponse is a gRPC adapter for the return values of
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/PriceRegistryReader.GetPriceRegistryAddress]
type GetPriceRegistryAddressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPriceRegistryAddressResponse) Reset() {
	*x = GetPriceRegistryAddressResponse{}
	mi := &file_priceregistry_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPriceRegistryAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPriceRegistryAddressResponse) ProtoMessage() {}

func (x *GetPriceRegistryAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPriceRegistryAddressResponse.ProtoReflect.Descriptor instead.
func (*GetPriceRegistryAddressResponse) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{6}
}

func (x *GetPriceRegistryAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// GetFeeTokensResponse is a gRPC adapter for the return values of
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/PriceRegistryReader.GetFeeTokens]
type GetFeeTokensResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	FeeTokenAddresses []string               `protobuf:"bytes,1,rep,name=fee_token_addresses,json=feeTokenAddresses,proto3" json:"fee_token_addresses,omitempty"` //[]Address
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetFeeTokensResponse) Reset() {
	*x = GetFeeTokensResponse{}
	mi := &file_priceregistry_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeeTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeTokensResponse) ProtoMessage() {}

func (x *GetFeeTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeTokensResponse.ProtoReflect.Descriptor instead.
func (*GetFeeTokensResponse) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{7}
}

func (x *GetFeeTokensResponse) GetFeeTokenAddresses() []string {
	if x != nil {
		return x.FeeTokenAddresses
	}
	return nil
}

// GetTokenPricesRequest is a gRPC adapter for the input arguments of
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/PriceRegistryReader.GetTokenPrices]
type GetTokenPricesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TokenAddresses []string               `protobuf:"bytes,1,rep,name=token_addresses,json=tokenAddresses,proto3" json:"token_addresses,omitempty"` //[]Address
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetTokenPricesRequest) Reset() {
	*x = GetTokenPricesRequest{}
	mi := &file_priceregistry_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenPricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPricesRequest) ProtoMessage() {}

func (x *GetTokenPricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPricesRequest.ProtoReflect.Descriptor instead.
func (*GetTokenPricesRequest) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{8}
}

func (x *GetTokenPricesRequest) GetTokenAddresses() []string {
	if x != nil {
		return x.TokenAddresses
	}
	return nil
}

// GetTokenPricesResponse is a gRPC adapter for the return values of
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/PriceRegistryReader.GetTokenPrices]
type GetTokenPricesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TokenPrices   []*TokenPriceUpdate    `protobuf:"bytes,1,rep,name=token_prices,json=tokenPrices,proto3" json:"token_prices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenPricesResponse) Reset() {
	*x = GetTokenPricesResponse{}
	mi := &file_priceregistry_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenPricesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenPricesResponse) ProtoMessage() {}

func (x *GetTokenPricesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenPricesResponse.ProtoReflect.Descriptor instead.
func (*GetTokenPricesResponse) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{9}
}

func (x *GetTokenPricesResponse) GetTokenPrices() []*TokenPriceUpdate {
	if x != nil {
		return x.TokenPrices
	}
	return nil
}

// GetTokensDecimalsRequest is a gRPC adapter for the input arguments of
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/PriceRegistryReader.GetTokensDecimals]
type GetTokensDecimalsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TokenAddresses []string               `protobuf:"bytes,1,rep,name=token_addresses,json=tokenAddresses,proto3" json:"token_addresses,omitempty"` //[]Address
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetTokensDecimalsRequest) Reset() {
	*x = GetTokensDecimalsRequest{}
	mi := &file_priceregistry_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokensDecimalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokensDecimalsRequest) ProtoMessage() {}

func (x *GetTokensDecimalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokensDecimalsRequest.ProtoReflect.Descriptor instead.
func (*GetTokensDecimalsRequest) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{10}
}

func (x *GetTokensDecimalsRequest) GetTokenAddresses() []string {
	if x != nil {
		return x.TokenAddresses
	}
	return nil
}

// GetTokensDecimalsResponse is a gRPC adapter for the return values of
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/PriceRegistryReader.GetTokensDecimals]
type GetTokensDecimalsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Decimals      []uint32               `protobuf:"varint,1,rep,packed,name=decimals,proto3" json:"decimals,omitempty"` //uint8
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokensDecimalsResponse) Reset() {
	*x = GetTokensDecimalsResponse{}
	mi := &file_priceregistry_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokensDecimalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokensDecimalsResponse) ProtoMessage() {}

func (x *GetTokensDecimalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokensDecimalsResponse.ProtoReflect.Descriptor instead.
func (*GetTokensDecimalsResponse) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{11}
}

func (x *GetTokensDecimalsResponse) GetDecimals() []uint32 {
	if x != nil {
		return x.Decimals
	}
	return nil
}

// GasPriceUpdateWithTxMeta is a gRPC adapter for the struct
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/GasPriceUpdateWithTxMeta]
type GasPriceUpdateWithTxMeta struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	GasPriceUpdate *GasPriceUpdate        `protobuf:"bytes,1,opt,name=gas_price_update,json=gasPriceUpdate,proto3" json:"gas_price_update,omitempty"`
	TxMeta         *TxMeta                `protobuf:"bytes,2,opt,name=tx_meta,json=txMeta,proto3" json:"tx_meta,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GasPriceUpdateWithTxMeta) Reset() {
	*x = GasPriceUpdateWithTxMeta{}
	mi := &file_priceregistry_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GasPriceUpdateWithTxMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasPriceUpdateWithTxMeta) ProtoMessage() {}

func (x *GasPriceUpdateWithTxMeta) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasPriceUpdateWithTxMeta.ProtoReflect.Descriptor instead.
func (*GasPriceUpdateWithTxMeta) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{12}
}

func (x *GasPriceUpdateWithTxMeta) GetGasPriceUpdate() *GasPriceUpdate {
	if x != nil {
		return x.GasPriceUpdate
	}
	return nil
}

func (x *GasPriceUpdateWithTxMeta) GetTxMeta() *TxMeta {
	if x != nil {
		return x.TxMeta
	}
	return nil
}

// GasPriceUpdate is a gRPC adapter for the struct
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/GasPriceUpdate]
type GasPriceUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Price         *GasPrice              `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	UnixTimestamp *pb.BigInt             `protobuf:"bytes,2,opt,name=unix_timestamp,json=unixTimestamp,proto3" json:"unix_timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GasPriceUpdate) Reset() {
	*x = GasPriceUpdate{}
	mi := &file_priceregistry_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GasPriceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasPriceUpdate) ProtoMessage() {}

func (x *GasPriceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasPriceUpdate.ProtoReflect.Descriptor instead.
func (*GasPriceUpdate) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{13}
}

func (x *GasPriceUpdate) GetPrice() *GasPrice {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *GasPriceUpdate) GetUnixTimestamp() *pb.BigInt {
	if x != nil {
		return x.UnixTimestamp
	}
	return nil
}

// TokenPriceUpdateWithTxMeta is a gRPC adapter for the struct
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/TokenPriceUpdateWithTxMeta]
type TokenPriceUpdateWithTxMeta struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TokenPriceUpdate *TokenPriceUpdate      `protobuf:"bytes,1,opt,name=token_price_update,json=tokenPriceUpdate,proto3" json:"token_price_update,omitempty"`
	TxMeta           *TxMeta                `protobuf:"bytes,2,opt,name=tx_meta,json=txMeta,proto3" json:"tx_meta,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TokenPriceUpdateWithTxMeta) Reset() {
	*x = TokenPriceUpdateWithTxMeta{}
	mi := &file_priceregistry_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenPriceUpdateWithTxMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenPriceUpdateWithTxMeta) ProtoMessage() {}

func (x *TokenPriceUpdateWithTxMeta) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenPriceUpdateWithTxMeta.ProtoReflect.Descriptor instead.
func (*TokenPriceUpdateWithTxMeta) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{14}
}

func (x *TokenPriceUpdateWithTxMeta) GetTokenPriceUpdate() *TokenPriceUpdate {
	if x != nil {
		return x.TokenPriceUpdate
	}
	return nil
}

func (x *TokenPriceUpdateWithTxMeta) GetTxMeta() *TxMeta {
	if x != nil {
		return x.TxMeta
	}
	return nil
}

// TokenPriceUpdate is a gRPC adapter for the struct
// [github.com/smartcontractkit/chainlink-common/chainlink-common/pkg/types/ccip/TokenPriceUpdate]
type TokenPriceUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Price         *TokenPrice            `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	UnixTimestamp *pb.BigInt             `protobuf:"bytes,2,opt,name=unix_timestamp,json=unixTimestamp,proto3" json:"unix_timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenPriceUpdate) Reset() {
	*x = TokenPriceUpdate{}
	mi := &file_priceregistry_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenPriceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenPriceUpdate) ProtoMessage() {}

func (x *TokenPriceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_priceregistry_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenPriceUpdate.ProtoReflect.Descriptor instead.
func (*TokenPriceUpdate) Descriptor() ([]byte, []int) {
	return file_priceregistry_proto_rawDescGZIP(), []int{15}
}

func (x *TokenPriceUpdate) GetPrice() *TokenPrice {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *TokenPriceUpdate) GetUnixTimestamp() *pb.BigInt {
	if x != nil {
		return x.UnixTimestamp
	}
	return nil
}

var File_priceregistry_proto protoreflect.FileDescriptor

var file_priceregistry_proto_rawDesc = string([]byte{
	0x0a, 0x13, 0x70, 0x72, 0x69, 0x63, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x72, 0x65, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x90, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x28, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x13, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x78, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x11, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x25, 0x47,
	0x65, 0x74, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a,
	0x11, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70,
	0x2e, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x78, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0f, 0x67, 0x61, 0x73, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x28, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x88,
	0x01, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x11,
	0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e,
	0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x54, 0x78, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0f, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x3b, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x46, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x13, 0x66, 0x65, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x66, 0x65, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x40,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x22, 0x64, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0c, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x18, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x54, 0x78, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x4f, 0x0a, 0x10, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x6f,
	0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63,
	0x63, 0x69, 0x70, 0x2e, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x0e, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x54, 0x78, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x06, 0x74, 0x78, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x7c, 0x0a, 0x0e, 0x47, 0x61,
	0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x6f,
	0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63,
	0x63, 0x69, 0x70, 0x2e, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0e, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x6f,
	0x6f, 0x70, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x0d, 0x75, 0x6e, 0x69, 0x78, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xab, 0x01, 0x0a, 0x1a, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x78, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x55, 0x0a, 0x12, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x10, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x36,
	0x0a, 0x07, 0x74, 0x78, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x54, 0x78, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x06,
	0x74, 0x78, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x6f, 0x6f,
	0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63,
	0x69, 0x70, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0e, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c,
	0x6f, 0x6f, 0x70, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x0d, 0x75, 0x6e, 0x69, 0x78,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0xe7, 0x07, 0x0a, 0x13, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0xa5, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x3e, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9f, 0x01, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x2e, 0x6c,
	0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e,
	0x63, 0x63, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x6c, 0x6f, 0x6f,
	0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63,
	0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa8, 0x01, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x12, 0x3f, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x40, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x36, 0x2e, 0x6c,
	0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e,
	0x63, 0x63, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b,
	0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70,
	0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x2c, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x44, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x73, 0x12, 0x2f, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x42, 0x4f, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6b,
	0x69, 0x74, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2d, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6c, 0x6f, 0x6f, 0x70, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x63, 0x69, 0x70, 0x3b, 0x63, 0x63,
	0x69, 0x70, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_priceregistry_proto_rawDescOnce sync.Once
	file_priceregistry_proto_rawDescData []byte
)

func file_priceregistry_proto_rawDescGZIP() []byte {
	file_priceregistry_proto_rawDescOnce.Do(func() {
		file_priceregistry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_priceregistry_proto_rawDesc), len(file_priceregistry_proto_rawDesc)))
	})
	return file_priceregistry_proto_rawDescData
}

var file_priceregistry_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_priceregistry_proto_goTypes = []any{
	(*GetTokenPriceUpdatesCreatedAfterRequest)(nil),   // 0: loop.internal.pb.ccip.GetTokenPriceUpdatesCreatedAfterRequest
	(*GetTokenPriceUpdatesCreatedAfterResponse)(nil),  // 1: loop.internal.pb.ccip.GetTokenPriceUpdatesCreatedAfterResponse
	(*GetGasPriceUpdatesCreatedAfterRequest)(nil),     // 2: loop.internal.pb.ccip.GetGasPriceUpdatesCreatedAfterRequest
	(*GetGasPriceUpdatesCreatedAfterResponse)(nil),    // 3: loop.internal.pb.ccip.GetGasPriceUpdatesCreatedAfterResponse
	(*GetAllGasPriceUpdatesCreatedAfterRequest)(nil),  // 4: loop.internal.pb.ccip.GetAllGasPriceUpdatesCreatedAfterRequest
	(*GetAllGasPriceUpdatesCreatedAfterResponse)(nil), // 5: loop.internal.pb.ccip.GetAllGasPriceUpdatesCreatedAfterResponse
	(*GetPriceRegistryAddressResponse)(nil),           // 6: loop.internal.pb.ccip.GetPriceRegistryAddressResponse
	(*GetFeeTokensResponse)(nil),                      // 7: loop.internal.pb.ccip.GetFeeTokensResponse
	(*GetTokenPricesRequest)(nil),                     // 8: loop.internal.pb.ccip.GetTokenPricesRequest
	(*GetTokenPricesResponse)(nil),                    // 9: loop.internal.pb.ccip.GetTokenPricesResponse
	(*GetTokensDecimalsRequest)(nil),                  // 10: loop.internal.pb.ccip.GetTokensDecimalsRequest
	(*GetTokensDecimalsResponse)(nil),                 // 11: loop.internal.pb.ccip.GetTokensDecimalsResponse
	(*GasPriceUpdateWithTxMeta)(nil),                  // 12: loop.internal.pb.ccip.GasPriceUpdateWithTxMeta
	(*GasPriceUpdate)(nil),                            // 13: loop.internal.pb.ccip.GasPriceUpdate
	(*TokenPriceUpdateWithTxMeta)(nil),                // 14: loop.internal.pb.ccip.TokenPriceUpdateWithTxMeta
	(*TokenPriceUpdate)(nil),                          // 15: loop.internal.pb.ccip.TokenPriceUpdate
	(*timestamppb.Timestamp)(nil),                     // 16: google.protobuf.Timestamp
	(*TxMeta)(nil),                                    // 17: loop.internal.pb.ccip.TxMeta
	(*GasPrice)(nil),                                  // 18: loop.internal.pb.ccip.GasPrice
	(*pb.BigInt)(nil),                                 // 19: loop.BigInt
	(*TokenPrice)(nil),                                // 20: loop.internal.pb.ccip.TokenPrice
	(*emptypb.Empty)(nil),                             // 21: google.protobuf.Empty
}
var file_priceregistry_proto_depIdxs = []int32{
	16, // 0: loop.internal.pb.ccip.GetTokenPriceUpdatesCreatedAfterRequest.created_after:type_name -> google.protobuf.Timestamp
	14, // 1: loop.internal.pb.ccip.GetTokenPriceUpdatesCreatedAfterResponse.token_price_updates:type_name -> loop.internal.pb.ccip.TokenPriceUpdateWithTxMeta
	16, // 2: loop.internal.pb.ccip.GetGasPriceUpdatesCreatedAfterRequest.created_after:type_name -> google.protobuf.Timestamp
	12, // 3: loop.internal.pb.ccip.GetGasPriceUpdatesCreatedAfterResponse.gas_price_updates:type_name -> loop.internal.pb.ccip.GasPriceUpdateWithTxMeta
	16, // 4: loop.internal.pb.ccip.GetAllGasPriceUpdatesCreatedAfterRequest.created_after:type_name -> google.protobuf.Timestamp
	12, // 5: loop.internal.pb.ccip.GetAllGasPriceUpdatesCreatedAfterResponse.gas_price_updates:type_name -> loop.internal.pb.ccip.GasPriceUpdateWithTxMeta
	15, // 6: loop.internal.pb.ccip.GetTokenPricesResponse.token_prices:type_name -> loop.internal.pb.ccip.TokenPriceUpdate
	13, // 7: loop.internal.pb.ccip.GasPriceUpdateWithTxMeta.gas_price_update:type_name -> loop.internal.pb.ccip.GasPriceUpdate
	17, // 8: loop.internal.pb.ccip.GasPriceUpdateWithTxMeta.tx_meta:type_name -> loop.internal.pb.ccip.TxMeta
	18, // 9: loop.internal.pb.ccip.GasPriceUpdate.price:type_name -> loop.internal.pb.ccip.GasPrice
	19, // 10: loop.internal.pb.ccip.GasPriceUpdate.unix_timestamp:type_name -> loop.BigInt
	15, // 11: loop.internal.pb.ccip.TokenPriceUpdateWithTxMeta.token_price_update:type_name -> loop.internal.pb.ccip.TokenPriceUpdate
	17, // 12: loop.internal.pb.ccip.TokenPriceUpdateWithTxMeta.tx_meta:type_name -> loop.internal.pb.ccip.TxMeta
	20, // 13: loop.internal.pb.ccip.TokenPriceUpdate.price:type_name -> loop.internal.pb.ccip.TokenPrice
	19, // 14: loop.internal.pb.ccip.TokenPriceUpdate.unix_timestamp:type_name -> loop.BigInt
	0,  // 15: loop.internal.pb.ccip.PriceRegistryReader.GetTokenPriceUpdatesCreatedAfter:input_type -> loop.internal.pb.ccip.GetTokenPriceUpdatesCreatedAfterRequest
	2,  // 16: loop.internal.pb.ccip.PriceRegistryReader.GetGasPriceUpdatesCreatedAfter:input_type -> loop.internal.pb.ccip.GetGasPriceUpdatesCreatedAfterRequest
	4,  // 17: loop.internal.pb.ccip.PriceRegistryReader.GetAllGasPriceUpdatesCreatedAfter:input_type -> loop.internal.pb.ccip.GetAllGasPriceUpdatesCreatedAfterRequest
	21, // 18: loop.internal.pb.ccip.PriceRegistryReader.GetAddress:input_type -> google.protobuf.Empty
	21, // 19: loop.internal.pb.ccip.PriceRegistryReader.GetFeeTokens:input_type -> google.protobuf.Empty
	8,  // 20: loop.internal.pb.ccip.PriceRegistryReader.GetTokenPrices:input_type -> loop.internal.pb.ccip.GetTokenPricesRequest
	10, // 21: loop.internal.pb.ccip.PriceRegistryReader.GetTokensDecimals:input_type -> loop.internal.pb.ccip.GetTokensDecimalsRequest
	21, // 22: loop.internal.pb.ccip.PriceRegistryReader.Close:input_type -> google.protobuf.Empty
	1,  // 23: loop.internal.pb.ccip.PriceRegistryReader.GetTokenPriceUpdatesCreatedAfter:output_type -> loop.internal.pb.ccip.GetTokenPriceUpdatesCreatedAfterResponse
	3,  // 24: loop.internal.pb.ccip.PriceRegistryReader.GetGasPriceUpdatesCreatedAfter:output_type -> loop.internal.pb.ccip.GetGasPriceUpdatesCreatedAfterResponse
	5,  // 25: loop.internal.pb.ccip.PriceRegistryReader.GetAllGasPriceUpdatesCreatedAfter:output_type -> loop.internal.pb.ccip.GetAllGasPriceUpdatesCreatedAfterResponse
	6,  // 26: loop.internal.pb.ccip.PriceRegistryReader.GetAddress:output_type -> loop.internal.pb.ccip.GetPriceRegistryAddressResponse
	7,  // 27: loop.internal.pb.ccip.PriceRegistryReader.GetFeeTokens:output_type -> loop.internal.pb.ccip.GetFeeTokensResponse
	9,  // 28: loop.internal.pb.ccip.PriceRegistryReader.GetTokenPrices:output_type -> loop.internal.pb.ccip.GetTokenPricesResponse
	11, // 29: loop.internal.pb.ccip.PriceRegistryReader.GetTokensDecimals:output_type -> loop.internal.pb.ccip.GetTokensDecimalsResponse
	21, // 30: loop.internal.pb.ccip.PriceRegistryReader.Close:output_type -> google.protobuf.Empty
	23, // [23:31] is the sub-list for method output_type
	15, // [15:23] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_priceregistry_proto_init() }
func file_priceregistry_proto_init() {
	if File_priceregistry_proto != nil {
		return
	}
	file_models_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_priceregistry_proto_rawDesc), len(file_priceregistry_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_priceregistry_proto_goTypes,
		DependencyIndexes: file_priceregistry_proto_depIdxs,
		MessageInfos:      file_priceregistry_proto_msgTypes,
	}.Build()
	File_priceregistry_proto = out.File
	file_priceregistry_proto_goTypes = nil
	file_priceregistry_proto_depIdxs = nil
}
