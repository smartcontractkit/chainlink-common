// Code generated by github.com/smartcontractkit/chainlink-common/pkg/capabilities/v2/protoc, DO NOT EDIT.

package http

import (
	"google.golang.org/protobuf/types/known/anypb"

	"google.golang.org/protobuf/types/known/emptypb"

	"github.com/smartcontractkit/chainlink-common/pkg/workflows/sdk/v2"
)

type Trigger struct {
	// TODO: https://smartcontract-it.atlassian.net/browse/CAPPL-799 allow defaults for capabilities
}

func (c Trigger) Request(/* TODO remove if empty in code gen*//*config *emptypb.Empty*/) sdk.Trigger[*TriggerRequest, *TriggerRequest] {
	configAny, _ := anypb.New(/*config*/ &emptypb.Empty{})
	return &triggerRequest{
		config: configAny,
	}
}

type triggerRequest struct {
	config *anypb.Any
}

func (*triggerRequest) IsTrigger() {}

func (*triggerRequest) NewT() *TriggerRequest {
	return &TriggerRequest{}
}

func (*triggerRequest) CapabilityID() string {
	return "http-trigger@0.1.0"
}

func (*triggerRequest) Method() string {
	return "Request"
}

func (t *triggerRequest) ConfigAsAny() *anypb.Any {
	return t.config
}

func (t *triggerRequest) Adapt(trigger *TriggerRequest) (*TriggerRequest, error) {
	return trigger, nil
}
