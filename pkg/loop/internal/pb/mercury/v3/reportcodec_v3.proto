syntax = "proto3";
// this is it's own package to avoid name collision with median types like OnchainConfig and BuildReport
option go_package = "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/mercury/v3;mercuryv3pb";

package loop.internal.pb.mercury.v3;


// note: the generate.go file in this dir specifies the import path of the relative proto files
import "loop/internal/pb/relayer.proto";

// ReportCodec is a gRPC adapter for the ReportCodec interface [pkg/types/mercury/v3/ReportCodec].
// NOTE: MaxReport and ObservationTimestampFromReport are common amongst all mercury versions, but BuildReport is not.
// in principle they could be refactor to be shared, but it's not clear if that's worth the effort.
service ReportCodec {
  rpc BuildReport (BuildReportRequest) returns (BuildReportReply) {}
  rpc MaxReportLength (MaxReportLengthRequest) returns (MaxReportLengthReply) {}
  rpc ObservationTimestampFromReport (ObservationTimestampFromReportRequest) returns (ObservationTimestampFromReportReply) {}
}

// ReportFields is a gRPC adapter for the ReportFields struct [pkg/types/mercury/v3/ReportFields].
message ReportFields {
  uint32 validFromTimestamp = 1;
  uint32 timestamp = 2;
  BigInt nativeFee = 3;
  BigInt linkFee = 4;
  uint32 expiresAt = 5;
  BigInt benchmarkPrice = 6;
  BigInt bid = 7;
  BigInt ask = 8;
}

// BuildReportRequest is gRPC adapter for the inputs arguments of [pkg/types/mercury/v3/ReportCodec.BuildReport].
message BuildReportRequest {
  ReportFields reportFields = 1;
} 

// BuildReportReply is gRPC adapter for the return values of [pkg/types/mercury/v3/ReportCodec.BuildReport].
message BuildReportReply {
  bytes report = 1;
}

// MaxReportLengthRequest is gRPC adapter for the input arguments of [github.com/smartcontractkit/chainlink-data-streams/mercury/v3/ReportCodec.MaxReportLength].
message MaxReportLengthRequest {
  uint64 numOracles = 1;
}

// MaxReportLengthReply is gRPC adapter for the return values of [github.com/smartcontractkit/chainlink-data-streams/mercury/v3/ReportCodec.MaxReportLength].
message MaxReportLengthReply {
  uint64 maxReportLength = 1;
}

// ObservationTimestampFromReportRequest is gRPC adapter for the input arguments [github.com/smartcontractkit/chainlink-data-streams/mercury/v3/ReportCodec.ObservationTimestampFromReport].
message ObservationTimestampFromReportRequest {
  bytes report = 1;
}
//ObservationTimestampFromReportReply is gRPC adapter for the return values of [github.com/smartcontractkit/chainlink-data-streams/mercury/v3/ReportCodec.ObservationTimestampFromReport].
message ObservationTimestampFromReportReply {
  uint32 timestamp = 1;
}
