package {{.GoPackageName}}

import (
    "errors"
    
    "google.golang.org/protobuf/types/known/anypb"

    "github.com/smartcontractkit/chainlink-common/pkg/workflows/sdk"
)

{{- range .Services}}
{{- $method := index .Methods 0 }}
type {{.GoName}} struct {
    *{{ $method.Input.GoIdent.GoName }}
    cachedAny *anypb.Any
}

func (*{{.GoName}}) Is{{$.Mode}}Trigger(){}

func (*{{.GoName}}) NewT() *{{ $method.Output.GoIdent.GoName }} {
    return &{{ $method.Output.GoIdent.GoName }}{}
}

func (*{{.GoName}}) Id() string {
    // TODO interfaces
    return "{{$.CapabilityId}}"
}

func (t *{{.GoName}}) ConfigAsAny() *anypb.Any {
    if t.cachedAny == nil {
        t.cachedAny, _ = anypb.New(t.{{ $method.Input.GoIdent.GoName }})
    }

    return t.cachedAny
}

{{- end }}