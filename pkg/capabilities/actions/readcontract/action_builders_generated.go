// Code generated by github.com/smartcontractkit/chainlink-common/pkg/capabilities/cli, DO NOT EDIT.

package readcontract

import (
	"github.com/smartcontractkit/chainlink-common/pkg/capabilities"
	"github.com/smartcontractkit/chainlink-common/pkg/workflows/sdk"
)

func (cfg Config) New(w *sdk.WorkflowSpecFactory, ref string, input ActionInput) OutputCap {

	def := sdk.StepDefinition{
		ID: "read-contract-action@1.0.0", Ref: ref,
		Inputs: input.ToSteps(),
		Config: map[string]any{
			"ContractAddress":      cfg.ContractAddress,
			"ContractName":         cfg.ContractName,
			"ContractReaderConfig": cfg.ContractReaderConfig,
			"ReadIdentifier":       cfg.ReadIdentifier,
		},
		CapabilityType: capabilities.CapabilityTypeAction,
	}

	step := sdk.Step[Output]{Definition: def}
	raw := step.AddTo(w)
	return OutputWrapper(raw)
}

// OutputWrapper allows access to field from an sdk.CapDefinition[Output]
func OutputWrapper(raw sdk.CapDefinition[Output]) OutputCap {
	wrapped, ok := raw.(OutputCap)
	if ok {
		return wrapped
	}
	return &outputCap{CapDefinition: raw}
}

type OutputCap interface {
	sdk.CapDefinition[Output]
	LatestValue() sdk.CapDefinition[any]
	private()
}

type outputCap struct {
	sdk.CapDefinition[Output]
}

func (*outputCap) private() {}
func (c *outputCap) LatestValue() sdk.CapDefinition[any] {
	return sdk.AccessField[Output, any](c.CapDefinition, "LatestValue")
}

func ConstantOutput(value Output) OutputCap {
	return &outputCap{CapDefinition: sdk.ConstantDefinition(value)}
}

func NewOutputFromFields(
	latestValue sdk.CapDefinition[any]) OutputCap {
	return &simpleOutput{
		CapDefinition: sdk.ComponentCapDefinition[Output]{
			"LatestValue": latestValue.Ref(),
		},
		latestValue: latestValue,
	}
}

type simpleOutput struct {
	sdk.CapDefinition[Output]
	latestValue sdk.CapDefinition[any]
}

func (c *simpleOutput) LatestValue() sdk.CapDefinition[any] {
	return c.latestValue
}

func (c *simpleOutput) private() {}

type ActionInput struct {
	ConfidenceLevel sdk.CapDefinition[string]
	Params          sdk.CapDefinition[InputParams]
}

func (input ActionInput) ToSteps() sdk.StepInputs {
	return sdk.StepInputs{
		Mapping: map[string]any{
			"ConfidenceLevel": input.ConfidenceLevel.Ref(),
			"Params":          input.Params.Ref(),
		},
	}
}
