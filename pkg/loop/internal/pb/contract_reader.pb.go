// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: loop/internal/pb/contract_reader.proto

package pb

import (
	codec "github.com/smartcontractkit/chainlink-common/pkg/internal/codec"
	chain_common "github.com/smartcontractkit/chainlink-common/pkg/loop/chain-common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetLatestValueRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.GetLatestValue].
type GetLatestValueRequest struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	ReadIdentifier string                  `protobuf:"bytes,1,opt,name=read_identifier,json=readIdentifier,proto3" json:"read_identifier,omitempty"`
	Confidence     chain_common.Confidence `protobuf:"varint,2,opt,name=confidence,proto3,enum=loop.chain.common.Confidence" json:"confidence,omitempty"`
	Params         *codec.VersionedBytes   `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
	AsValueType    bool                    `protobuf:"varint,4,opt,name=as_value_type,json=asValueType,proto3" json:"as_value_type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetLatestValueRequest) Reset() {
	*x = GetLatestValueRequest{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestValueRequest) ProtoMessage() {}

func (x *GetLatestValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestValueRequest.ProtoReflect.Descriptor instead.
func (*GetLatestValueRequest) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{0}
}

func (x *GetLatestValueRequest) GetReadIdentifier() string {
	if x != nil {
		return x.ReadIdentifier
	}
	return ""
}

func (x *GetLatestValueRequest) GetConfidence() chain_common.Confidence {
	if x != nil {
		return x.Confidence
	}
	return chain_common.Confidence(0)
}

func (x *GetLatestValueRequest) GetParams() *codec.VersionedBytes {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *GetLatestValueRequest) GetAsValueType() bool {
	if x != nil {
		return x.AsValueType
	}
	return false
}

// BatchGetLatestValuesRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.BatchGetLatestValues].
type BatchGetLatestValuesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Requests      []*ContractBatch       `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetLatestValuesRequest) Reset() {
	*x = BatchGetLatestValuesRequest{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetLatestValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetLatestValuesRequest) ProtoMessage() {}

func (x *BatchGetLatestValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetLatestValuesRequest.ProtoReflect.Descriptor instead.
func (*BatchGetLatestValuesRequest) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{1}
}

func (x *BatchGetLatestValuesRequest) GetRequests() []*ContractBatch {
	if x != nil {
		return x.Requests
	}
	return nil
}

// QueryKeyRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.QueryKey].
type QueryKeyRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Contract      *BoundContract             `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	Filter        *QueryKeyFilter            `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	LimitAndSort  *chain_common.LimitAndSort `protobuf:"bytes,3,opt,name=limit_and_sort,json=limitAndSort,proto3" json:"limit_and_sort,omitempty"`
	AsValueType   bool                       `protobuf:"varint,4,opt,name=as_value_type,json=asValueType,proto3" json:"as_value_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryKeyRequest) Reset() {
	*x = QueryKeyRequest{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeyRequest) ProtoMessage() {}

func (x *QueryKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeyRequest.ProtoReflect.Descriptor instead.
func (*QueryKeyRequest) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{2}
}

func (x *QueryKeyRequest) GetContract() *BoundContract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *QueryKeyRequest) GetFilter() *QueryKeyFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *QueryKeyRequest) GetLimitAndSort() *chain_common.LimitAndSort {
	if x != nil {
		return x.LimitAndSort
	}
	return nil
}

func (x *QueryKeyRequest) GetAsValueType() bool {
	if x != nil {
		return x.AsValueType
	}
	return false
}

// QueryKeysRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.QueryKeys].
type QueryKeysRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Filters       []*ContractKeyFilter       `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	LimitAndSort  *chain_common.LimitAndSort `protobuf:"bytes,2,opt,name=limit_and_sort,json=limitAndSort,proto3" json:"limit_and_sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryKeysRequest) Reset() {
	*x = QueryKeysRequest{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeysRequest) ProtoMessage() {}

func (x *QueryKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeysRequest.ProtoReflect.Descriptor instead.
func (*QueryKeysRequest) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{3}
}

func (x *QueryKeysRequest) GetFilters() []*ContractKeyFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *QueryKeysRequest) GetLimitAndSort() *chain_common.LimitAndSort {
	if x != nil {
		return x.LimitAndSort
	}
	return nil
}

type ContractKeyFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contract      *BoundContract         `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	Filter        *QueryKeyFilter        `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	AsValueType   bool                   `protobuf:"varint,4,opt,name=as_value_type,json=asValueType,proto3" json:"as_value_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContractKeyFilter) Reset() {
	*x = ContractKeyFilter{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContractKeyFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractKeyFilter) ProtoMessage() {}

func (x *ContractKeyFilter) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractKeyFilter.ProtoReflect.Descriptor instead.
func (*ContractKeyFilter) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{4}
}

func (x *ContractKeyFilter) GetContract() *BoundContract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *ContractKeyFilter) GetFilter() *QueryKeyFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ContractKeyFilter) GetAsValueType() bool {
	if x != nil {
		return x.AsValueType
	}
	return false
}

// BindRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.Bind].
type BindRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bindings      []*BoundContract       `protobuf:"bytes,1,rep,name=bindings,proto3" json:"bindings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BindRequest) Reset() {
	*x = BindRequest{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindRequest) ProtoMessage() {}

func (x *BindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindRequest.ProtoReflect.Descriptor instead.
func (*BindRequest) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{5}
}

func (x *BindRequest) GetBindings() []*BoundContract {
	if x != nil {
		return x.Bindings
	}
	return nil
}

// UnbindRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.Unbind].
type UnbindRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bindings      []*BoundContract       `protobuf:"bytes,1,rep,name=bindings,proto3" json:"bindings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnbindRequest) Reset() {
	*x = UnbindRequest{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnbindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindRequest) ProtoMessage() {}

func (x *UnbindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindRequest.ProtoReflect.Descriptor instead.
func (*UnbindRequest) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{6}
}

func (x *UnbindRequest) GetBindings() []*BoundContract {
	if x != nil {
		return x.Bindings
	}
	return nil
}

// GetLatestValueReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.GetLatestValue].
type GetLatestValueReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RetVal        *codec.VersionedBytes  `protobuf:"bytes,1,opt,name=ret_val,json=retVal,proto3" json:"ret_val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLatestValueReply) Reset() {
	*x = GetLatestValueReply{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestValueReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestValueReply) ProtoMessage() {}

func (x *GetLatestValueReply) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestValueReply.ProtoReflect.Descriptor instead.
func (*GetLatestValueReply) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{7}
}

func (x *GetLatestValueReply) GetRetVal() *codec.VersionedBytes {
	if x != nil {
		return x.RetVal
	}
	return nil
}

// GetLatestValueWithHeadDataReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.GetLatestValueWithHeadData].
type GetLatestValueWithHeadDataReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RetVal        *codec.VersionedBytes  `protobuf:"bytes,1,opt,name=ret_val,json=retVal,proto3" json:"ret_val,omitempty"`
	HeadData      *Head                  `protobuf:"bytes,2,opt,name=head_data,json=headData,proto3" json:"head_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLatestValueWithHeadDataReply) Reset() {
	*x = GetLatestValueWithHeadDataReply{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestValueWithHeadDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestValueWithHeadDataReply) ProtoMessage() {}

func (x *GetLatestValueWithHeadDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestValueWithHeadDataReply.ProtoReflect.Descriptor instead.
func (*GetLatestValueWithHeadDataReply) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{8}
}

func (x *GetLatestValueWithHeadDataReply) GetRetVal() *codec.VersionedBytes {
	if x != nil {
		return x.RetVal
	}
	return nil
}

func (x *GetLatestValueWithHeadDataReply) GetHeadData() *Head {
	if x != nil {
		return x.HeadData
	}
	return nil
}

// BatchGetLatestValuesReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.BatchGetLatestValues].
type BatchGetLatestValuesReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*ContractBatchResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetLatestValuesReply) Reset() {
	*x = BatchGetLatestValuesReply{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetLatestValuesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetLatestValuesReply) ProtoMessage() {}

func (x *BatchGetLatestValuesReply) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetLatestValuesReply.ProtoReflect.Descriptor instead.
func (*BatchGetLatestValuesReply) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{9}
}

func (x *BatchGetLatestValuesReply) GetResults() []*ContractBatchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// QueryKeyReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.QueryKey].
type QueryKeyReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sequences     []*Sequence            `protobuf:"bytes,1,rep,name=sequences,proto3" json:"sequences,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryKeyReply) Reset() {
	*x = QueryKeyReply{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeyReply) ProtoMessage() {}

func (x *QueryKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeyReply.ProtoReflect.Descriptor instead.
func (*QueryKeyReply) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{10}
}

func (x *QueryKeyReply) GetSequences() []*Sequence {
	if x != nil {
		return x.Sequences
	}
	return nil
}

// QueryKeysReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.QueryKeys].
type QueryKeysReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sequences     []*SequenceWithKey     `protobuf:"bytes,1,rep,name=sequences,proto3" json:"sequences,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryKeysReply) Reset() {
	*x = QueryKeysReply{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryKeysReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeysReply) ProtoMessage() {}

func (x *QueryKeysReply) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeysReply.ProtoReflect.Descriptor instead.
func (*QueryKeysReply) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{11}
}

func (x *QueryKeysReply) GetSequences() []*SequenceWithKey {
	if x != nil {
		return x.Sequences
	}
	return nil
}

// ContractBatch is gRPC adapter for the BatchGetLatestValuesRequest struct map value [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.BatchGetLatestValuesRequest].
type ContractBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contract      *BoundContract         `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	Reads         []*BatchRead           `protobuf:"bytes,2,rep,name=reads,proto3" json:"reads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContractBatch) Reset() {
	*x = ContractBatch{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContractBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractBatch) ProtoMessage() {}

func (x *ContractBatch) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractBatch.ProtoReflect.Descriptor instead.
func (*ContractBatch) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{12}
}

func (x *ContractBatch) GetContract() *BoundContract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *ContractBatch) GetReads() []*BatchRead {
	if x != nil {
		return x.Reads
	}
	return nil
}

// BatchCall is gRPC adapter for the GetLatestValueRequest struct [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.BatchCall].
type BatchRead struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReadName      string                 `protobuf:"bytes,1,opt,name=read_name,json=readName,proto3" json:"read_name,omitempty"`
	Params        *codec.VersionedBytes  `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	ReturnVal     *codec.VersionedBytes  `protobuf:"bytes,3,opt,name=return_val,json=returnVal,proto3" json:"return_val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchRead) Reset() {
	*x = BatchRead{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRead) ProtoMessage() {}

func (x *BatchRead) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRead.ProtoReflect.Descriptor instead.
func (*BatchRead) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{13}
}

func (x *BatchRead) GetReadName() string {
	if x != nil {
		return x.ReadName
	}
	return ""
}

func (x *BatchRead) GetParams() *codec.VersionedBytes {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *BatchRead) GetReturnVal() *codec.VersionedBytes {
	if x != nil {
		return x.ReturnVal
	}
	return nil
}

// ContractBatchResult is part of return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.BatchGetLatestValues].
type ContractBatchResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Contract      *BoundContract         `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	Results       []*BatchReadResult     `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContractBatchResult) Reset() {
	*x = ContractBatchResult{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContractBatchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractBatchResult) ProtoMessage() {}

func (x *ContractBatchResult) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractBatchResult.ProtoReflect.Descriptor instead.
func (*ContractBatchResult) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{14}
}

func (x *ContractBatchResult) GetContract() *BoundContract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *ContractBatchResult) GetResults() []*BatchReadResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// BatchCallResult is part of return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.BatchGetLatestValues].
type BatchReadResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReadName      string                 `protobuf:"bytes,1,opt,name=read_name,json=readName,proto3" json:"read_name,omitempty"`
	ReturnVal     *codec.VersionedBytes  `protobuf:"bytes,2,opt,name=return_val,json=returnVal,proto3" json:"return_val,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchReadResult) Reset() {
	*x = BatchReadResult{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchReadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchReadResult) ProtoMessage() {}

func (x *BatchReadResult) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchReadResult.ProtoReflect.Descriptor instead.
func (*BatchReadResult) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{15}
}

func (x *BatchReadResult) GetReadName() string {
	if x != nil {
		return x.ReadName
	}
	return ""
}

func (x *BatchReadResult) GetReturnVal() *codec.VersionedBytes {
	if x != nil {
		return x.ReturnVal
	}
	return nil
}

func (x *BatchReadResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Head is gRPC adapter for the Head struct [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.Head].
type Head struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Height        string                 `protobuf:"bytes,1,opt,name=height,proto3" json:"height,omitempty"`
	Hash          []byte                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Timestamp     uint64                 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Head) Reset() {
	*x = Head{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Head) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Head) ProtoMessage() {}

func (x *Head) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Head.ProtoReflect.Descriptor instead.
func (*Head) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{16}
}

func (x *Head) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *Head) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Head) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Head is gRPC adapter for the Head struct [github.com/smartcontractkit/chainlink-common/pkg/types.ContractReader.Sequence].
type Sequence struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SequenceCursor string                 `protobuf:"bytes,1,opt,name=sequence_cursor,json=sequenceCursor,proto3" json:"sequence_cursor,omitempty"`
	Head           *Head                  `protobuf:"bytes,2,opt,name=head,proto3" json:"head,omitempty"`
	Data           *codec.VersionedBytes  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	TxHash         []byte                 `protobuf:"bytes,4,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Sequence) Reset() {
	*x = Sequence{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sequence) ProtoMessage() {}

func (x *Sequence) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sequence.ProtoReflect.Descriptor instead.
func (*Sequence) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{17}
}

func (x *Sequence) GetSequenceCursor() string {
	if x != nil {
		return x.SequenceCursor
	}
	return ""
}

func (x *Sequence) GetHead() *Head {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *Sequence) GetData() *codec.VersionedBytes {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Sequence) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type SequenceWithKey struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SequenceCursor string                 `protobuf:"bytes,1,opt,name=sequence_cursor,json=sequenceCursor,proto3" json:"sequence_cursor,omitempty"`
	Head           *Head                  `protobuf:"bytes,2,opt,name=head,proto3" json:"head,omitempty"`
	Data           *codec.VersionedBytes  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Key            string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	TxHash         []byte                 `protobuf:"bytes,5,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SequenceWithKey) Reset() {
	*x = SequenceWithKey{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequenceWithKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequenceWithKey) ProtoMessage() {}

func (x *SequenceWithKey) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequenceWithKey.ProtoReflect.Descriptor instead.
func (*SequenceWithKey) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{18}
}

func (x *SequenceWithKey) GetSequenceCursor() string {
	if x != nil {
		return x.SequenceCursor
	}
	return ""
}

func (x *SequenceWithKey) GetHead() *Head {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *SequenceWithKey) GetData() *codec.VersionedBytes {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SequenceWithKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SequenceWithKey) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

// BoundContract represents a [github.com/smartcontractkit/chainlink-common/pkg/types.BoundContract].
type BoundContract struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoundContract) Reset() {
	*x = BoundContract{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoundContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoundContract) ProtoMessage() {}

func (x *BoundContract) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoundContract.ProtoReflect.Descriptor instead.
func (*BoundContract) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{19}
}

func (x *BoundContract) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BoundContract) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type QueryKeyFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Key   string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Expressions are lightweight orm like DSL defined for filtering over common blockchain primitives.
	Expression    []*chain_common.Expression `protobuf:"bytes,2,rep,name=expression,proto3" json:"expression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryKeyFilter) Reset() {
	*x = QueryKeyFilter{}
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryKeyFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeyFilter) ProtoMessage() {}

func (x *QueryKeyFilter) ProtoReflect() protoreflect.Message {
	mi := &file_loop_internal_pb_contract_reader_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeyFilter.ProtoReflect.Descriptor instead.
func (*QueryKeyFilter) Descriptor() ([]byte, []int) {
	return file_loop_internal_pb_contract_reader_proto_rawDescGZIP(), []int{20}
}

func (x *QueryKeyFilter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *QueryKeyFilter) GetExpression() []*chain_common.Expression {
	if x != nil {
		return x.Expression
	}
	return nil
}

var File_loop_internal_pb_contract_reader_proto protoreflect.FileDescriptor

const file_loop_internal_pb_contract_reader_proto_rawDesc = "" +
	"\n" +
	"&loop/internal/pb/contract_reader.proto\x12\x04loop\x1a\x1ainternal/codec/codec.proto\x1a\x1dloop/chain-common/query.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xd2\x01\n" +
	"\x15GetLatestValueRequest\x12'\n" +
	"\x0fread_identifier\x18\x01 \x01(\tR\x0ereadIdentifier\x12=\n" +
	"\n" +
	"confidence\x18\x02 \x01(\x0e2\x1d.loop.chain.common.ConfidenceR\n" +
	"confidence\x12-\n" +
	"\x06params\x18\x03 \x01(\v2\x15.codec.VersionedBytesR\x06params\x12\"\n" +
	"\ras_value_type\x18\x04 \x01(\bR\vasValueType\"N\n" +
	"\x1bBatchGetLatestValuesRequest\x12/\n" +
	"\brequests\x18\x01 \x03(\v2\x13.loop.ContractBatchR\brequests\"\xdb\x01\n" +
	"\x0fQueryKeyRequest\x12/\n" +
	"\bcontract\x18\x01 \x01(\v2\x13.loop.BoundContractR\bcontract\x12,\n" +
	"\x06filter\x18\x02 \x01(\v2\x14.loop.QueryKeyFilterR\x06filter\x12E\n" +
	"\x0elimit_and_sort\x18\x03 \x01(\v2\x1f.loop.chain.common.LimitAndSortR\flimitAndSort\x12\"\n" +
	"\ras_value_type\x18\x04 \x01(\bR\vasValueType\"\x8c\x01\n" +
	"\x10QueryKeysRequest\x121\n" +
	"\afilters\x18\x01 \x03(\v2\x17.loop.ContractKeyFilterR\afilters\x12E\n" +
	"\x0elimit_and_sort\x18\x02 \x01(\v2\x1f.loop.chain.common.LimitAndSortR\flimitAndSort\"\x96\x01\n" +
	"\x11ContractKeyFilter\x12/\n" +
	"\bcontract\x18\x01 \x01(\v2\x13.loop.BoundContractR\bcontract\x12,\n" +
	"\x06filter\x18\x02 \x01(\v2\x14.loop.QueryKeyFilterR\x06filter\x12\"\n" +
	"\ras_value_type\x18\x04 \x01(\bR\vasValueType\">\n" +
	"\vBindRequest\x12/\n" +
	"\bbindings\x18\x01 \x03(\v2\x13.loop.BoundContractR\bbindings\"@\n" +
	"\rUnbindRequest\x12/\n" +
	"\bbindings\x18\x01 \x03(\v2\x13.loop.BoundContractR\bbindings\"E\n" +
	"\x13GetLatestValueReply\x12.\n" +
	"\aret_val\x18\x01 \x01(\v2\x15.codec.VersionedBytesR\x06retVal\"z\n" +
	"\x1fGetLatestValueWithHeadDataReply\x12.\n" +
	"\aret_val\x18\x01 \x01(\v2\x15.codec.VersionedBytesR\x06retVal\x12'\n" +
	"\thead_data\x18\x02 \x01(\v2\n" +
	".loop.HeadR\bheadData\"P\n" +
	"\x19BatchGetLatestValuesReply\x123\n" +
	"\aresults\x18\x01 \x03(\v2\x19.loop.ContractBatchResultR\aresults\"=\n" +
	"\rQueryKeyReply\x12,\n" +
	"\tsequences\x18\x01 \x03(\v2\x0e.loop.SequenceR\tsequences\"E\n" +
	"\x0eQueryKeysReply\x123\n" +
	"\tsequences\x18\x01 \x03(\v2\x15.loop.SequenceWithKeyR\tsequences\"g\n" +
	"\rContractBatch\x12/\n" +
	"\bcontract\x18\x01 \x01(\v2\x13.loop.BoundContractR\bcontract\x12%\n" +
	"\x05reads\x18\x02 \x03(\v2\x0f.loop.BatchReadR\x05reads\"\x8d\x01\n" +
	"\tBatchRead\x12\x1b\n" +
	"\tread_name\x18\x01 \x01(\tR\breadName\x12-\n" +
	"\x06params\x18\x02 \x01(\v2\x15.codec.VersionedBytesR\x06params\x124\n" +
	"\n" +
	"return_val\x18\x03 \x01(\v2\x15.codec.VersionedBytesR\treturnVal\"w\n" +
	"\x13ContractBatchResult\x12/\n" +
	"\bcontract\x18\x01 \x01(\v2\x13.loop.BoundContractR\bcontract\x12/\n" +
	"\aresults\x18\x02 \x03(\v2\x15.loop.BatchReadResultR\aresults\"z\n" +
	"\x0fBatchReadResult\x12\x1b\n" +
	"\tread_name\x18\x01 \x01(\tR\breadName\x124\n" +
	"\n" +
	"return_val\x18\x02 \x01(\v2\x15.codec.VersionedBytesR\treturnVal\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"P\n" +
	"\x04Head\x12\x16\n" +
	"\x06height\x18\x01 \x01(\tR\x06height\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\fR\x04hash\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp\"\x97\x01\n" +
	"\bSequence\x12'\n" +
	"\x0fsequence_cursor\x18\x01 \x01(\tR\x0esequenceCursor\x12\x1e\n" +
	"\x04head\x18\x02 \x01(\v2\n" +
	".loop.HeadR\x04head\x12)\n" +
	"\x04data\x18\x03 \x01(\v2\x15.codec.VersionedBytesR\x04data\x12\x17\n" +
	"\atx_hash\x18\x04 \x01(\fR\x06txHash\"\xb0\x01\n" +
	"\x0fSequenceWithKey\x12'\n" +
	"\x0fsequence_cursor\x18\x01 \x01(\tR\x0esequenceCursor\x12\x1e\n" +
	"\x04head\x18\x02 \x01(\v2\n" +
	".loop.HeadR\x04head\x12)\n" +
	"\x04data\x18\x03 \x01(\v2\x15.codec.VersionedBytesR\x04data\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x12\x17\n" +
	"\atx_hash\x18\x05 \x01(\fR\x06txHash\"=\n" +
	"\rBoundContract\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"a\n" +
	"\x0eQueryKeyFilter\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12=\n" +
	"\n" +
	"expression\x18\x02 \x03(\v2\x1d.loop.chain.common.ExpressionR\n" +
	"expression2\x83\x04\n" +
	"\x0eContractReader\x12J\n" +
	"\x0eGetLatestValue\x12\x1b.loop.GetLatestValueRequest\x1a\x19.loop.GetLatestValueReply\"\x00\x12b\n" +
	"\x1aGetLatestValueWithHeadData\x12\x1b.loop.GetLatestValueRequest\x1a%.loop.GetLatestValueWithHeadDataReply\"\x00\x12\\\n" +
	"\x14BatchGetLatestValues\x12!.loop.BatchGetLatestValuesRequest\x1a\x1f.loop.BatchGetLatestValuesReply\"\x00\x128\n" +
	"\bQueryKey\x12\x15.loop.QueryKeyRequest\x1a\x13.loop.QueryKeyReply\"\x00\x12;\n" +
	"\tQueryKeys\x12\x16.loop.QueryKeysRequest\x1a\x14.loop.QueryKeysReply\"\x00\x123\n" +
	"\x04Bind\x12\x11.loop.BindRequest\x1a\x16.google.protobuf.Empty\"\x00\x127\n" +
	"\x06Unbind\x12\x13.loop.UnbindRequest\x1a\x16.google.protobuf.Empty\"\x00BCZAgithub.com/smartcontractkit/chainlink-common/pkg/loop/internal/pbb\x06proto3"

var (
	file_loop_internal_pb_contract_reader_proto_rawDescOnce sync.Once
	file_loop_internal_pb_contract_reader_proto_rawDescData []byte
)

func file_loop_internal_pb_contract_reader_proto_rawDescGZIP() []byte {
	file_loop_internal_pb_contract_reader_proto_rawDescOnce.Do(func() {
		file_loop_internal_pb_contract_reader_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_loop_internal_pb_contract_reader_proto_rawDesc), len(file_loop_internal_pb_contract_reader_proto_rawDesc)))
	})
	return file_loop_internal_pb_contract_reader_proto_rawDescData
}

var file_loop_internal_pb_contract_reader_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_loop_internal_pb_contract_reader_proto_goTypes = []any{
	(*GetLatestValueRequest)(nil),           // 0: loop.GetLatestValueRequest
	(*BatchGetLatestValuesRequest)(nil),     // 1: loop.BatchGetLatestValuesRequest
	(*QueryKeyRequest)(nil),                 // 2: loop.QueryKeyRequest
	(*QueryKeysRequest)(nil),                // 3: loop.QueryKeysRequest
	(*ContractKeyFilter)(nil),               // 4: loop.ContractKeyFilter
	(*BindRequest)(nil),                     // 5: loop.BindRequest
	(*UnbindRequest)(nil),                   // 6: loop.UnbindRequest
	(*GetLatestValueReply)(nil),             // 7: loop.GetLatestValueReply
	(*GetLatestValueWithHeadDataReply)(nil), // 8: loop.GetLatestValueWithHeadDataReply
	(*BatchGetLatestValuesReply)(nil),       // 9: loop.BatchGetLatestValuesReply
	(*QueryKeyReply)(nil),                   // 10: loop.QueryKeyReply
	(*QueryKeysReply)(nil),                  // 11: loop.QueryKeysReply
	(*ContractBatch)(nil),                   // 12: loop.ContractBatch
	(*BatchRead)(nil),                       // 13: loop.BatchRead
	(*ContractBatchResult)(nil),             // 14: loop.ContractBatchResult
	(*BatchReadResult)(nil),                 // 15: loop.BatchReadResult
	(*Head)(nil),                            // 16: loop.Head
	(*Sequence)(nil),                        // 17: loop.Sequence
	(*SequenceWithKey)(nil),                 // 18: loop.SequenceWithKey
	(*BoundContract)(nil),                   // 19: loop.BoundContract
	(*QueryKeyFilter)(nil),                  // 20: loop.QueryKeyFilter
	(chain_common.Confidence)(0),            // 21: loop.chain.common.Confidence
	(*codec.VersionedBytes)(nil),            // 22: codec.VersionedBytes
	(*chain_common.LimitAndSort)(nil),       // 23: loop.chain.common.LimitAndSort
	(*chain_common.Expression)(nil),         // 24: loop.chain.common.Expression
	(*emptypb.Empty)(nil),                   // 25: google.protobuf.Empty
}
var file_loop_internal_pb_contract_reader_proto_depIdxs = []int32{
	21, // 0: loop.GetLatestValueRequest.confidence:type_name -> loop.chain.common.Confidence
	22, // 1: loop.GetLatestValueRequest.params:type_name -> codec.VersionedBytes
	12, // 2: loop.BatchGetLatestValuesRequest.requests:type_name -> loop.ContractBatch
	19, // 3: loop.QueryKeyRequest.contract:type_name -> loop.BoundContract
	20, // 4: loop.QueryKeyRequest.filter:type_name -> loop.QueryKeyFilter
	23, // 5: loop.QueryKeyRequest.limit_and_sort:type_name -> loop.chain.common.LimitAndSort
	4,  // 6: loop.QueryKeysRequest.filters:type_name -> loop.ContractKeyFilter
	23, // 7: loop.QueryKeysRequest.limit_and_sort:type_name -> loop.chain.common.LimitAndSort
	19, // 8: loop.ContractKeyFilter.contract:type_name -> loop.BoundContract
	20, // 9: loop.ContractKeyFilter.filter:type_name -> loop.QueryKeyFilter
	19, // 10: loop.BindRequest.bindings:type_name -> loop.BoundContract
	19, // 11: loop.UnbindRequest.bindings:type_name -> loop.BoundContract
	22, // 12: loop.GetLatestValueReply.ret_val:type_name -> codec.VersionedBytes
	22, // 13: loop.GetLatestValueWithHeadDataReply.ret_val:type_name -> codec.VersionedBytes
	16, // 14: loop.GetLatestValueWithHeadDataReply.head_data:type_name -> loop.Head
	14, // 15: loop.BatchGetLatestValuesReply.results:type_name -> loop.ContractBatchResult
	17, // 16: loop.QueryKeyReply.sequences:type_name -> loop.Sequence
	18, // 17: loop.QueryKeysReply.sequences:type_name -> loop.SequenceWithKey
	19, // 18: loop.ContractBatch.contract:type_name -> loop.BoundContract
	13, // 19: loop.ContractBatch.reads:type_name -> loop.BatchRead
	22, // 20: loop.BatchRead.params:type_name -> codec.VersionedBytes
	22, // 21: loop.BatchRead.return_val:type_name -> codec.VersionedBytes
	19, // 22: loop.ContractBatchResult.contract:type_name -> loop.BoundContract
	15, // 23: loop.ContractBatchResult.results:type_name -> loop.BatchReadResult
	22, // 24: loop.BatchReadResult.return_val:type_name -> codec.VersionedBytes
	16, // 25: loop.Sequence.head:type_name -> loop.Head
	22, // 26: loop.Sequence.data:type_name -> codec.VersionedBytes
	16, // 27: loop.SequenceWithKey.head:type_name -> loop.Head
	22, // 28: loop.SequenceWithKey.data:type_name -> codec.VersionedBytes
	24, // 29: loop.QueryKeyFilter.expression:type_name -> loop.chain.common.Expression
	0,  // 30: loop.ContractReader.GetLatestValue:input_type -> loop.GetLatestValueRequest
	0,  // 31: loop.ContractReader.GetLatestValueWithHeadData:input_type -> loop.GetLatestValueRequest
	1,  // 32: loop.ContractReader.BatchGetLatestValues:input_type -> loop.BatchGetLatestValuesRequest
	2,  // 33: loop.ContractReader.QueryKey:input_type -> loop.QueryKeyRequest
	3,  // 34: loop.ContractReader.QueryKeys:input_type -> loop.QueryKeysRequest
	5,  // 35: loop.ContractReader.Bind:input_type -> loop.BindRequest
	6,  // 36: loop.ContractReader.Unbind:input_type -> loop.UnbindRequest
	7,  // 37: loop.ContractReader.GetLatestValue:output_type -> loop.GetLatestValueReply
	8,  // 38: loop.ContractReader.GetLatestValueWithHeadData:output_type -> loop.GetLatestValueWithHeadDataReply
	9,  // 39: loop.ContractReader.BatchGetLatestValues:output_type -> loop.BatchGetLatestValuesReply
	10, // 40: loop.ContractReader.QueryKey:output_type -> loop.QueryKeyReply
	11, // 41: loop.ContractReader.QueryKeys:output_type -> loop.QueryKeysReply
	25, // 42: loop.ContractReader.Bind:output_type -> google.protobuf.Empty
	25, // 43: loop.ContractReader.Unbind:output_type -> google.protobuf.Empty
	37, // [37:44] is the sub-list for method output_type
	30, // [30:37] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_loop_internal_pb_contract_reader_proto_init() }
func file_loop_internal_pb_contract_reader_proto_init() {
	if File_loop_internal_pb_contract_reader_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_loop_internal_pb_contract_reader_proto_rawDesc), len(file_loop_internal_pb_contract_reader_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_loop_internal_pb_contract_reader_proto_goTypes,
		DependencyIndexes: file_loop_internal_pb_contract_reader_proto_depIdxs,
		MessageInfos:      file_loop_internal_pb_contract_reader_proto_msgTypes,
	}.Build()
	File_loop_internal_pb_contract_reader_proto = out.File
	file_loop_internal_pb_contract_reader_proto_goTypes = nil
	file_loop_internal_pb_contract_reader_proto_depIdxs = nil
}
