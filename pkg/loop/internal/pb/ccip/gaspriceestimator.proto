syntax = "proto3";

option go_package = "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/ccip;ccippb";

package loop.internal.pb.ccip;
import "google/protobuf/empty.proto";
import "loop/internal/pb/relayer.proto";
import "loop/internal/pb/ccip/models.proto";

// GasPriceEstimatorExec is a gRPC service adapter for the interface
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorExec]
service GasPriceEstimatorExec {
  rpc GetGasPrice(google.protobuf.Empty) returns (GetGasPriceResponse);
  rpc DenoteInUSD(DenoteInUSDRequest) returns (DenoteInUSDResponse);
  rpc EstimateMsgCostUSD(EstimateMsgCostUSDRequest) returns (EstimateMsgCostUSDResponse);
  // TODO CCIP-1882: reconcile gas price estimator to remove unnecessary interface funcs
  rpc Median(MedianRequest) returns (MedianResponse);
}

// GasPriceEstimatorCommit is a gRPC service adapter for the interface
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorCommit]
service GasPriceEstimatorCommit {
    rpc GetGasPrice(google.protobuf.Empty) returns (GetGasPriceResponse);
    rpc DenoteInUSD(DenoteInUSDRequest) returns (DenoteInUSDResponse);
    // TODO CCIP-1882: reconcile gas price estimator to remove unnecessary interface funcs
    rpc Median(MedianRequest) returns (MedianResponse);
    rpc Deviates(DeviatesRequest) returns (DeviatesResponse);
}

// GetGasPriceResponse returns the current gas price. It is a gRPC adpater for the return values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorExec.GetGasPrice]
message GetGasPriceResponse {
    BigInt gas_price = 1;
}

// DenoteInUSDRequest is a gRPC adapter for the input values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorExec.DenoteInUSD]
message DenoteInUSDRequest {
    BigInt p = 1;
    BigInt wrapped_native_price = 2;
}

// DenoteInUSDResponse returns the price in USD. It is a gRPC adapter for the return values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorExec.DenoteInUSD]
message DenoteInUSDResponse {
    BigInt usd_price = 1;
}

// EstimateMsgCostUSDRequest is a gRPC adapter for the input values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorExec.EstimateMsgCostUSD]
message EstimateMsgCostUSDRequest {
    BigInt p = 1;
    BigInt wrapped_native_price = 2;
    EVM2EVMOnRampCCIPSendRequestedWithMeta msg = 3;
}

// EstimateMsgCostUSDResponse returns the estimated cost in USD. It is a gRPC adapter for the return values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorExec.EstimateMsgCostUSD]
message EstimateMsgCostUSDResponse {
    BigInt usd_cost = 1;
}


// MedianRequest is a gRPC adapter for the input values of 
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.CommonGasPriceEstimator.Median]
message MedianRequest {
   repeated BigInt gas_prices = 1;
}

// MedianResponse returns the median gas price. It is a gRPC adapter for the return values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.CommonGasPriceEstimator.Median]
message MedianResponse {
    BigInt gas_price = 1;
}

// DeviatesRequest is a gRPC adapter for the input values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorCommit.Deviates]
message DeviatesRequest {
    BigInt p1 = 1;
    BigInt p2 = 2;
}

// DeviatesResponse returns the deviation between two gas prices. It is a gRPC adapter for the return values of
// [github.com/smartcontractkit/chainlink-common/pkg/types/ccip.GasPriceEstimatorCommit.Deviates]
message DeviatesResponse {
    bool deviates = 1;
}
